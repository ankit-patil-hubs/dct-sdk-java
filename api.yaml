#
# Copyright (c) 2022, 2024 by Delphix. All rights reserved.
#
openapi: 3.0.0
info:
  title: Delphix DCT API
  version: '3.9.0'
  description: Delphix DCT API
  contact:
    name: Delphix Support
    url: https://support.delphix.com
    email: support@delphix.com
servers:
  - url: '/v3'

paths:
  /connectors/{connectorId}/test:
    post:
      tags:
        - Connectors
      summary: Checks connectivity between a masking engine and a remote data source.
      operationId: connectors_test
      parameters:
        - $ref: '#/components/parameters/connectorIdParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ConnectorTestResponse'
  /hyperscale-instances:
    post:
      tags:
        - HyperscaleInstance
      summary: Register a Hyperscale instance
      operationId: register_hyperscale_instance
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hyperscale_instance
              $ref: "#/components/schemas/HyperscaleInstanceRegistrationParameter"
        description: The parameters to register a Hyperscale instance.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/HyperscaleInstance'
    get:
      tags:
        - HyperscaleInstance
      summary: Returns a list of Hyperscale instances.
      operationId: get_hyperscale_instances
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hyperscaleInstancesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListHyperscaleInstancesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleInstance'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /hyperscale-instances/search:
    post:
      summary: Search for Hyperscale instances.
      operationId: search_hyperscale_instances
      tags:
        - HyperscaleInstance
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          hostname:
            type: string
          creation_date:
            type: string
          data_type:
            type: string
          insecure_ssl:
            type: boolean
          unsafe_ssl_hostname_check:
            type: boolean
          truststore_filename:
            type: string
          status:
            type: string
          connection_status:
            type: string
          connection_status_details:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hyperscaleInstancesSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchHyperscaleInstancesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleInstance'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /hyperscale-instances/{hyperscaleInstanceId}:
    parameters:
      - $ref: "#/components/parameters/hyperscaleInstanceId"
    get:
      tags:
        - HyperscaleInstance
      summary: Returns a Hyperscale Instance by ID.
      operationId: get_hyperscale_instance_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/HyperscaleInstance'
    patch:
      tags:
        - HyperscaleInstance
      summary: Update an Hyperscale Instance
      operationId: update_hyperscale_instance
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hyperscale_instance_update_params
              $ref: "#/components/schemas/HyperscaleInstanceUpdateParams"
        description: Update parameters for a hyperscale instance.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/HyperscaleInstance'
    delete:
      tags:
        - HyperscaleInstance
      summary: Unregister a Hyperscale Instance.
      operationId: unregister_hyperscale_instance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UnregisterHyperscaleInstanceResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /hyperscale-instances/{hyperscaleInstanceId}/tags:
    parameters:
      - $ref: '#/components/parameters/hyperscaleInstanceId'
    post:
      tags:
        - HyperscaleInstance
      summary: Create tags for a Hyperscale Instance.
      operationId: create_hyperscale_instance_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hyperscale_instance_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Hyperscale Instance.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - HyperscaleInstance
      summary: Get tags for a Hyperscale Instance.
      operationId: get_hyperscale_instance_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /hyperscale-instances/{hyperscaleInstanceId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/hyperscaleInstanceId'
    post:
      tags:
        - HyperscaleInstance
      summary: Delete tags for a Hyperscale Instance.
      operationId: delete_hyperscale_instance_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /hyperscale-instances/{hyperscaleInstanceId}/sync-engines:
    parameters:
      - $ref: '#/components/parameters/hyperscaleInstanceId'
    post:
      tags:
        - HyperscaleInstance
      summary: Sync the global object from a source engine to engines on a Hyperscale Instance.
      operationId: sync_engines_hyperscale_instance
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: sync_engines_hyperscale_parameter
              $ref: "#/components/schemas/SyncEnginesHyperscaleParameters"
              required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SyncEnginesHyperscaleResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /hyperscale-instances/{hyperscaleInstanceId}/add-engine:
    parameters:
      - $ref: '#/components/parameters/hyperscaleInstanceId'
    post:
      tags:
        - HyperscaleInstance
      summary: Add an engine to a Hyperscale Instance.
      operationId: add_engine_to_hyperscale_instance
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: engine_id
              $ref: "#/components/schemas/EngineIdBody"
        description: Body containing the ID of the registered engine.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: AddEngineToHyperscaleResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /hyperscale-instances/{hyperscaleInstanceId}/remove-engine:
    parameters:
      - $ref: '#/components/parameters/hyperscaleInstanceId'
    post:
      tags:
        - HyperscaleInstance
      summary: Remove an engine from a Hyperscale Instance.
      operationId: remove_engine_from_hyperscale_instance
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: engine_id
              $ref: "#/components/schemas/EngineIdBody"
        description: Body containing the ID of the registered engine.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: RemoveEngineFromHyperscaleResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /hyperscale-mount-points:
    get:
      tags:
        - HyperscaleObjects
      summary: Returns a list of Hyperscale Mount Points.
      operationId: get_hyperscale_mount_points
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hyperscaleMountPointsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListHyperscaleMountPointsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleMountPoint'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      tags:
        - HyperscaleObjects
      summary: Create a Hyperscale Mount Point
      operationId: create_hyperscale_mount_point
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hyperscale_mount_point
              $ref: "#/components/schemas/HyperscaleMountPoint"
        description: Request to create a Hyperscale Mount Point.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: CreateHyperscaleMountPointResponse
                properties:
                  id:
                    type: string
                    description: The created Hyperscale Mount Point's ID
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /hyperscale-mount-points/{hyperscaleMountPointId}:
    parameters:
      - $ref: '#/components/parameters/hyperscaleMountPointIdParam'
    get:
      tags:
        - HyperscaleObjects
      summary: Get a Hyperscale Mount Points.
      operationId: get_hyperscale_mount_point_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperscaleMountPoint'
    patch:
      tags:
        - HyperscaleObjects
      summary: Update a Hyperscale Mount Point by ID.
      operationId: update_hyperscale_mount_point_by_id
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_hyperscale_mount_point_parameter
              $ref: '#/components/schemas/HyperscaleMountPointUpdateParameters'
        description: The new data to update a Hyperscale Mount Point.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateHyperscaleMountPointResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    delete:
      tags:
        - HyperscaleObjects
      summary: Delete a Hyperscale Mount Point.
      operationId: delete_hyperscale_mount_point
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DeleteHyperscaleMountPointResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /hyperscale-mount-points/search:
    post:
      summary: Search for Hyperscale Mount Points.
      operationId: search_hyperscale_mount_points
      tags:
        - HyperscaleObjects
      x-filterable:
        fields:
          id:
            type: string
          hyperscale_instance_id:
            type: string
          name:
            type: string
          hostname:
            type: string
          mount_type:
            type: string
          mount_path:
            type: string
          options:
            type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hyperscaleMountPointsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchHyperscaleMountPointsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleMountPoint'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /hyperscale-connectors:
    get:
      tags:
        - HyperscaleObjects
      summary: Returns a list of Hyperscale Connectors.
      operationId: get_hyperscale_connectors
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hyperscaleConnectorsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListHyperscaleConnectorsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleConnector'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      tags:
        - HyperscaleObjects
      summary: Create a Hyperscale Connector.
      operationId: create_hyperscale_connector
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hyperscale_connector
              $ref: '#/components/schemas/HyperscaleConnectorCreateParameters'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: CreateHyperscaleConnectorResponse
                properties:
                  id:
                    type: string
                    description: The created Hyperscale Connector's ID.
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /hyperscale-connectors/{hyperscaleConnectorId}:
    parameters:
      - $ref: '#/components/parameters/hyperscaleConnectorIdParam'
    get:
      tags:
        - HyperscaleObjects
      summary: Get a Hyperscale Connector.
      operationId: get_hyperscale_connector_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperscaleConnector'
    patch:
      tags:
        - HyperscaleObjects
      summary: Update a Hyperscale Connector by ID.
      operationId: update_hyperscale_connector_by_id
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_hyperscale_connector_parameter
              $ref: '#/components/schemas/HyperscaleConnectorUpdateParameters'
        description: The new data to update a Hyperscale Connector.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateHyperscaleConnectorResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    delete:
      tags:
        - HyperscaleObjects
      summary: Delete a Hyperscale Connector.
      operationId: delete_hyperscale_connector
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DeleteHyperscaleConnectorResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /hyperscale-connectors/{hyperscaleConnectorId}/tags:
    parameters:
      - $ref: '#/components/parameters/hyperscaleConnectorIdParam'
    post:
      tags:
        - HyperscaleObjects
      summary: Create tags for a Hyperscale Connector.
      operationId: create_hyperscale_connector_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hyperscale_connector_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tag information for a Hyperscale Connector.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - HyperscaleObjects
      summary: Get tags for a Hyperscale Connector.
      operationId: get_hyperscale_connector_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /hyperscale-connectors/{hyperscaleConnectorId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/hyperscaleConnectorIdParam'
    post:
      tags:
        - HyperscaleObjects
      summary: Delete tags for a Hyperscale Connector.
      operationId: delete_hyperscale_connector_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /hyperscale-connectors/search:
    post:
      summary: Search for Hyperscale Connectors.
      operationId: search_hyperscale_connectors
      tags:
        - HyperscaleObjects
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          hyperscale_instance_id:
            type: string
          data_type:
            type: string
          source_username:
            type: string
          source_jdbc_url:
            type: string
          source_mongo_url:
            type: string
          source_filesystem_path:
            type: string
          target_username:
            type: string
          target_jdbc_url:
            type: string
          target_mongo_url:
            type: string
          target_filesystem_path:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hyperscaleConnectorsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchHyperscaleConnectorsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleConnector'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /hyperscale-datasets:
    get:
      tags:
        - HyperscaleObjects
      summary: Returns a list of Hyperscale Datasets.
      operationId: get_hyperscale_datasets
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hyperscaleDatasetsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListHyperscaleDatasetsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleDataset'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /hyperscale-datasets/{hyperscaleDatasetId}:
    parameters:
      - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
    get:
      tags:
        - HyperscaleObjects
      summary: Get a Hyperscale Dataset.
      operationId: get_hyperscale_dataset_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperscaleDataset'
    patch:
      tags:
        - HyperscaleObjects
      summary: Update a Hyperscale Dataset by ID.
      operationId: update_hyperscale_dataset_by_id
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_hyperscale_dataset_parameter
              $ref: '#/components/schemas/HyperscaleDatasetUpdateParameters'
        description: The new data to update a Hyperscale Dataset.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateHyperscaleDatasetResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /hyperscale-datasets/{hyperscaleDatasetId}/tags:
    parameters:
      - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
    post:
      tags:
        - HyperscaleObjects
      summary: Create tags for a Hyperscale Dataset.
      operationId: create_hyperscale_dataset_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hyperscale_dataset_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tag information for a Hyperscale Dataset.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - HyperscaleObjects
      summary: Get tags for a Hyperscale Dataset.
      operationId: get_hyperscale_dataset_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /hyperscale-datasets/{hyperscaleDatasetId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
    post:
      tags:
        - HyperscaleObjects
      summary: Delete tags for a Hyperscale Dataset.
      operationId: delete_hyperscale_dataset_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /hyperscale-datasets/{hyperscaleDatasetId}/tables-or-files/{hyperscaleDatasetTableOrFileId}:
    parameters:
      - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
      - $ref: '#/components/parameters/hyperscaleDatasetTableOrFileIdParam'
    get:
      tags:
        - HyperscaleObjects
      summary: Get a Hyperscale Dataset table or file by ID.
      operationId: get_hyperscale_dataset_table_or_file_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperscaleDatasetTableOrFile'
    patch:
      tags:
        - HyperscaleObjects
      summary: Update a Hyperscale Dataset table or file by ID.
      operationId: update_hyperscale_dataset_table_or_file_by_id
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_hyperscale_dataset_table_or_file_parameter
              $ref: '#/components/schemas/HyperscaleDatasetTableOrFileUpdateParameters'
        description: The new data to update a Hyperscale Dataset table or file.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateHyperscaleDatasetTableOrFileResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /hyperscale-datasets/{hyperscaleDatasetId}/tables-or-files:
    parameters:
      - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/hyperscaleDatasetTablesOrFilesSortParam'
    get:
      tags:
        - HyperscaleObjects
      summary: Get the tables or files of a hyperscale dataset
      operationId: get_hyperscale_dataset_tables_or_files
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListHyperscaleDatasetTablesOrFilesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleDatasetTableOrFile'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /hyperscale-datasets/{hyperscaleDatasetId}/tables-or-files/search:
    parameters:
      - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/hyperscaleDatasetTablesOrFilesSortParam'
    post:
      tags:
        - HyperscaleObjects
      x-filterable:
        fields:
          id:
            type: string
          schema_name:
            type: string
          table_name:
            type: string
          filter_key:
            type: string
          column_array_rows:
            type: integer
          unload_split:
            type: integer
          stream_size:
            type: integer
          masking_inventory:
            type: array[object]
            fields:
              field_name:
                type: string
              domain_name:
                type: string
              algorithm_name:
                type: string
              date_format:
                type: string
              algorithm_field_name:
                type: string
              algorithm_group_no:
                type: integer
      summary: Search the tables or files of a hyperscale dataset
      operationId: search_hyperscale_dataset_tables_or_files
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchHyperscaleDatasetTablesOrFilesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleDatasetTableOrFile'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /hyperscale-datasets/search:
    post:
      summary: Search for Hyperscale Datasets.
      operationId: search_hyperscale_datasets
      tags:
        - HyperscaleObjects
      x-filterable:
        fields:
          id:
            type: string
          hyperscale_instance_id:
            type: string
          data_type:
            type: string
          mount_point_id:
            type: string
          connector_id:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hyperscaleDatasetsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchHyperscaleDatasetsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleDataset'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /management/engines:
    post:
      tags:
        - Management
      summary: Register an engine.
      operationId: register_engine
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: registered_engine
              $ref: "#/components/schemas/EngineRegistrationParameter"
        description: The parameters to register an engine.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RegisteredEngine'
    get:
      tags:
        - Management
      summary: Returns a list of registered engines.
      operationId: get_registered_engines
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/engineSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListRegisteredEnginesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RegisteredEngine'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"

  /jobs:
    get:
      summary: List all jobs.
      operationId: get_jobs
      tags:
        - Jobs
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/jobsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListJobsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /jobs/search:
    post:
      summary: Search for jobs.
      operationId: search_jobs
      tags:
        - Jobs
      x-filterable:
        fields:
          id:
            type: string
          status:
            type: string
          type:
            type: string
          localized_type:
            type: string
          target_id:
            type: string
          target_name:
            type: string
          start_time:
            type: string
          update_time:
            type: string
          error_details:
            type: string
          trace_id:
            type: string
          engine_ids:
            type: array[string]
            deprecated: true
          engines:
            type: array[object]
            fields:
              engine_id:
                type: string
              engine_name:
                type: string
          account_id:
            type: int
          account_name:
            type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/jobsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchJobsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /jobs/{jobId}:
    parameters:
      - in: path
        name: jobId
        schema:
          type: string
          minLength: 1
        required: true
        description: The ID of the job.
    get:
      summary: Returns a job by ID.
      operationId: get_job_by_id
      tags:
        - Jobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
  /jobs/{jobId}/abandon:
    parameters:
      - in: path
        name: jobId
        schema:
          type: string
          minLength: 1
        required: true
        description: The ID of the job.
    post:
      summary: Abandons a job.
      description: >
        Abandoning a job means that the system will no longer track ongoing
        progress. The system will not attempt to stop the process in any way.
        The job will be moved to the ABANDONED terminal state.
      operationId: abandon_job
      tags:
        - Jobs
      responses:
        '204':
          description: No Content
  /jobs/{jobId}/tags:
    parameters:
      - in: path
        name: jobId
        schema:
          type: string
          minLength: 1
        required: true
        description: The ID of the job.
    post:
      tags:
        - Jobs
      summary: Create tags for a Job.
      operationId: create_job_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: job_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Job.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Jobs
      summary: Get tags for a Job.
      operationId: get_job_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /jobs/{jobId}/tags/delete:
    parameters:
      - in: path
        name: jobId
        schema:
          type: string
          minLength: 1
        required: true
        description: The ID of the job.
    post:
      tags:
        - Jobs
      summary: Delete tags for a Job.
      operationId: delete_job_tag
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
        required: false
      responses:
        '204':
          description: No Content
  /management/engines/{engineId}:
    parameters:
      - $ref: "#/components/parameters/engineIdParam"
    get:
      tags:
        - Management
      summary: Returns a registered engine by ID.
      operationId: get_registered_engine
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RegisteredEngine'
    put:
      tags:
        - Management
      summary: Update a registered engine.
      operationId: update_registered_engine
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: registered_engine
              $ref: "#/components/schemas/RegisteredEngine"
        description: The updated registration engine information.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RegisteredEngine'
    patch:
      tags:
        - Management
      summary: Update a registered engine.
      operationId: update_registered_engine_partial
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: registered_engine
              $ref: "#/components/schemas/RegisteredEngine"
        description: The updated registration engine information.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RegisteredEngine'
    delete:
      tags:
        - Management
      summary: Unregister an engine.
      operationId: unregister_engine
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DeleteEngineResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /management/engines/{engineId}/auto-tagging:
    x-internal: true
    parameters:
      - $ref: "#/components/parameters/engineIdParam"
    get:
      tags:
        - Management
      summary: Returns the engine's auto tagging configuration.
      operationId: get_engine_auto_tagging_config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/AutoTaggingConfig'
    patch:
      tags:
        - Management
      summary: Update the engine's auto tagging configuration.
      operationId: update_engine_auto_tagging_config
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: auto_tagging_config
              $ref: "#/components/schemas/AutoTaggingConfig"
        description: The auto tagging configuration.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateEngineAutoTaggingConfigResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /management/engines/search:
    post:
      summary: Search for engines.
      operationId: search_engines
      tags:
        - Management
      x-filterable:
        fields:
          id:
            type: string
          uuid:
            type: string
          ssh_public_key:
            type: string
          type:
            type: string
          version:
            type: string
          name:
            type: string
          hostname:
            type: string
          cpu_core_count:
            type: integer
          memory_size:
            type: integer
          data_storage_capacity:
            type: integer
          data_storage_used:
            type: integer
          insecure_ssl:
            type: boolean
          unsafe_ssl_hostname_check:
            type: boolean
          truststore_filename:
            type: string
          hyperscale_truststore_filename:
            type: string
          status:
            type: string
          username:
            type: string
          hashicorp_vault_id:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
          connection_status:
            type: string
          connection_status_details:
            type: string
          engine_connection_status:
            type: string
          engine_connection_status_details:
            type: string
          masking_memory_used:
            type: integer
          masking_allocated_memory:
            type: integer
          masking_jobs_running:
            type: integer
          masking_max_concurrent_jobs:
            type: integer
          masking_available_cores:
            type: integer
          hyperscale_instance_ids:
            type: array[string]
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/engineSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchEnginesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RegisteredEngine'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /management/engines/{engineId}/tags:
    parameters:
      - $ref: '#/components/parameters/engineIdParam'
    post:
      tags:
        - Management
      summary: Create tags for an Engine.
      operationId: create_engine_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: engine_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Engine.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Management
      summary: Get tags for a Engine.
      operationId: get_engine_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /management/engines/{engineId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/engineIdParam'
    post:
      tags:
        - Management
      summary: Delete tags for an Engine.
      operationId: delete_engine_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /management/vaults/hashicorp:
    get:
      tags:
        - Management
      summary: Returns a list of configured Hashicorp vaults.
      operationId: get_hashicorp_vaults
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hashicorpVaultsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListHashicorpVaultsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HashicorpVault'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      tags:
        - Management
      summary: Configure a new Hashicorp Vault
      operationId: create_hashicorp_vault
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hashicorp_vault
              $ref: "#/components/schemas/HashicorpVault"
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/HashicorpVault'
  /management/vaults/hashicorp/search:
    post:
      tags:
        - Management
      summary: Search for configured Hashicorp vaults.
      operationId: search_hashicorp_vaults
      x-filterable:
        fields:
          id:
            type: integer
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hashicorpVaultsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchHashicorpVaultsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HashicorpVault'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /management/vaults/hashicorp/{vaultId}:
    parameters:
      - in: path
        name: vaultId
        schema:
          type: integer
          format: int64
        required: true
        description: Numeric ID of the Hashicorp vault
    get:
      tags:
        - Management
      summary: Get a Hashicorp vault by id
      operationId: get_hashicorp_vault
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/HashicorpVault'
    delete:
      tags:
        - Management
      summary: Delete a Hashicorp vault by id
      operationId: delete_hashicorp_vault
      responses:
        '204':
          description: No Content
  /management/vaults/hashicorp/{vaultId}/tags:
    parameters:
      - in: path
        name: vaultId
        schema:
          type: integer
          format: int64
        required: true
        description: Numeric ID of the Hashicorp vault
    post:
      tags:
        - Management
      summary: Create tags for a Hashicorp vault.
      operationId: create_hashicorp_vault_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hashicorp_vault_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Hashicorp vault.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Management
      summary: Get tags for a Hashicorp vault.
      operationId: get_hashicorp_vault_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /management/vaults/hashicorp/{vaultId}/tags/delete:
    parameters:
      - in: path
        name: vaultId
        schema:
          type: integer
          format: int64
        required: true
        description: Numeric ID of the Hashicorp vault
    post:
      tags:
        - Management
      summary: Delete tags for a Hashicorp vault.
      operationId: delete_hashicorp_vault_tag
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
        required: false
      responses:
        '204':
          description: No Content
  /management/accounts:
    get:
      summary: Returns a list of Accounts
      operationId: get_accounts
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/accountsSortParam'
      tags:
        - Accounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListAccountsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      tags:
        - Accounts
      summary: |
        Create a new Account
      operationId: create_account
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: account
              $ref: "#/components/schemas/AccountCreateParameter"
        required: true
      responses:
        '201':
          description: The created Account id and if requested the generated API key token.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/AccountCreateResponse'
  /management/accounts/{id}:
    parameters:
      - $ref: '#/components/parameters/accountIdParam'
    get:
      tags:
        - Accounts
      summary: Get an Account by id
      operationId: get_account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Account'
    put:
      summary: |
        Update an Account
      tags:
        - Accounts
      operationId: update_account
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: account
              $ref: "#/components/schemas/AccountUpdateParameter"
        required: true
      responses:
        '200':
          description: Returns the updated Account.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Account'
    delete:
      tags:
        - Accounts
      summary: Delete an Account
      operationId: delete_account
      responses:
        '204':
          description: No Content
  /management/accounts/{id}/enable:
    parameters:
      - $ref: '#/components/parameters/accountIdParam'
    post:
      tags:
        - Accounts
      summary: Enable an Account.
      operationId: enable_account
      responses:
        '200':
          description: OK
  /management/accounts/{id}/disable:
    parameters:
      - $ref: '#/components/parameters/accountIdParam'
    post:
      tags:
        - Accounts
      summary: Disable an Account.
      operationId: disable
      responses:
        '200':
          description: OK
  /management/accounts/{id}/change_password:
    parameters:
      - $ref: '#/components/parameters/accountIdParam'
    post:
      summary: |
        Change Account Password.
      tags:
        - Accounts
      operationId: change_account_password
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: changePasswordParameter
              $ref: "#/components/schemas/ChangePasswordParameter"
        required: true
      responses:
        '204':
          description: Password changed.
  /management/accounts/{id}/reset_password:
    parameters:
      - $ref: '#/components/parameters/accountIdParam'
    post:
      summary: |
        Reset Account Password.
      tags:
        - Accounts
      operationId: reset_account_password
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: account
              $ref: "#/components/schemas/ResetPasswordParameter"
        required: true
      responses:
        '204':
          description: Password reset.
  /management/accounts/{id}/tags:
    parameters:
      - $ref: '#/components/parameters/accountIdParam'
    post:
      tags:
        - Accounts
      summary: Create tags for an Account.
      operationId: create_account_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: account_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Account.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Accounts
      summary: Get tags for an Account.
      operationId: get_account_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /management/accounts/{id}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/accountIdParam'
    post:
      tags:
        - Accounts
      summary: Delete tags for an Account.
      operationId: delete_account_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /management/accounts/password-policies:
    get:
      tags:
        - Accounts
      summary: Returns the password policies
      operationId: get_password_policies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PasswordPoliciesParams'
    patch:
      tags:
        - Accounts
      summary: Update password policies.
      operationId: update_password_policies
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: password_policies
              $ref: "#/components/schemas/PasswordPoliciesParams"
        description: The parameters to update the password policies.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PasswordPoliciesParams'
  /management/properties:
    patch:
      tags:
        - Management
      summary: Update value of predefined properties.
      operationId: update_properties
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: global_properties
              $ref: "#/components/schemas/GlobalProperties"
        description: The parameters to update property value.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/GlobalProperties'
    get:
      tags:
        - Management
      summary: Get global properties.
      operationId: list_properties
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/GlobalProperties'
  /management/api-classification:
    put:
      tags:
        - Management
      summary: Update the api classification to new version.
      operationId: update_api_classification
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: api_classification_config
              $ref: "#/components/schemas/APIClassificationConfig"
        description: Request to update api classification config.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/APIClassificationConfig'
    get:
      tags:
        - Management
      summary: Get api classification.
      operationId: get_api_classification
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/APIClassificationConfig'
  /login:
    post:
      summary: |
        Login to Account with Username and Password
      tags:
        - Login
      operationId: account_login
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: account
              $ref: "#/components/schemas/AccountLoginParameter"
        required: true
      responses:
        '200':
          description: Account Login Successful
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/LoginToken'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: invalid_credentials
                error_description: error-message-goes-here
  /logout:
    post:
      summary: Invalidates username/password and SSO login session.
      tags:
        - Login
      operationId: account_logout
      parameters:
        - in: header
          name: Authorization
          required: true
          description: Access token
          schema:
            type: string
      responses:
        '200':
          description: Logged out
  /management/accounts/search:
    post:
      summary: Search for Accounts.
      operationId: search_accounts
      tags:
        - Accounts
      x-filterable:
        fields:
          id:
            type: string
          first_name:
            type: string
          last_name:
            type: string
          email:
            type: string
          username:
            type: string
          last_access_time:
            type: string
          creation_time:
            type: string
          enabled:
            type: boolean
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/accountsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchAccountsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /token-info:
    post:
      summary: |
        Get Token Information
      tags:
        - Login
      operationId: token_info
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: token
              $ref: "#/components/schemas/TokenInfoRequest"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/TokenInfoResponse'
              example:
                active: true
                token_type: Bearer
                account_id: 1
                first_name: first-name
                last_name: last-name
                email: abc@example.com
                username: user-name
                exp: 400
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: invalid-token
                error_description: error-message-goes-here
  /is-saml-enabled:
    get:
      summary: |
        Check if SAML is enabled
      tags:
        - SamlLogin
      operationId: checkSaml
      responses:
        '200':
          description: SAML is enabled
        '400':
          description: SAML is not enabled
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: failed
                error_description: error-message-goes-here
  /management/smtp:
    get:
      tags:
        - Management
      summary: Returns the SMTP configuration
      operationId: get_smtp_config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SMTPConfigParams'
    put:
      tags:
        - Management
      summary: Update SMTP Config.
      operationId: update_smtp_config
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: smtp_config
              $ref: "#/components/schemas/SMTPConfigParams"
        description: The parameters to update the SMTP config.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SMTPConfigParams'
  /management/smtp/validate:
    post:
      tags:
        - Management
      summary: Validate SMTP Config.
      operationId: validate_smtp_config
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: validate_smtp_config
              $ref: "#/components/schemas/SMTPConfigValidate"
        description: The parameters to validate the SMTP config.
        required: true
      responses:
        '200':
          description: OK
  /management/metadata-database:
    get:
      tags:
        - Management
      summary: Returns configuration information about the metadata database which stores the product data.
      operationId: get_metadata_database
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/MetadataDbInfo'
  /management/ldap-config:
    get:
      tags:
        - Management
      summary: Returns the LDAP configuration
      operationId: get_ldap_config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/LDAPConfigParams'
    put:
      tags:
        - Management
      summary: Update LDAP Config.
      operationId: update_ldap_config
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: ldap_config
              $ref: "#/components/schemas/LDAPConfigParams"
        description: The parameters to update the LDAP config.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/LDAPConfigParams'
  /management/ldap-config/validate:
    post:
      tags:
        - Management
      summary: Validate LDAP Config. Without username/password, DCT performs an anonymous bind against the LDAP server.
        If credentials are provided DCT validates that authentication and mapping of optional properties are actually working with provided credentials.
        LDAP search is only validated if search attributes are set.
      operationId: validate_ldap_config
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: ldap_config_validate
              $ref: "#/components/schemas/LdapConfigValidateParameter"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: LdapValidateResponse
                properties:
                  message:
                    description: Validation message for LDAP config.
                    type: string
                    minLength: 1
  /management/saml-config:
    get:
      tags:
        - Management
      summary: Returns the SAML configuration
      operationId: get_saml_config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SAMLConfigParams'
    put:
      tags:
        - Management
      summary: Update SAML Config.
      operationId: update_saml_config
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: saml_config
              $ref: "#/components/schemas/SAMLConfigParams"
        description: The parameters to update the SAML config.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SAMLConfigParams'

  /management/phonehome/events:
    get:
      tags:
        - Management
      summary: Returns previous bundle upload events
      operationId: get_phonehome_events
      parameters:
        - in: query
          name: limit
          description: The maximum number of items to return.
          required: false
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BundleUploadEvent'

  /management/proxy:
    get:
      tags:
        - Management
      summary: Returns the current web proxy configuration to use to connect to Delphix services.
      operationId: get_proxy_configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ProxyConfiguration"
    put:
      tags:
        - Management
      summary: Update the web proxy configuration to use to connect to Delphix services.
      operationId: update_proxy_configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProxyConfiguration"
      responses:
        "200":
          description: Update the web proxy configuration to use to connect to Delphix services
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ProxyConfiguration"

  /management/product-registration-delphix-connectivity-check:
    get:
      tags:
        - Management
      summary: Returns True if Delphix services are reachable for product registration.
      operationId: get_product_registration_delphix_connectivity_check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                description: True if the Delphix services are reachable for product registration, False otherwise.

  /management/product-registration-status:
    get:
      tags:
        - Management
      summary: Returns the product registration status.
      operationId: get_product_registration_status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                description: True if the DCT is registered, False otherwise.

  /management/product-registration-offline:
    get:
      tags:
        - Management
      summary: Generates and returns a public key that can be used to register the product.
      operationId: get_product_registration_key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: The key to register the product with.
    post:
      tags:
        - Management
      summary: Registers the product using a manually generated payload.
      operationId: register_product_offline
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/ProductRegistrationOfflinePayload"
      responses:
        '204':
          description: No Content

  /management/product-registration-online:
    post:
      tags:
        - Management
      summary: Registers the product using the provided credentials.
      operationId: register_product_online
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/ProductRegistrationOnlinePayload"
      responses:
        '204':
          description: No Content

  /reporting/audit-logs-summary-report:
    get:
      summary: Gets the audit log summary report.
      tags:
        - Reporting
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/auditLogsSummaryReportSortParam'
      operationId: get_audit_logs_summary_report
      responses:
        "200":
          description: Returns a list of aggregated audit log entries for each account.
          content:
            application/json:
              schema:
                type: object
                title: AuditLogsSummaryReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AuditLogsSummary"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
                  totals:
                    $ref: "#/components/schemas/AuditLogsSummaryTotals"
            text/csv:
              schema:
                type: string
                example: |
                  account_id,account_first_name,account_last_name,vdb_refreshes,masking_jobs
                  1,FirstName1,LastName1,10,4
                  2,FirstName2,LastName2,7,3
                  total_vdb_refreshes,total_masking_jobs
                  17,7
  /reporting/virtualization-storage-summary-report:
    get:
      summary: Gets the storage summary report for virtualization engines.
      tags:
        - Reporting
      operationId: get_virtualization_storage_summary_report
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/virtualizationStorageReportSortParam'
      responses:
        "200":
          description: Returns a list of storage summary data of virtualization engines.
          content:
            application/json:
              schema:
                type: object
                title: VirtualizationStorageSummaryReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/VirtualizationStorageSummaryData"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  engine_id,engine_name,engine_hostname,total_capacity,free_storage,used_storage,used_percentage,dsource_count,vdb_count,total_object_count
                  1,my-engine,"eng01.dev.delphix.com",23404216320,20896169984,2508046336,10.71,5,25,30
  /reporting/virtualization-storage-summary-report/search:
    post:
      summary: Search the storage summary report for virtualization engines.
      tags:
        - Reporting
      x-filterable:
        fields:
          engine_id:
            type: string
          engine_name:
            type: string
          engine_hostname:
            type: string
          total_capacity:
            type: integer
          free_storage:
            type: integer
          used_storage:
            type: integer
          used_percentage:
            type: number
          dsource_count:
            type: integer
          vdb_count:
            type: integer
          total_object_count:
            type: integer
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/virtualizationStorageReportSortParam'
      operationId: search_virtualization_storage_summary_report
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        "200":
          description: Returns a list of storage summary data of virtualization engines.
          content:
            application/json:
              schema:
                type: object
                title: VirtualizationStorageSummaryReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/VirtualizationStorageSummaryData"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  engine_id,engine_name,engine_hostname,total_capacity,free_storage,used_storage,used_percentage,dsource_count,vdb_count,total_object_count
                  1,my-engine,"eng01.dev.delphix.com",23404216320,20896169984,2508046336,10.71,5,25,30
  /reporting/api-usage-report:
    get:
      summary: Gets the report of API usage metrics over a given time period. This API returns at the most 10000 results in the response to protect against the server running out of memory.
        Users might not hit this limit with the default report without any 'apiUsageReportGroupByParam' param but can hit this limit if the groupBy is by too granular like
        by 'client_name' or 'user_agent' only. Hence it is advisable to use startDate and endDate to 'limit' the scope of the report.
      tags:
        - Reporting
      parameters:
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/apiMetricKind'
        - $ref: '#/components/parameters/apiUsageReportGroupByParam'
        - $ref: '#/components/parameters/apiUsageReportClientNameFilterParam'
        - $ref: '#/components/parameters/apiUsageReportUserAgentFilterParam'
        - $ref: '#/components/parameters/apiUsageReportDctVersionFilterParam'
      operationId: get_api_usage_report
      responses:
        "200":
          description: Returns a list of API usage metrics.
          content:
            application/json:
              schema:
                type: object
                title: ApiUsageReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ApiUsageData"
                  total_automation_api_count:
                    description: Total count of automation API calls over the requested timeframe.
                    type: integer
                    format: int64
                    example: 4200
                  total_governance_api_count:
                    description: Total count of governance API calls over the requested timeframe.
                    type: integer
                    format: int64
                    example: 4200
            text/csv:
              schema:
                type: string
                example: |
                  api_endpoint,api_method,api_count
                  /v2/bookmarks,GET,1
                  /v2/bookmarks/search,POST,1
                  /v2/management/engines,GET,1
  /reporting/masking-execution-metrics:
    get:
      summary: Get the masking execution metrics report.
      tags:
        - Reporting
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingExecutionMetricsSortParam'
      operationId: get_masking_execution_metrics_report
      responses:
        "200":
          description: Returns a list of Masking execution metrics.
          content:
            application/json:
              schema:
                type: object
                title: MaskingExecutionMetricsReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/MaskingExecutionMetrics"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  id,masking_job_name,masking_job_type,connector_type,ruleset_name,rows_masked,rows_total,bytes_masked,bytes_total,duration,tables_files_count,"masked_tables_files_count",columns_fields_count,"masked_columns_fields_count"
                  "4ed2357d-f1a7-410c-b951-90f0edc1a0f6",masking-job,STANDARD,ORACLE,customers,2,2,0,0,19430,1,1,2,2

  /reporting/masking-execution-metrics/search:
    post:
      summary: Search the Masking execution metrics report.
      tags:
        - Reporting
      x-filterable:
        fields:
          id:
            type: string
          masking_job_name:
            type: string
          masking_job_type:
            type: string
          connector_type:
            type: string
          ruleset_name:
            type: string
          rows_masked:
            type: integer
          rows_total:
            type: integer
          bytes_masked:
            type: integer
          bytes_total:
            type: integer
          duration:
            type: integer
          tables_files_count:
            type: integer
          masked_tables_files_count:
            type: integer
          columns_fields_count:
            type: integer
          masked_columns_fields_count:
            type: integer
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingExecutionMetricsSortParam'
      operationId: search_masking_execution_metrics_report
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        "200":
          description: Search Masking execution metrics.
          content:
            application/json:
              schema:
                type: object
                title: MaskingExecutionMetricsReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/MaskingExecutionMetrics"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  id,masking_job_name,connector_type,ruleset_name,rows_masked,rows_total,bytes_masked,bytes_total,duration,tables_files_count,"masked_tables_files_count",columns_fields_count,"masked_columns_fields_count"
                  "4ed2357d-f1a7-410c-b951-90f0edc1a0f6",masking-job,ORACLE,customers,2,2,0,0,19430,1,1,2,2

  /reporting/schedule:
    post:
      tags:
        - Reporting
      summary: Create a new report schedule.
      operationId: create_reporting_schedule
      requestBody:
        $ref: '#/components/requestBodies/CreateReportingSchedule'
      responses:
        "200":
          description: Returns the newly created schedule for a report.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ReportingSchedule"
    get:
      tags:
        - Reporting
      summary: List all report schedules.
      operationId: get_reporting_schedules
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/reportingScheduleSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListReportingScheduleResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportingSchedule'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /reporting/schedule/search:
    post:
      tags:
        - Reporting
      summary: Search for report schedules.
      operationId: search_reporting_schedules
      x-filterable:
        fields:
          report_id:
            type: integer
          report_type:
            type: string
          cron_expression:
            type: string
          time_zone:
            type: string
          message:
            type: string
          file_format:
            type: string
          enabled:
            type: boolean
          sort_column:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/reportingScheduleSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchReportingScheduleResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportingSchedule'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /reporting/schedule/{reportId}:
    parameters:
      - $ref: '#/components/parameters/reportIdParam'
    get:
      summary: Returns a report schedule by ID.
      operationId: get_reporting_schedule_by_id
      tags:
        - Reporting
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingSchedule'
    delete:
      summary: Delete report schedule by ID.
      operationId: delete_reporting_schedule
      tags:
        - Reporting
      responses:
        '204':
          description: No Content
    put:
      summary: Update a reporting schedule by ID.
      operationId: update_reporting_schedule
      tags:
        - Reporting
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_reporting_schedule_param
              $ref: '#/components/schemas/ReportingSchedule'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingSchedule'
  /reporting/schedule/{reportId}/tags:
    parameters:
      - $ref: '#/components/parameters/reportIdParam'
    post:
      tags:
        - Reporting
      summary: Create tags for a report schedule.
      operationId: create_reporting_schedule_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: reporting_schedule_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for report schedule.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Reporting
      summary: Get tags for a report schedule.
      operationId: get_reporting_schedule_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /reporting/schedule/{reportId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/reportIdParam'
    post:
      tags:
        - Reporting
      summary: Delete tags for a report schedule.
      operationId: delete_reporting_schedule_tag
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
        required: false
      responses:
        '204':
          description: No Content

  /reporting/engine-performance-analytic-report:
    get:
      summary: Gets the performance analytics report for engines.
      tags:
        - Reporting
      operationId: get_engine_performance_analytics_report
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/EnginePerformanceAnalyticReportSortParam'
      responses:
        "200":
          description: Returns a list of performance analytics data of engines.
          content:
            application/json:
              schema:
                type: object
                title: EnginePerformanceAnalyticReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EnginePerformanceAnalytic"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  engine_name,engine_id,engine_type,aggregation_period,cpu_cores_count,cpu_utilization,total_memory,average_disk_latency_read,average_disk_latency_write,average_disk_latency_total,average_disk_throughput_read,average_disk_throughput_write,average_disk_throughput_total,average_nfs_latency_read,average_nfs_latency_write,average_nfs_latency_total,average_nfs_throughput_read,average_nfs_throughput_write,average_nfs_throughput_total,average_iscsi_latency_read,average_iscsi_latency_write,average_iscsi_latency_total,average_iscsi_throughput_read,average_iscsi_throughput_write,average_iscsi_throughput_total,average_network_throughput_transmit,average_network_throughput_receive
                  km,1,VIRTUALIZATION,24,2,4.97529992942837,8589934592,4747942,900793,901766,486,495052,253030,32493,1127989,394758,34417,0,17208,0,0,0,0,0,0,11.135787037037,5.75303240740741
  /reporting/engine-performance-analytic-report/search:
    post:
      summary: Search the performance analytic report for engines.
      tags:
        - Reporting
      x-filterable:
        fields:
          engine_id:
            type: string
          engine_name:
            type: string
          engine_type:
            type: string
          aggregation_period:
            type: integer
          cpu_cores_count:
            type: integer
          cpu_utilization:
            type: number
            format: double
          total_memory:
            type: integer
            format: int64
          average_disk_latency_read:
            type: integer
            format: int64
          average_disk_latency_write:
            type: integer
            format: int64
          average_disk_latency_total:
            type: integer
            format: int64
          average_disk_throughput_read:
            type: integer
            format: int64
          average_disk_throughput_write:
            type: integer
            format: int64
          average_disk_throughput_total:
            type: integer
            format: int64
          average_disk_iops_read:
            type: integer
            format: int64
          average_disk_iops_write:
            type: integer
            format: int64
          average_disk_iops_total:
            type: integer
            format: int64
          average_nfs_latency_read:
            type: integer
            format: int64
          average_nfs_latency_write:
            type: integer
            format: int64
          average_nfs_latency_total:
            type: integer
            format: int64
          average_nfs_throughput_read:
            type: integer
            format: int64
          average_nfs_throughput_write:
            type: integer
            format: int64
          average_nfs_throughput_total:
            type: integer
            format: int64
          average_nfs_iops_read:
            type: integer
            format: int64
          average_nfs_iops_write:
            type: integer
            format: int64
          average_nfs_iops_total:
            type: integer
            format: int64
          average_iscsi_latency_read:
            type: integer
            format: int64
          average_iscsi_latency_write:
            type: integer
            format: int64
          average_iscsi_latency_total:
            type: integer
            format: int64
          average_iscsi_throughput_read:
            type: integer
            format: int64
          average_iscsi_throughput_write:
            type: integer
            format: int64
          average_iscsi_throughput_total:
            type: integer
            format: int64
          average_iscsi_iops_read:
            type: integer
            format: int64
          average_iscsi_iops_write:
            type: integer
            format: int64
          average_iscsi_iops_total:
            type: integer
            format: int64
          average_network_throughput_transmit:
            type: number
            format: double
          average_network_throughput_receive:
            type: number
            format: double
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/EnginePerformanceAnalyticReportSortParam'
      operationId: search_engine_performance_analytics_report
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        "200":
          description: Returns a list of performance analytics data of engines.
          content:
            application/json:
              schema:
                type: object
                title: EnginePerformanceAnalyticReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EnginePerformanceAnalytic"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  engine_name,engine_id,engine_type,aggregation_period,cpu_cores_count,cpu_utilization,total_memory,average_disk_latency_read,average_disk_latency_write,average_disk_latency_total,average_disk_throughput_read,average_disk_throughput_write,average_disk_throughput_total,average_nfs_latency_read,average_nfs_latency_write,average_nfs_latency_total,average_nfs_throughput_read,average_nfs_throughput_write,average_nfs_throughput_total,average_iscsi_latency_read,average_iscsi_latency_write,average_iscsi_latency_total,average_iscsi_throughput_read,average_iscsi_throughput_write,average_iscsi_throughput_total,average_network_throughput_transmit,average_network_throughput_receive
                  km,1,VIRTUALIZATION,24,2,4.97529992942837,8589934592,4747942,900793,901766,486,495052,253030,32493,1127989,394758,34417,0,17208,0,0,0,0,0,0,11.135787037037,5.75303240740741

  /reporting/engine-performance-analytic-trends/search:
    post:
      summary: Search the performance analytic trend data for engines.
      tags:
        - Reporting
      x-filterable:
        fields:
          engine_id:
            type: string
          trend_type:
            type: string
          aggregation_period:
            type: integer
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/EnginePerformanceAnalyticTrendSortParam'
      operationId: search_engine_performance_analytic_trends
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        "200":
          description: Returns a list of performance analytic trends data of engines.
          content:
            application/json:
              schema:
                type: object
                title: EnginePerformanceAnalyticTrendResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EnginePerformanceAnalyticTrend"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /reporting/engine-global-object-state-report:
    get:
      summary: Get the masking engine global object state report.
      tags:
        - Reporting
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/engineGlobalObjectStateReportSortParam'
      operationId: get_engine_global_object_state_report
      responses:
        "200":
          description: Returns a list of GlobalObjectState data.
          content:
            application/json:
              schema:
                type: object
                title: GetEngineGlobalObjectStateReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EngineGlobalObjectStateData"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  engine_id,engine_name,jobs_count,connectors_count,rulesets_count,global_object_revision_hash
                  "4ed2357d-f1a7-410c-b951-90f0edc1a0f6",masking-engine-dev,10,25,25,"dfb515e3d9727eebf499cb252b417efc926bad0b"

  /reporting/engine-global-object-state-report/search:
    post:
      summary: Search the masking engine global object state report.
      tags:
        - Reporting
      x-filterable:
        fields:
          engine_id:
            type: string
          engine_name:
            type: string
          jobs_count:
            type: integer
          connectors_count:
            type: integer
          rulesets_count:
            type: integer
          global_object_revision_hash:
            type: string
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/engineGlobalObjectStateReportSortParam'
      operationId: search_engine_global_object_state_report
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        "200":
          description: Returns a list of searched GlobalObjectState data.
          content:
            application/json:
              schema:
                type: object
                title: SearchEngineGlobalObjectStateReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EngineGlobalObjectStateData"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  engine_id,engine_name,jobs_count,connectors_count,rulesets_count,global_object_revision_hash
                  "4ed2357d-f1a7-410c-b951-90f0edc1a0f6",masking-engine-dev,10,25,25,"dfb515e3d9727eebf499cb252b417efc926bad0b"

  /reporting/product_info:
    get:
      tags:
        - Reporting
      summary: Returns the DCT Product Information.
      operationId: get_product_info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ProductInfo'

  /roles:
    post:
      tags:
        - Authorization
      summary: Create custom role
      operationId: create_role
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: create_role_param
              $ref: '#/components/schemas/CreateRole'
      responses:
        "200":
          description: Returns the newly created role.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Role"
    get:
      tags:
        - Authorization
      summary: List all roles
      operationId: get_roles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListRolesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
  /roles/{roleId}:
    parameters:
      - $ref: '#/components/parameters/roleIdParam'
    get:
      summary: Returns role by ID.
      operationId: get_role_by_id
      tags:
        - Authorization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
    patch:
      summary: Update a Role.
      operationId: update_role
      tags:
        - Authorization
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_role_param
              $ref: '#/components/schemas/RoleUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
    delete:
      summary: Delete role by ID.
      operationId: delete_role
      tags:
        - Authorization
      responses:
        '204':
          description: No Content
  /roles/search:
    post:
      summary: Search for roles.
      operationId: search_roles
      tags:
        - Authorization
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          permission_objects:
            type: array[object]
            fields:
              object_type:
                type: string
              permissions:
                type: array[string]
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/roleSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchRolesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /roles/{roleId}/permissions:
    parameters:
      - $ref: '#/components/parameters/roleIdParam'
    post:
      tags:
        - Authorization
      summary: Add permissions to a role.
      operationId: add_role_permissions
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: role_permissions_param
              $ref: "#/components/schemas/PermissionsRequest"
        description: Permissions to add to the role.
        required: true
      responses:
        '200':
          description: The updated role.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Role"
  /roles/{roleId}/permissions/delete:
    parameters:
      - $ref: '#/components/parameters/roleIdParam'
    post:
      tags:
        - Authorization
      summary: Remove permissions from a role.
      operationId: remove_role_permissions
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: role_permissions_param
              $ref: "#/components/schemas/PermissionsRequest"
        description: Permissions to remove from the role.
        required: true
      responses:
        '200':
          description: The updated role.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Role"
  /roles/{roleId}/tags:
    parameters:
      - $ref: '#/components/parameters/roleIdParam'
    post:
      tags:
        - Authorization
      summary: Create tags for a role.
      operationId: create_role_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: role_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Roles.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Authorization
      summary: Get tags for a Role.
      operationId: get_role_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /roles/{roleId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/roleIdParam'
    post:
      tags:
        - Authorization
      summary: Delete tags for a Role.
      operationId: delete_role_tag
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
        required: false
      responses:
        '204':
          description: No Content
  /auth/permissions/objects/{objectType}/{objectId}:
    parameters:
      - $ref: '#/components/parameters/objectTypeParam'
      - $ref: '#/components/parameters/objectIdParam'
    get:
      summary: Returns permissions for given object.
      operationId: get_object_permissions
      tags:
        - Authorization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectPermissionsResponse'

  /auth/object-permissions:
    get:
      summary: Returns all of the possible permissions for all of the objects.
      operationId: get_all_object_permissions
      tags:
        - Authorization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllObjectPermissionsResponse'

  /access-groups:
    post:
      tags:
        - Authorization
      summary: Create a new access group.
      operationId: create_access_group
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: create_access_group_param
              $ref: "#/components/schemas/AccessGroup"
        required: true
      responses:
        "201":
          description: Returns the newly created access group.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroup"
    get:
      tags:
        - Authorization
      summary: List all access groups.
      operationId: get_access_groups
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/accessGroupsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListAccessGroupsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AccessGroup'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /access-groups/search:
    post:
      summary: Search for access groups.
      operationId: search_access_groups
      tags:
        - Authorization
      x-filterable:
        description: Access group fields which can be used in filter expressions.
        fields:
          - id
          - name
          - account_ids
          - tagged_account_ids
          - scopes
          - single_account
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/accessGroupsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchAccessGroupsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AccessGroup'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /access-groups/{accessGroupId}:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
    get:
      summary: Returns an Access group by ID.
      operationId: get_access_group_by_id
      tags:
        - Authorization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroup'
    delete:
      summary: Delete an Access group.
      operationId: delete_access_group
      tags:
        - Authorization
      responses:
        '204':
          description: No Content
    patch:
      summary: Update an Access group.
      operationId: update_access_group
      tags:
        - Authorization
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_access_group_param
              $ref: '#/components/schemas/AccessGroupUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroup'
  /access-groups/{accessGroupId}/tags:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
    post:
      tags:
        - Authorization
      summary: Add account tags to an Access group
      operationId: add_access_group_account_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: account_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Account Tags to add to the Access group.
        required: true
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroup"
  /access-groups/{accessGroupId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
    post:
      tags:
        - Authorization
      summary: Remove account tags from an access group.
      operationId: remove_access_group_account_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroup"
  /access-groups/{accessGroupId}/account-ids:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
    post:
      tags:
        - Authorization
      summary: Add account ids to an Access group
      operationId: add_access_group_account_ids
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: account_ids
              $ref: "#/components/schemas/AccessGroupAccountIdsRequest"
        description: Account ids to add to the Access group.
        required: true
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroup"
  /access-groups/{accessGroupId}/account-ids/{accountId}:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
      - in: path
        name: accountId
        schema:
          type: integer
          format: int64
        required: true
        description: The ID of the account.
    delete:
      summary: Remove the account from the access group.
      operationId: remove_access_group_account_id
      tags:
        - Authorization
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroup"
  /access-groups/{accessGroupId}/scopes:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
    post:
      tags:
        - Authorization
      summary: Add scopes to an Access group
      operationId: add_access_group_scopes
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: scopes
              $ref: "#/components/schemas/AccessGroupScopesRequest"
        description: Scopes to add to the Access group.
        required: true
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroup"
  /access-groups/{accessGroupId}/scopes/{scopeId}:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
      - $ref: '#/components/parameters/scopeIdParam'
    delete:
      summary: Remove the scope from the Access group.
      operationId: remove_access_group_scope
      tags:
        - Authorization
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroup"
    get:
      summary: Get access group scope.
      operationId: get_access_group_scope
      tags:
        - Authorization
      responses:
        '200':
          description: The access group scope.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroupScope"
    patch:
      summary: Update access group scope.
      operationId: update_access_group_scope
      tags:
        - Authorization
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: scopes
              $ref: "#/components/schemas/UpdateAccessGroupScope"
        description: Access group scope to update.
        required: true
      responses:
        '200':
          description: The updated access group scope.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroupScope"
  /access-groups/{accessGroupId}/scopes/{scopeId}/object-tags:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
      - $ref: '#/components/parameters/scopeIdParam'
    post:
      summary: Add object tags to the access group scope.
      operationId: add_tags_to_scope
      tags:
        - Authorization
      requestBody:
        content:
          application/json:
            schema:
              x-body-name:  access_group_scope_tags
              $ref: "#/components/schemas/ScopeTagsRequest"
        description: Object tags for the access group scope.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ScopeTagsResponse"
  /access-groups/{accessGroupId}/scopes/{scopeId}/object-tags/delete:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
      - $ref: '#/components/parameters/scopeIdParam'
    post:
      tags:
        - Authorization
      summary: Remove tags from the access group scope.
      operationId: delete_access_group_scope_object_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteScopeObjectTags"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ScopeTagsResponse"
  /access-groups/{accessGroupId}/scopes/{scopeId}/objects:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
      - $ref: '#/components/parameters/scopeIdParam'
    post:
      summary: Add objects to the access group scope.
      operationId: add_objects_to_access_group_scope
      tags:
        - Authorization
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: scope_objects
              $ref: "#/components/schemas/ScopedObjectsRequest"
        description: Add objects to the access group scope.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ScopedObjectItemsResponse"
  /access-groups/{accessGroupId}/scopes/{scopeId}/objects/delete:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
      - $ref: '#/components/parameters/scopeIdParam'
    post:
      tags:
        - Authorization
      summary: Remove objects from the access group scope.
      operationId: delete_access_group_scope_objects
      requestBody:
        $ref: "#/components/requestBodies/DeleteObjects"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ScopedObjectItemsResponse"
  /access-groups/{accessGroupId}/scopes/{scopeId}/always_allowed_permissions:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
      - $ref: '#/components/parameters/scopeIdParam'
    post:
      summary: Add always allowed permissions for given object type.
      operationId: add_always_allowed_permissions
      tags:
        - Authorization
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: scope_object_permissions
              $ref: "#/components/schemas/AlwaysAllowedPermissionRequest"
        description: Add always allowed permissions for given object type.
        required: true
      responses:
        '200':
          description: The access group scope.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroupScope"
  /access-groups/{accessGroupId}/scopes/{scopeId}/always_allowed_permissions/delete:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
      - $ref: '#/components/parameters/scopeIdParam'
    post:
      summary: Remove always allowed permissions for given object type.
      operationId: remove_always_allowed_permissions
      tags:
        - Authorization
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: scope_object_permissions
              $ref: "#/components/schemas/AlwaysAllowedPermissionRequest"
        description: Remove always allowed permissions for given object type.
        required: true
      responses:
        '200':
          description: The access group scope.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroupScope"
  /connectors:
    get:
      tags:
        - Connectors
      summary: Retrieve the list of masking connectors.
      operationId: get_connectors
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/connectorsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListConnectorsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Connector'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /connectors/{connectorId}:
    parameters:
      - $ref: '#/components/parameters/connectorIdParam'
    get:
      summary: Retrieve a masking Connector by ID.
      operationId: get_connector_by_id
      tags:
        - Connectors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connector'
    patch:
      summary: Update a masking Connector by ID.
      operationId: update_connector_by_id
      tags:
        - Connectors
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_connector_parameter
              $ref: '#/components/schemas/ConnectorUpdateParameters'
        description: The new data to update a masking Connector.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateConnectorResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /connectors/{connectorId}/tags:
    parameters:
      - $ref: '#/components/parameters/connectorIdParam'
    post:
      tags:
        - Connectors
      summary: Create tags for a Connector.
      operationId: create_connector_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: connector_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Connector.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Connectors
      summary: Get tags for a Connector.
      operationId: get_connector_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /connectors/{connectorId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/connectorIdParam'
    post:
      tags:
        - Connectors
      summary: Delete tags for a Connector.
      operationId: delete_connector_tag
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
        required: false
      responses:
        '204':
          description: No Content
  /connectors/search:
    post:
      summary: Search for masking Connectors.
      operationId: search_connectors
      tags:
        - Connectors
      x-filterable:
        fields:
          id:
            type: string
          engine_id:
            type: string
          type:
            type: string
          name:
            type: string
          hostname:
            type: string
          username:
            type: string
          port:
            type: integer
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/connectorsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchConnectorsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Connector'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /executions:
    get:
      tags:
        - Executions
      summary: Retrieve the list of masking executions.
      operationId: get_executions
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/executionsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListExecutionsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Execution'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /executions/search:
    post:
      tags:
        - Executions
      summary: Search masking executions.
      operationId: search_executions
      x-filterable:
        fields:
          id:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
          masking_job_id:
            type: string
          masking_job_name:
            type: string
          source_connector_id:
            type: string
          target_connector_id:
            type: string
          status:
            type: string
          rows_masked:
            type: integer
          rows_total:
            type: integer
          bytes_processed:
            type: integer
          bytes_total:
            type: integer
          start_time:
            type: string
          submit_time:
            type: string
          end_time:
            type: string
          hyperscale_instance_id:
            type: string
          task_events:
            type: array[object]
            fields:
              event:
                type: string
              status:
                type: string
          hyperscale_task_events:
            type: array[object]
            fields:
              name:
                type: string
              progress:
                type: number
              status:
                type: string
              processed_objects:
                type: integer
              processed_rows:
                type: integer
              total_constraints:
                type: integer
              processed_indexes:
                type: integer
              total_indexes:
                type: integer
              processed_triggers:
                type: integer
              total_triggers:
                type: integer
              start_time:
                type: string
              end_time:
                type: string
              errors:
                type: array[object]
                fields:
                  table_name:
                    type: string
                  error:
                    type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/executionsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchExecutionsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Execution'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /executions/{executionId}:
    parameters:
      - $ref: '#/components/parameters/executionIdParam'
    get:
      summary: Retrieve an Execution by ID.
      operationId: get_execution_by_id
      tags:
        - Executions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
  /executions/{executionId}/cancel:
    parameters:
      - $ref: '#/components/parameters/executionIdParam'
    post:
      summary: Cancel an Execution.
      operationId: cancel_execution
      tags:
        - Executions
      requestBody:
        required: false
        content:
          application/json:
            schema:
              x-body-name: cancel_execution
              $ref: '#/components/schemas/ExecutionCancelParameters'
      responses:
        '200':
          description: OK
  /executions/{executionId}/restart:
    parameters:
      - $ref: '#/components/parameters/executionIdParam'
    post:
      summary: Restart an Execution (Hyperscale only).
      operationId: restart_execution
      tags:
        - Executions
      responses:
        '200':
          description: Masking job execution restarted.
          content:
            application/json:
              schema:
                type: object
                title: RestartExecutionResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /executions/{executionId}/cleanup:
    parameters:
      - $ref: '#/components/parameters/executionIdParam'
    post:
      summary: Cleanup an Execution (Hyperscale only).
      operationId: cleanup_execution
      tags:
        - Executions
      responses:
        '200':
          description: Masking job execution cleaned up.
          content:
            application/json:
              schema:
                type: object
                title: CleanupExecutionResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /executions/{executionId}/events:
    parameters:
      - $ref: '#/components/parameters/executionIdParam'
    get:
      summary: Retrieve the list of events for a masking execution.
      operationId: get_execution_events
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/executionEventsSortParam'
      tags:
        - Executions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListExecutionEventsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExecutionEvent'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /executions/{executionId}/events/search:
    parameters:
      - $ref: '#/components/parameters/executionIdParam'
    post:
      tags:
        - Executions
      summary: Search masking executions events.
      operationId: search_execution_events
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/executionEventsSortParam'
      x-filterable:
        fields:
          id:
            type: string
          execution_id:
            type: string
          event_type:
            type: string
          severity:
            type: string
          cause:
            type: string
          count:
            type: integer
          timestamp:
            type: string
          masked_object_name:
            type: string
          algorithm_name:
            type: string
          exception_type:
            type: string
          exception_detail:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchExecutionEventsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExecutionEvent'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /executions/{executionId}/log:
    parameters:
      - $ref: '#/components/parameters/executionIdParam'
    get:
      summary: Retrieve the masking execution log.
      operationId: get_execution_log
      tags:
        - Executions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionLog"
  /enable-scale-testing:
    x-internal: true
    post:
      tags:
        - Test
      summary: This is used for performance testing to enable engine and object duplication.
      operationId: enable_scale_testing
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableScaleTestingRequest"
      responses:
        '200':
          description: OK
  /masking-file-uploads:
    x-internal: true
    post:
      tags:
        - MaskingFiles
      summary: Upload a file for masking.
      operationId: upload_masking_file
      requestBody:
        $ref: '#/components/requestBodies/UploadMaskingFile'
      responses:
        '201':
          description: File has been uploaded.
          content:
            application/json:
              schema:
                type: object
                title: MaskingFileUploadResponse
                properties:
                  file:
                    $ref: '#/components/schemas/MaskingFileUpload'
                    description: The uploaded file.
  /masking-jobs:
    get:
      tags:
        - MaskingJobs
      summary: Retrieve the list of masking jobs.
      operationId: get_masking_jobs
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingJobsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListMaskingJobsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingJob'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      tags:
        - MaskingJobs
      summary: Create a Masking Job.
      operationId: create_masking_job
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: create_job_request
              $ref: "#/components/schemas/CreateMaskingJobRequest"
        description: Input params to create a masking job.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: CreateMaskingJobResponse
                properties:
                  id:
                    type: string
                    description: The ID of the created masking job.
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated DCT job.
  /masking-jobs/search:
    post:
      tags:
        - MaskingJobs
      summary: Search masking jobs.
      operationId: search_masking_jobs
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          is_on_the_fly_masking:
            type: boolean
          creation_date:
            type: string
          last_completed_execution_date:
            type: string
          last_execution_status:
            type: string
          last_execution_id:
            type: string
          connector_username:
            type: string
          on_the_fly_source_connector_username:
            type: string
          ruleset.type:
            type: string
          ruleset.name:
            type: string
          ruleset.refresh_drops_table:
            type: boolean
          ruleset.algorithms:
            type: array[string]
          hyperscale_instance_id:
            type: string
          description:
            type: string
          dataset_id:
            type: string
          retain_execution_data:
            type: string
          max_memory:
            type: integer
          min_memory:
            type: integer
          feedback_size:
            type: integer
          stream_row_limit:
            type: integer
          num_input_streams:
            type: integer
          max_concurrent_source_connections:
            type: integer
          max_concurrent_target_connections:
            type: integer
          parallelism_degree:
            type: integer
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingJobsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchMaskingJobsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingJob'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /masking-jobs/source-engines:
    get:
      tags:
        - MaskingJobs
      summary: Retrieve the list of masking jobs along with their source engine.
      operationId: get_masking_job_source_engines
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingJobSourceEnginesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListMaskingJobSourceEnginesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingJobSourceEngine'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /masking-jobs/source-engines/search:
    post:
      tags:
        - MaskingJobs
      summary: Search the list of masking jobs along with their source engine.
      operationId: search_masking_job_source_engines
      x-filterable:
        fields:
          masking_job_id:
            type: string
          source_engine_id:
            type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingJobSourceEnginesSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchMaskingJobSourceEnginesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingJobSourceEngine'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /masking-jobs/{maskingJobId}:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    delete:
      tags:
        - MaskingJobs
      summary: Delete a masking job.
      operationId: delete_masking_job
      parameters:
        - $ref: '#/components/parameters/maskingJobDeleteForceParam'
      responses:
        '200':
          description: Masking job delete initiated.
          content:
            application/json:
              schema:
                type: object
                title: DeleteMaskingJobResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
    get:
      summary: Retrieve a MaskingJob by ID.
      operationId: get_masking_job_by_id
      tags:
        - MaskingJobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaskingJob'
    patch:
      summary: Update values of a MaskingJob.
      operationId: update_masking_job_by_id
      tags:
        - MaskingJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMaskingJobParameters'
        description: The new data to update a Masking Job.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaskingJob'
  /masking-jobs/{maskingJobId}/copy:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    post:
      tags:
        - MaskingJobs
      summary: Copies the masking job to another engine.
      operationId: copy_masking_job
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: copy_masking_job_params
              $ref: "#/components/schemas/CopyMaskingJobParameters"
      responses:
        '200':
          description: Copy masking job initiated.
          content:
            application/json:
              schema:
                type: object
                title: CopyMaskingJobResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
                  masking_job_id:
                    type: string
  /masking-jobs/{maskingJobId}/migrate:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    post:
      tags:
        - MaskingJobs
      summary: Migrates the masking job from its current source engine to another engine.
      operationId: migrate_masking_job
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: migrate_masking_job_params
              $ref: "#/components/schemas/MigrateMaskingJobParameters"
      responses:
        '200':
          description: Migrate masking job initiated.
          content:
            application/json:
              schema:
                type: object
                title: MigrateMaskingJobResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /masking-jobs/{maskingJobId}/connectors:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    get:
      tags:
        - MaskingJobs
      summary: Get connectors for a Masking Job by ID.
      operationId: get_masking_job_connectors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/MaskingJobConnectorsResponse"

  /masking-jobs/{maskingJobId}/execute:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    post:
      summary: Execute a MaskingJob.
      operationId: execute_masking_job
      tags:
        - MaskingJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteMaskingJobParameters'
      responses:
        '200':
          description: Masking job execute initiated.
          content:
            application/json:
              schema:
                type: object
                title: ExecuteMaskingJobResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.

  /masking-jobs/{maskingJobId}/re-import:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    post:
      tags:
        - MaskingJobs
      summary: Re-import the dataset from the source MaskingJob (Hyperscale Job only).
      operationId: re_import_masking_job
      responses:
        '200':
          description: Masking job re-import initiated.
          content:
            application/json:
              schema:
                type: object
                title: ReImportMaskingJobResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.

  /masking-jobs/{maskingJobId}/tags:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    post:
      tags:
        - MaskingJobs
      summary: Create tags for a Masking Job.
      operationId: create_masking_job_tag
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: masking_job_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Masking Job.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - MaskingJobs
      summary: Get tags for a Masking Job.
      operationId: get_masking_job_tag
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /masking-jobs/{maskingJobId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    post:
      tags:
        - MaskingJobs
      summary: Delete tags for a Masking Job.
      operationId: delete_masking_job_tag
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
        required: false
      responses:
        '204':
          description: No Content
  /masking-jobs/{maskingJobId}/add-engine:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    post:
      tags:
        - MaskingJobs
      summary: Add an engine to a Masking Job (Hyperscale Job only).
      operationId: add_engine_to_masking_job
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: engine_id
              $ref: "#/components/schemas/EngineIdBody"
        description: Body containing the ID of the registered engine.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: AddEngineToJobResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /masking-jobs/{maskingJobId}/remove-engine:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    post:
      tags:
        - MaskingJobs
      summary: Remove an engine from a Masking Job (Hyperscale Job only).
      operationId: remove_engine_from_masking_job
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: engine_id
              $ref: "#/components/schemas/EngineIdBody"
        description: Body containing the ID of the registered engine.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: RemoveEngineFromJobResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /algorithms/{algorithmId}:
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
    get:
      summary: Get an algorithm by ID.
      operationId: get_algorithm_by_id
      tags:
        - Algorithms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Algorithm'
    delete:
      x-internal: true
      summary: Delete an algorithm.
      operationId: delete_algorithm
      tags:
        - Algorithms
      responses:
        '200':
          description: Algorithm delete initiated.
          content:
            application/json:
              schema:
                type: object
                title: DeleteAlgorithmResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /algorithms:
    get:
      tags:
        - Algorithms
      summary: Retrieve the list of algorithms.
      operationId: get_algorithms
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/algorithmsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListAlgorithmsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Algorithm'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      x-internal: true
      tags:
        - Algorithms
      summary: Create a new algorithm.
      operationId: create_algorithm
      requestBody:
        $ref: '#/components/requestBodies/CreateAlgorithm'
        required: true
      responses:
        '201':
          description: Algorithm creation initiated
          content:
            application/json:
              schema:
                type: object
                title: CreateAlgorithmResponse
                properties:
                  id:
                    type: string
                    description: The created algorithm's ID.
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /algorithms/{algorithmId}/tags:
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
    get:
      tags:
        - Algorithms
      summary: Get tags for an Algorithm.
      operationId: get_algorithm_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    post:
      tags:
        - Algorithms
      summary: Create tags for an Algorithm.
      operationId: create_algorithm_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: algorithm_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Algorithm.
        required: true
      responses:
        '201':
          description: Algorithm tags created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /algorithms/{algorithmId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
    post:
      tags:
        - Algorithms
      summary: Delete tags for an Algorithm.
      operationId: delete_algorithm_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /algorithms/{algorithmId}/revisions:
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
    get:
      tags:
        - Algorithms
      summary: Retrieve the list of algorithm revisions for the algorithm.
      operationId: get_algorithm_revisions
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/algorithmRevisionsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListAlgorithmRevisionsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AlgorithmRevision'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      x-internal: true
      tags:
        - Algorithms
      summary: Create a new algorithm revision.
      operationId: create_algorithm_revision
      requestBody:
        $ref: '#/components/requestBodies/CreateAlgorithmRevision'
        required: true
      responses:
        '201':
          description: Algorithm creation revision initiated
          content:
            application/json:
              schema:
                type: object
                title: CreateAlgorithmRevisionResponse
                properties:
                  id:
                    type: string
                    description: The created algorithm revision's ID.
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /algorithms/{algorithmId}/revisions/search:
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
    post:
      tags:
        - Algorithms
      summary: Search for algorithm revisions.
      operationId: search_algorithm_revisions
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          note:
            type: string
          is_primary:
            type: boolean
          plugin_id:
            type: string
          framework_id:
            type: string
          is_default_instance:
            type: boolean
          create_date:
            type: string
          origin_engines:
            type: array[object]
            fields:
              engine_id:
                type: string
              engine_name:
                type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/algorithmRevisionsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchAlgorithmRevisionsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AlgorithmRevision'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /algorithms/{algorithmId}/revisions/{revisionId}:
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
      - $ref: '#/components/parameters/algorithmRevisionIdParam'
    get:
      tags:
        - Algorithms
      summary: Retrieve a specific revision of an algorithm.
      operationId: get_algorithm_revision_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlgorithmRevision'
    patch:
      summary: Update an algorithm revision
      operationId: update_algorithm_revision
      tags:
        - Algorithms
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_algorithm_revision_parameter
              $ref: '#/components/schemas/UpdateAlgorithmRevisionParameters'
        description: The new data to update an algorithm revision.
        required: true
      responses:
        '200':
          description: Algorithm revision update initiated.
          content:
            application/json:
              schema:
                type: object
                title: UpdateAlgorithmRevisionResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
    delete:
      x-internal: true
      summary: Delete an algorithm revision.
      operationId: delete_algorithm_revision
      tags:
        - Algorithms
      responses:
        '200':
          description: Algorithm revision delete initiated.
          content:
            application/json:
              schema:
                type: object
                title: DeleteAlgorithmRevisionResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /algorithms/{algorithmId}/revisions/{revisionId}/make-primary:
    x-internal: true
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
      - $ref: '#/components/parameters/algorithmRevisionIdParam'
    post:
      tags:
        - Algorithms
      summary: Set an algorithm revision to be the primary revision for the algorithm.
      operationId: set_algorithm_primary_revision
      responses:
        '200':
          description: Primary revision modification initiated.
          content:
            application/json:
              schema:
                type: object
                title: SetAlgorithmPrimaryRevisionResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /algorithms/{algorithmId}/revisions/{revisionId}/tags:
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
      - $ref: '#/components/parameters/algorithmRevisionIdParam'
    get:
      tags:
        - Algorithms
      summary: Get tags for an AlgorithmRevision.
      operationId: get_algorithm_revision_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    post:
      tags:
        - Algorithms
      summary: Create tags for an AlgorithmRevision.
      operationId: create_algorithm_revision_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: algorithm_revision_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for AlgorithmRevision.
        required: true
      responses:
        '201':
          description: AlgorithmRevision tags created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /algorithms/{algorithmId}/revisions/{revisionId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
      - $ref: '#/components/parameters/algorithmRevisionIdParam'
    post:
      tags:
        - Algorithms
      summary: Delete tags for an AlgorithmRevision.
      operationId: delete_algorithm_revision_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /algorithms/search:
    post:
      tags:
        - Algorithms
      summary: Search for algorithms.
      operationId: search_algorithms
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          framework_name:
            type: string
          plugin_name:
            type: string
          create_date:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/algorithmsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchAlgorithmsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Algorithm'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /masking-environments:
    get:
      tags:
        - MaskingEnvironments
      summary: Retrieve the list of masking environments.
      operationId: get_masking_environments
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingEnvironmentsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListMaskingEnvironmentsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingEnvironment'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /masking-environments/search:
    post:
      tags:
        - MaskingEnvironments
      summary: Search masking environments.
      operationId: search_masking_environments
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
          purpose:
            type: string
          is_workflow_enabled:
            type: boolean
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingEnvironmentsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchMaskingEnvironmentsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingEnvironment'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /masking-environments/{maskingEnvironmentId}:
    parameters:
      - $ref: '#/components/parameters/maskingEnvironmentId'
    get:
      summary: Retrieve a MaskingEnvironment by ID.
      operationId: get_masking_environment_by_id
      tags:
        - MaskingEnvironments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaskingEnvironment'
  /enabled-features-flag:
    x-internal: true
    get:
      summary: Get enabled feature flags.
      operationId: get_enabled_features_flag
      tags:
        - FeatureFlag
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: List of enabled features.
                type: array
                items:
                  type: string
                example: [ENGINE_DEEP_LINK, DSOURCE_LINKING]
  /masking-plugins:
    x-internal: true
    get:
      tags:
        - MaskingPlugins
      summary: Retrieve the list of masking plugins.
      operationId: get_masking_plugins
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingPluginsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListMaskingPluginsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingPlugin'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      tags:
        - MaskingPlugins
      summary: Install a custom masking plugin.
      operationId: install_masking_plugin
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: install_masking_plugin_parameters
              $ref: "#/components/schemas/InstallMaskingPluginParameters"
        required: true
      responses:
        '201':
          description: Plugin installation initiated
          content:
            application/json:
              schema:
                type: object
                title: InstallMaskingPluginResponse
                properties:
                  id:
                    type: string
                    description: The installed plugin's ID.
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /masking-plugins/{maskingPluginId}:
    x-internal: true
    parameters:
      - $ref: '#/components/parameters/maskingPluginIdParam'
    get:
      summary: Get a masking plugin by ID or name.
      operationId: get_masking_plugin_by_id
      tags:
        - MaskingPlugins
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaskingPlugin'
    delete:
      summary: Delete a custom masking plugin.
      operationId: delete_masking_plugin
      tags:
        - MaskingPlugins
      responses:
        '200':
          description: Masking plugin delete initiated.
          content:
            application/json:
              schema:
                type: object
                title: DeleteMaskingPluginResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /masking-plugins/{maskingPluginId}/tags:
    x-internal: true
    parameters:
      - $ref: '#/components/parameters/maskingPluginIdParam'
    get:
      tags:
        - MaskingPlugins
      summary: Get tags for a masking plugin.
      operationId: get_masking_plugin_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    post:
      tags:
        - MaskingPlugins
      summary: Create tags for a masking plugin.
      operationId: create_masking_plugin_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: masking_plugin_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for masking plugin.
        required: true
      responses:
        '201':
          description: Masking plugin tags created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /masking-plugins/{maskingPluginId}/tags/delete:
    x-internal: true
    parameters:
      - $ref: '#/components/parameters/maskingPluginIdParam'
    post:
      tags:
        - MaskingPlugins
      summary: Delete tags for a masking plugin.
      operationId: delete_masking_plugin_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /masking-plugins/search:
    x-internal: true
    post:
      tags:
        - MaskingPlugins
      summary: Search for masking plugins.
      operationId: search_masking_plugins
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          plugin_type:
            type: string
          description:
            type: string
          install_date:
            type: string
          built_in:
            type: boolean
          sdk_version:
            type: string
          version:
            type: string
          author:
            type: string
          frameworks:
            type: array[object]
            fields:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              masking_type:
                type: string
                enum:
                  - STRING
                  - DATE
                  - LOCAL_DATE_TIME
                  - BIG_DECIMAL
                  - BYTE_BUFFER
                  - GENERIC_DATA_ROW
                  - ADVANCED_OBJECT
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingPluginsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchMaskingPluginsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingPlugin'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
components:
  parameters:
    auditLogsSummaryReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: account_first_name
      required: false
      schema:
        type: string
        enum: [ account_id, -account_id, account_first_name, -account_first_name, account_last_name, -account_last_name, vdb_refreshes, -vdb_refreshes, masking_jobs, -masking_jobs ]
        nullable: true
        example: account_first_name
    limit:
      name: limit
      in: query
      description: >-
        Maximum number of objects to return per query. The value must be between 1
        and 1000. Default is 100.
      example: 50
      schema:
        type: integer
        minimum: 1
        maximum: 1000
        default: 100
    limitExtendedParam:
      name: limit
      in: query
      description: >-
        Maximum number of objects to return per query. The value must be between 1
        and 1000. Default is 10000.
      example: 100
      schema:
        type: integer
        minimum: 1
        maximum: 10000
        default: 10000
    cursor:
      name: cursor
      in: query
      description: >-
        Cursor to fetch the next or previous page of results. The value of this property must be extracted from the 'prev_cursor' or 'next_cursor' property of a PaginatedResponseMetadata which is contained in the response of list and search API endpoints.
      schema:
        type: string
        minLength: 1
        maxLength: 4096
    startDate:
      name: start_date
      in: query
      description: Report start date/time. Defaults to first API request.
      example: "2022-05-29T15:00:00-04:00"
      schema:
        type: string
        format: date-time
    endDate:
      name: end_date
      in: query
      description: Report end date/time. Defaults to current time.
      example: "2022-06-07T15:10:00-04:00"
      schema:
        type: string
        format: date-time
    apiMetricKind:
      name: api_metric_kind
      in: query
      description: Restrict the list to API usage metric of the given kind
      example: automation
      schema:
        type: string
        enum: [automation, governance]
    permission:
      name: permission
      in: query
      description: Restrict the objects, which are allowed.
      example: READ
      schema:
        $ref: '#/components/schemas/PermissionEnum'
    maskingJobDeleteForceParam:
      name: force
      in: query
      description: If true, ignores any failures to remove a masking job on an engine.
      example: true
      schema:
        type: boolean
        default: false
    roleSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, description, -description ]
        nullable: true
        example: name
    accessGroupsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name ]
        nullable: true
        example: name
    virtualizationStorageReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: engine_id
      required: false
      schema:
        type: string
        enum: [ engine_id, -engine_id, engine_name, -engine_name, engine_hostname, -engine_hostname, total_capacity, -total_capacity, free_storage, -free_storage, used_storage, -used_storage, used_percentage, -used_percentage, dsource_count, -dsource_count, vdb_count, -vdb_count, total_object_count, -total_object_count ]
        nullable: true
        example: engine_id
    EnginePerformanceAnalyticReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: engine_name
      required: false
      schema:
        type: string
        enum: [ engine_id, -engine_id, engine_name, -engine_name, cpu_cores_count, -cpu_cores_count, cpu_utilization, -cpu_utilization, total_memory, -total_memory, average_disk_latency_read, -average_disk_latency_read, average_disk_latency_write, -average_disk_latency_write, average_disk_latency_total, -average_disk_latency_total, average_disk_throughput_read, -average_disk_throughput_read, average_disk_throughput_write, -average_disk_throughput_write, average_disk_throughput_total, -average_disk_throughput_total, average_disk_iops_read, -average_disk_iops_read, average_disk_iops_write, -average_disk_iops_write, average_disk_iops_total, -average_disk_iops_total, average_nfs_latency_read, -average_nfs_latency_read, average_nfs_latency_write, -average_nfs_latency_write, average_nfs_latency_total, -average_nfs_latency_total, average_nfs_throughput_read, -average_nfs_throughput_read, average_nfs_throughput_write, -average_nfs_throughput_write, average_nfs_throughput_total, -average_nfs_throughput_total, average_nfs_iops_read, -average_nfs_iops_read, average_nfs_iops_write, -average_nfs_iops_write, average_nfs_iops_total, -average_nfs_iops_total, average_iscsi_latency_read, -average_iscsi_latency_read, average_iscsi_latency_write, -average_iscsi_latency_write, average_iscsi_latency_total, -average_iscsi_latency_total, average_iscsi_throughput_read, -average_iscsi_throughput_read, average_iscsi_throughput_write, -average_iscsi_throughput_write, average_iscsi_throughput_total, -average_iscsi_throughput_total, average_iscsi_iops_read, -average_iscsi_iops_read, average_iscsi_iops_write, -average_iscsi_iops_write, average_iscsi_iops_total, -average_iscsi_iops_total, average_network_throughput_transmit, -average_network_throughput_transmit, average_network_throughput_receive, -average_network_throughput_receive ]
        nullable: true
        example: engine_name
    EnginePerformanceAnalyticTrendSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: engine_name
      required: false
      schema:
        type: string
        enum: [ engine_id, -engine_id, trend_type, -trend_type, aggregation_period, -aggregation_period ]
        nullable: true
        example: engine_name
    engineGlobalObjectStateReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: engine_id
      required: false
      schema:
        type: string
        enum: [ engine_id, -engine_id, engine_name, -engine_name, jobs_count, -jobs_count, connectors_count, -connectors_count, rulesets_count, -rulesets_count, global_object_revision_hash, -global_object_revision_hash ]
        nullable: true
        example: engine_id
    reportingScheduleSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: report_id
      required: false
      schema:
        type: string
        enum: [ report_id, -report_id, report_type, -report_type, cron_expression, -cron_expression, time_zone, -time_zone, message, -message, file_format, -file_format, enabled, -enabled, sort_column, -sort_column ]
        nullable: true
        example: report_id
    engineSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, uuid, -uuid, type, -type, version, -version, name, -name, hostname, -hostname, cpu_core_count, -cpu_core_count, memory_size, -memory_size, data_storage_capacity, -data_storage_capacity, data_storage_used, -data_storage_used, username, -username, hashicorp_vault_id, -hashicorp_vault_id, connection_status, -connection_status, connection_status_details, -connection_status_details, engine_connection_status, -engine_connection_status, engine_connection_status_details, -engine_connection_status_details, masking_memory_used, -masking_memory_used, masking_allocated_memory, -masking_allocated_memory, masking_jobs_running, -masking_jobs_running, masking_max_concurrent_jobs, -masking_max_concurrent_jobs, masking_available_cores, -masking_available_cores ]
        nullable: true
        example: name
    hyperscaleInstanceIdParam:
      in: path
      name: hyperscaleInstanceId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the Hyperscale Instance.
    hyperscaleInstancesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, hostname, -hostname, creation_date, -creation_date, status, -status, data_type, -data_type, connection_status, -connection_status, connection_status_details, -connection_status_details ]
        nullable: true
        example: name
    hyperscaleMountPointsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, hostname, -hostname, mount_type, -mount_type, options, -options, mount_path, -mount_path, hyperscale_instance_id, -hyperscale_instance_id ]
        nullable: true
        example: name
    hyperscaleConnectorsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, hyperscale_instance_id, -hyperscale_instance_id, data_type, -data_type, source_username, -source_username, source_jdbc_url, -source_jdbc_url, source_mongo_url, -source_mongo_url, target_username, -target_username, target_jdbc_url, -target_jdbc_url, target_mongo_url, -target_mongo_url]
        nullable: true
        example: source_username
    hyperscaleDatasetsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, hyperscale_instance_id, -hyperscale_instance_id, data_type, -data_type, connector_id, -connector_id, mount_point_id, -mount_point_id]
        nullable: true
        example: id
    hyperscaleDatasetTablesOrFilesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, schema_name, -schema_name, table_name, -table_name, database_name, -database_name, collection_name, -collection_name, filter_key, -filter_key, column_array_rows, -column_array_rows, unload_split, -unload_split, stream_size, -stream_size ]
        nullable: true
        example: table_name
    algorithmsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, description, -description, plugin_name, -plugin_name, framework_name, -framework_name, create_date, -create_date ]
        nullable: true
        example: name
    algorithmRevisionsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, note, -note, plugin_id, -plugin_id, framework_id, -framework_id, is_primary, -is_primary, is_default_instance, -is_default_instance, create_date, -create_date ]
        nullable: true
        example: name
    maskingJobsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, is_on_the_fly_masking, -is_on_the_fly_masking, creation_date, -creation_date, last_completed_execution_date, -last_completed_execution_date, last_execution_status, -last_execution_status, last_execution_id, -last_execution_id, ruleset.name, -ruleset.name, connector_type, -connector_type, description, -description, dataset_id, -dataset_id, retain_execution_data, -retain_execution_data, parallelism_degree, -parallelism_degree, max_concurrent_target_connections, -max_concurrent_target_connections, max_concurrent_source_connections, -max_concurrent_source_connections, num_input_streams, -num_input_streams, stream_row_limit, -stream_row_limit, feedback_size, -feedback_size, min_memory, -min_memory, max_memory, -max_memory ]
        nullable: true
        example: name
    maskingExecutionMetricsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, masking_job_name, -masking_job_name, connector_type, -connector_type, ruleset_name,
                -ruleset_name, rows_masked, -rows_masked,
                rows_total, -rows_total,
                bytes_masked, -bytes_masked,
                bytes_total, -bytes_total,
                duration, -duration,
                tables_files_count, -tables_files_count,
                masked_tables_files_count, -masked_tables_files_count,
                columns_fields_count, -columns_fields_count,
                masked_columns_fields_count, -masked_columns_fields_count,
                masking_job_type, -masking_job_type
        ]
        nullable: true
        example: name
    maskingEnvironmentsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, engine_id, -engine_id, engine_name, -engine_name, purpose, -purpose, is_workflow_enabled, -is_workflow_enabled ]
        nullable: true
        example: name
    maskingJobSourceEnginesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ masking_job_id, -masking_job_id, source_engine_id, -source_engine_id ]
        nullable: true
        example: name
    executionsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, engine_id, -engine_id, engine_name, -engine_name, masking_job_id, -masking_job_id, masking_job_name, -masking_job_name, source_connector_id, -source_connector_id, target_connector_id, -target_connector_id, status, -status, rows_masked, -rows_masked, rows_total, -rows_total, bytes_processed, -bytes_processed, bytes_total, -bytes_total, start_time, -start_time, end_time, -end_time, submit_time, -submit_time ]
        nullable: true
        example: name
    executionEventsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, execution_id, -execution_id, event_type, -event_type, severity, -severity, cause, -cause, count, -count, timestamp, -timestamp, masked_object_name, -masked_object_name, bytes_processed, -bytes_processed, algorithm_name, -algorithm_name, exception_type, -exception_type, exception_detail, -exception_detail ]
        nullable: true
        example: id
    connectorsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, engine_id, -engine_id, type, -type, name, -name, hostname, -hostname, username, -username, port, -port ]
        nullable: true
        example: name
    jobsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, status, -status, type, -type, localized_type, -localized_type, target_id, -target_id, target_name, -target_name, start_time, -start_time, update_time, -update_time, error_details, -error_details, trace_id, -trace_id, account_id, -account_id, account_name, -account_name ]
        nullable: true
        default: -start_time
        example: id
    apiUsageReportGroupByParam:
      name: group_by
      in: query
      description: The field to group results by.
      required: false
      schema:
        type: array
        items:
          enum: [ api_endpoint, api_method, kind, client_name, user_agent, dct_version ]
        minItems: 1
    apiUsageReportClientNameFilterParam:
      name: client_name
      in: query
      description: The Client names to be included in the report.
      required: false
      schema:
        type: array
        items:
          type: string
        minLength: 1
    apiUsageReportUserAgentFilterParam:
      name: user_agent
      in: query
      description: The UserAgent names to be included in the report.
      required: false
      schema:
        type: array
        items:
          type: string
        minLength: 1
    apiUsageReportDctVersionFilterParam:
      name: dct_version
      in: query
      description: The DCT versions to be included in the report.
      required: false
      schema:
        type: array
        items:
          type: string
        minLength: 1
    hashicorpVaultsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id ]
        nullable: true
        example: name
    accountsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, api_client_id, -api_client_id, username, first_name, last_name, email, -username, -first_name, -last_name, -email, last_access_time, -last_access_time, creation_time, -creation_time]
        nullable: true
        example: id
    engineIdQueryParam:
      in: query
      name: engine_id
      description: ID of a registered engine.
      required: true
      schema:
        type: string
        minLength: 1
      example: 1
    hyperscaleMountPointIdParam:
      in: path
      name: hyperscaleMountPointId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the Hyperscale Mount Point.
    hyperscaleConnectorIdParam:
      in: path
      name: hyperscaleConnectorId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the Hyperscale Connector.
    hyperscaleDatasetIdParam:
      in: path
      name: hyperscaleDatasetId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the Hyperscale Dataset.
    hyperscaleDatasetTableOrFileIdParam:
      in: path
      name: hyperscaleDatasetTableOrFileId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the Hyperscale Dataset table or file.
    engineIdParam:
      in: path
      name: engineId
      schema:
        type: string
      required: true
      description: The ID of the registered engine.
    hyperscaleInstanceId:
      in: path
      name: hyperscaleInstanceId
      schema:
        type: string
      required: true
      description: The ID of hyperscale instance.
    reportIdParam:
      in: path
      name: reportId
      schema:
        type: integer
      required: true
      description: The ID of the report schedule.
    algorithmIdParam:
      in: path
      name: algorithmId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Algorithm.
    algorithmRevisionIdParam:
      in: path
      name: revisionId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Algorithm revision.
    maskingPluginIdParam:
      in: path
      name: maskingPluginId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the masking plugin.
    accessGroupIdParam:
      in: path
      name: accessGroupId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Access group.
    roleIdParam:
      in: path
      name: roleId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the role.
    scopeIdParam:
      in: path
      name: scopeId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Access group scope.
    accountIdParam:
      in: path
      name: id
      schema:
        type: integer
        format: int64
      required: true
      description: Numeric ID of the Account.
    maskingJobIdParam:
      in: path
      name: maskingJobId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Masking Job.
    maskingEnvironmentId:
      in: path
      name: maskingEnvironmentId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Masking Environment.
    executionIdParam:
      in: path
      name: executionId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Execution.
    connectorIdParam:
      in: path
      name: connectorId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Connector.
    objectIdParam:
      in: path
      name: objectId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the DCT Object.
    objectTypeParam:
      in: path
      name: objectType
      schema:
        type: string
        enum: [ ACCESS_GROUP,ACCOUNT,AUDIT_LOGS_SUMMARY_REPORT,ROLE,API_USAGE_REPORT,BOOKMARK,CDB,DATABASE_TEMPLATE,DSOURCE,ENGINE,ENVIRONMENT,MASKING_JOB,MASKING_ENVIRONMENT,MASKING_JOB_SET,REPORT_SCHEDULE,SOURCE,VAULT,VCDB,VDB,VDB_GROUP,CONNECTOR,CONNECTIVITY_CHECK,DSOURCE_USAGE_REPORT,DSOURCE_CONSUMPTION_REPORT,JOB,PRODUCT_INFO,SMTP_CONFIG,MASKING_EXECUTION_METRICS_REPORT,STORAGE_SUMMARY_REPORT,STORAGE_SAVINGS_SUMMARY_REPORT,VDB_INVENTORY_REPORT,LDAP,SAML,PASSWORD_POLICY,GLOBAL_PROPERTIES,SYSTEM,API_CLASSIFICATION,VIRTUALIZATION_POLICY,HYPERSCALE_INSTANCE,HYPERSCALE_CONNECTOR,HYPERSCALE_DATASET,MASKING_PLUGIN,REPLICATION_PROFILE,ENGINE_PERFORMANCE_ANALYTIC_REPORT,ENGINE_GLOBAL_OBJECT_STATE_REPORT]
      required: true
      description: The type of the DCT object.
    maskingPluginsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, plugin_type, -plugin_type, description, -description, install_date, -install_date, built_in, -built_in, sdk_version, -sdk_version, version, -version, author, -author]
        nullable: true
        example: name
  schemas:
    AuditLogsSummary:
      description: The summary of actions performed by an account.
      type: object
      properties:
        account_id:
          type: integer
          format: int64
        account_first_name:
          type: string
          minLength: 1
          maxLength: 256
        account_last_name:
          type: string
          minLength: 1
          maxLength: 256
        vdb_refreshes:
          description: The number of VDB refreshes performed by the account.
          type: integer
          format: int32
        masking_jobs:
          description: The number of compliance jobs executed by the account.
          type: integer
          format: int32
    EnginePerformanceAnalytic:
      description: Analytics Information of the engine.
      type: object
      properties:
        engine_name:
          description: The engine name.
          type: string
        engine_id:
          description: The engine id.
          type: string
        engine_type:
          description: The engine type.
          type: string
          enum: [ VIRTUALIZATION, MASKING, UNSET ]
        aggregation_period:
          description: The time period by which engine performance analytics data is being aggregated, in hours.
          type: integer
        cpu_cores_count:
          description: The total number of CPU cores on this engine.
          type: integer
        cpu_utilization:
          description: The total cpu utilization of this engine, in percentage.
          type: number
          format: double
        total_memory:
          description: The total amount of memory on this engine, in bytes.
          type: integer
          format: int64
        average_disk_latency_read:
          description: The average I/O latency of disk for read operation, in nanoseconds.
          type: integer
          format: int64
        average_disk_latency_write:
          description: The average I/O latency of disk for write operation, in nanoseconds.
          type: integer
          format: int64
        average_disk_latency_total:
          description: The average I/O latency of disk for both (read and write) operations, in nanoseconds.
          type: integer
          format: int64
        average_disk_throughput_read:
          description: The average I/O throughput of disk for read operation, in bytes/s.
          type: integer
          format: int64
        average_disk_throughput_write:
          description: The average I/O throughput of disk for write operation, in bytes/s.
          type: integer
          format: int64
        average_disk_throughput_total:
          description: The average I/O throughput of disk for both (read and write) operations, in bytes/s.
          type: integer
          format: int64
        average_disk_iops_read:
          description: The average number of read I/O operations of disk per seconds.
          type: integer
          format: int64
        average_disk_iops_write:
          description: The average number of write I/O operations of disk per seconds.
          type: integer
          format: int64
        average_disk_iops_total:
          description: The average number of read and write I/O operations of disk per seconds.
          type: integer
          format: int64
        average_nfs_latency_read:
          description: The average I/O latency of nfs for read operation, in nanoseconds.
          type: integer
          format: int64
        average_nfs_latency_write:
          description: The average I/O latency of nfs for write operation, in nanoseconds.
          type: integer
          format: int64
        average_nfs_latency_total:
          description: The average I/O latency of nfs for both (read and write) operation, in nanoseconds.
          type: integer
          format: int64
        average_nfs_throughput_read:
          description: The average I/O throughput of disk for read operations, in bytes/s.
          type: integer
          format: int64
        average_nfs_throughput_write:
          description: The average I/O throughput of nfs for write operations, in bytes/s.
          type: integer
          format: int64
        average_nfs_throughput_total:
          description: The average I/O throughput of nfs for both (read and write) operations, in bytes/s.
          type: integer
          format: int64
        average_nfs_iops_read:
          description: The average number of read I/O operations of nfs per seconds.
          type: integer
          format: int64
        average_nfs_iops_write:
          description: The average number of write I/O operations of nfs per seconds.
          type: integer
          format: int64
        average_nfs_iops_total:
          description: The average number of read and write I/O operations of nfs per seconds.
          type: integer
          format: int64
        average_iscsi_latency_read:
          description: The average I/O latency of iSCSI for read operation, in nanoseconds.
          type: integer
          format: int64
        average_iscsi_latency_write:
          description: The average I/O latency of iSCSI for write operation, in nanoseconds.
          type: integer
          format: int64
        average_iscsi_latency_total:
          description: The average I/O latency of iSCSI for both (read and write) operation, in nanoseconds.
          type: integer
          format: int64
        average_iscsi_throughput_read:
          description: The average I/O throughput of iSCSI read operations, in bytes/s.
          type: integer
          format: int64
        average_iscsi_throughput_write:
          description: The average I/O throughput of iSCSI for write operations, in bytes/s.
          type: integer
          format: int64
        average_iscsi_throughput_total:
          description: The average I/O throughput of iSCSI for both (read and write) operations, in bytes/s.
          type: integer
          format: int64
        average_iscsi_iops_read:
          description: The average number of read I/O operations of iSCSI per seconds.
          type: integer
          format: int64
        average_iscsi_iops_write:
          description: The average number of write I/O operations of iSCSI per seconds.
          type: integer
          format: int64
        average_iscsi_iops_total:
          description: The average number of read and write I/O operations of iSCSI per seconds.
          type: integer
          format: int64
        average_network_throughput_transmit:
          description: The average bytes transmitted on the network interface, in bytes/s.
          type: integer
          format: int64
        average_network_throughput_receive:
          description: The average bytes received on the network interface, in bytes/s.
          type: integer
          format: int64

    EnginePerformanceAnalyticTrend:
      type: object
      properties:
        trend_type:
          type: string
          enum:
            - CPU_UTILIZATION
            - NETWORK_THROUGHPUT_TRANSMIT
            - NETWORK_THROUGHPUT_RECEIVE
            - DISK_LATENCY_WRITE
            - DISK_LATENCY_READ
            - DISK_LATENCY_TOTAL
            - DISK_THROUGHPUT_WRITE
            - DISK_THROUGHPUT_READ
            - DISK_THROUGHPUT_TOTAL
            - DISK_IOPS_READ
            - DISK_IOPS_WRITE
            - DISK_IOPS_TOTAL
            - NFS_LATENCY_WRITE
            - NFS_LATENCY_READ
            - NFS_LATENCY_TOTAL
            - NFS_THROUGHPUT_WRITE
            - NFS_THROUGHPUT_READ
            - NFS_THROUGHPUT_TOTAL
            - NFS_IOPS_WRITE
            - NFS_IOPS_READ
            - NFS_IOPS_TOTAL
            - iSCSI_LATENCY_WRITE
            - iSCSI_LATENCY_READ
            - iSCSI_LATENCY_TOTAL
            - iSCSI_THROUGHPUT_WRITE
            - iSCSI_THROUGHPUT_READ
            - iSCSI_THROUGHPUT_TOTAL
            - iSCSI_IOPS_WRITE
            - iSCSI_IOPS_READ
            - iSCSI_IOPS_TOTAL
          example: 'CPU_UTILIZATION'
        engine_id:
          description: The engine id.
          type: string
        aggregation_period:
          description: The time period by which engine performance analytics data is being aggregated, in hours.
          type: integer
          example: 6
        datapoint:
          type: array
          items:
            type: object
            properties:
              data:
                type: integer
                format: int64
              time:
                type: string
                format: date-time

    AuditLogsSummaryTotals:
      description: The global totals of different actions performed across all accounts.
      type: object
      properties:
        total_vdb_refreshes:
          type: integer
          format: int32
        total_masking_jobs:
          type: integer
          format: int32
    ObjectPermissionsResponse:
      description: The object permissions for a given object in DCT based on object type and object id.
      type: object
      properties:
        accounts:
          description: The Accounts permitted for this object.
          type: array
          items:
            $ref: '#/components/schemas/ObjectPermissionAccount'
    ObjectPermissionAccount:
      description: The account details for object permission.
      type: object
      properties:
        id:
          description: Numeric ID of the Account.
          type: integer
          format: int64
        first_name:
          description:  First name of the Account.
          type: string
        last_name:
          description: Last name of the Account.
          type: string
        email:
          description: Email of the Account.
          type: string
        access_groups:
          description: Access groups of the Account.
          type: array
          items:
            $ref: '#/components/schemas/ObjectPermissionAccessGroups'
    ObjectPermissionAccessGroups:
      description: The account groups for object permission account.
      type: object
      properties:
        id:
          description: ID of the access group.
          type: string
        name:
          description: Name of the access group.
          type: string
        permissions:
          description: Permissions for the object in this access group.
          type: array
          items:
            type: string
    AccessGroup:
      description: An Access group is the DCT mechanism to grant roles to accounts. Each account has its own Access
        Group which can be used to manage permissions for that account, and an unlimited number of other
        Access groups can be created to manage permissions by groups of accounts.
      type: object
      required:
        - name
      properties:
        id:
          description: The Access group ID.
          type: string
          readOnly: true
        name:
          description: The Access group name
          type: string
          minLength: 1
          maxLength: 256
        single_account:
          description: Indicates that this Access group defines the permissions of a single account, and thus
            account and account tags cannot be modified. Instead create a new Access group to manage
            permissions of multiple accounts.
          type: boolean
        account_ids:
          description: List of accounts ids included individually (as opposed to added by tags) in the Access group.
          type: array
          items:
            type: integer
            format: int64
        tagged_account_ids:
          description: List of accounts ids included by tags in the Access group.
          readOnly: true
          type: array
          items:
            type: integer
            format: int64
        account_tags:
          description: List of account tags. Accounts matching any of these tags will be automatically added to
            the Access group.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        scopes:
          description: The Access group scopes.
          type: array
          items:
            $ref: '#/components/schemas/AccessGroupScope'
    AccessGroupUpdateParameters:
      type: object
      properties:
        name:
          description: The Access group name
          type: string
          minLength: 1
          maxLength: 256
    RoleUpdateParameters:
      type: object
      properties:
        name:
          description: The role name
          type: string
          minLength: 1
          maxLength: 256
        description:
          description: The role description
          type: string
          minLength: 1
          maxLength: 512
    PermissionObject:
      description: A Permission Object which is mapping between object type and its permissions.
      allOf:
        - $ref: '#/components/schemas/ObjectTypeProperty'
        - $ref: '#/components/schemas/PermissionProperty'
    ObjectTypeProperty:
      description: A DCT object type.
      type: object
      required:
        - object_type
      properties:
        object_type:
          description: Object type.
          type: string
          enum: [ ACCESS_GROUP,ACCOUNT,AUDIT_LOGS_SUMMARY_REPORT,ROLE,API_USAGE_REPORT,BOOKMARK,CDB,DATABASE_TEMPLATE,DSOURCE,ENGINE,ENVIRONMENT,MASKING_JOB,MASKING_ENVIRONMENT,MASKING_ALGORITHM_REVISION,MASKING_JOB_SET,REPORT_SCHEDULE,SOURCE,VAULT,VCDB,VDB,VDB_GROUP,CONNECTOR,CONNECTIVITY_CHECK,DSOURCE_USAGE_REPORT,DSOURCE_CONSUMPTION_REPORT,JOB,PHONEHOME_BUNDLE,PRODUCT_INFO,PRODUCT_REGISTRATION,PROXY_CONFIGURATION,SMTP_CONFIG,MASKING_EXECUTION_METRICS_REPORT,STORAGE_SUMMARY_REPORT,STORAGE_SAVINGS_SUMMARY_REPORT,VDB_INVENTORY_REPORT,LDAP,SAML,PASSWORD_POLICY,GLOBAL_PROPERTIES,SYSTEM,API_CLASSIFICATION,VIRTUALIZATION_POLICY,DATASET_GROUP,METADATA_DATABASE,ENGINE_VAULT,KERBEROS_CONFIG,TIMEFLOW,MASKING_ALGORITHM,HYPERSCALE_INSTANCE,HYPERSCALE_CONNECTOR,HYPERSCALE_DATASET,TOOLKIT,MASKING_PLUGIN,REPLICATION_PROFILE,ENGINE_PERFORMANCE_ANALYTIC_REPORT,STAGING_SOURCE,ENGINE_GLOBAL_OBJECT_STATE_REPORT]
          example: 'VDB'
    PermissionProperty:
      description: A Permission object.
      type: object
      required:
        - permissions
      properties:
        permissions:
          description: List of permissions.
          type: array
          items:
            type: string
            enum: [CREATE,READ,UPDATE,DELETE,EXECUTE,CANCEL,MIGRATE,REFRESH,DISABLE,ENABLE,GLOBAL_SYNC_ENGINES,ABANDON,VALIDATE,START,STOP,SNAPSHOT,COPY,REMOVE_JOB,PASSWORD_RESET,UNDO_IMPORT,IMPORT,PROVISION_FROM_BOOKMARK,PROVISION,REFRESH_FROM_BOOKMARK,REFRESH_FROM_SNAPSHOT,REFRESH_FROM_TIMESTAMP,CREATE_ENVIRONMENT,CREATE_BOOKMARK,CREATE_VDBGROUP, MANAGE_TAGS, SET_TAGS_AT_OBJECT_CREATION, SNAPSHOT_UPDATE, SNAPSHOT_DELETE, SWITCH_TIMEFLOW, UPDATE_TIMEFLOW, DELETE_TIMEFLOW,LINK, LOCK, UNLOCK, LOCK_FOR_OTHER_ACCOUNT, FORCE_UNLOCK, ADD_ENGINE_TO_HYPERSCALE, UPLOAD_MASKING_FILE]
          minItems: 1
          maxItems: 1000
          uniqueItems: true
    ApiClassificationObject:
      description: An API classification object which classifies APIs as automation or governance.
      type: object
      properties:
        api_method:
          description: HTTP method of the API.
          type: string
          enum: [ GET,POST,PUT,PATCH,DELETE ]
          example: 'POST'
        path:
          description: context path of the API.
          type: string
          minLength: 1
          maxLength: 256
          example: '/vdb-groups'
        is_automation:
          description: Either this API is automation or not.
          type: boolean
          example: true
        start_date:
          description: The start date and time from when this api's is_automation definition has changed.
          type: string
          format: date-time
        end_date:
          description: The end date and time from when this api's is_automation definition has changed.
          type: string
          format: date-time
    AllObjectPermissionsResponse:
      type: object
      properties:
        object_permissions:
          type: array
          items:
            $ref: '#/components/schemas/PermissionObject'
    AccessGroupScope:
      description: An Access group scope allows a role to be granted to accounts in the Access group.
      type: object
      required:
        - role_id
      properties:
        id:
          description: The Access group scope ID.
          type: string
          readOnly: true
        name:
          description: The Access group scope name.
          type: string
          minLength: 1
          maxLength: 256
        role_id:
          description: The Access group role id.
          type: string
          minLength: 1
          maxLength: 256
        scope_type:
          description: Specifies the type of the scope. Scope of type SIMPLE would grant access to all DCT objects. Scope of type SCOPED would grant access to all objects based on objects and object-tags and permissions defined in linked role. Scope of type ADVANCED would grant access to DCT objects based on objects and object-tags and the individual permissions.
          type: string
          enum:
            - SIMPLE
            - SCOPED
            - ADVANCED
          example: SCOPED
        object_tags:
          description: The permissions in this access group scope will be granted to all DCT objects tagged with tags matching this property. This is cumulative with objects defined in the 'objects' property, and mutually exclusive with scope_type 'SIMPLE'.
          type: array
          items:
            $ref: '#/components/schemas/ScopeTag'
        objects:
          description: The permissions in this access group scope will be granted to all DCT objects with matching object id and object type, mutually exclusive with  scope_type 'SIMPLE'.
          type: array
          items:
            $ref: '#/components/schemas/ScopedObjectItem'
        always_allowed_permissions:
          description: An array of always allowed permissions which can be used to specify object type and permission. An object with same object type and permission can not be added in 'objects' array.
          type: array
          items:
            $ref: '#/components/schemas/AlwaysAllowedPermission'
    UpdateAccessGroupScope:
      description: An Access group scope parameters that are allowed to update.
      type: object
      properties:
        name:
          description: The Access group scope name.
          type: string
          minLength: 1
          maxLength: 256
        scope_type:
          description: Specifies the type of the scope. Scope of type SIMPLE would grant access to all DCT objects. Scope of type SCOPED would grant access to all objects based on objects and object-tags and permissions defined in linked role. Scope of type ADVANCED would grant access to DCT objects based on objects and object-tags and the individual permissions.
          type: string
          enum:
            - SIMPLE
            - SCOPED
            - ADVANCED
          example: SCOPED
    Role:
      description: A role is a named collection of permissions on DCT objects.
      allOf:
        - $ref: '#/components/schemas/CreateRole'
        - type: object
          properties:
            id:
              description: The Role ID.
              type: string
            system_role:
              description: System role are pre defined roles. System roles cannot be modified.
              type: boolean
    CreateRole:
      description: A role Object to create a custom role.
      type: object
      required:
        - name
        - permission_objects
      properties:
        name:
          description: The Role name.
          type: string
        description:
          description: Role description.
          type: string
        permission_objects:
          description: The list of permissions granted by this role.
          type: array
          items:
            $ref: '#/components/schemas/PermissionObject'
          minItems: 1
          maxItems: 1000
          uniqueItems: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    AccessGroupAccountIdsRequest:
      type: object
      required:
        - account_ids
      properties:
        account_ids:
          type: array
          items:
            type: integer
            format: int64
          minItems: 1
          maxItems: 1000
          uniqueItems: true
    AccessGroupScopesRequest:
      type: object
      required:
        - scopes
      properties:
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/AccessGroupScope'
          minItems: 1
          maxItems: 1000
    MaskingFileUploadParameters:
      x-internal: true
      description: Parameters to upload a file for masking.
      type: object
      required:
        - file
      properties:
        file:
          description: The file to upload.
          type: string
          format: binary
    InstallMaskingPluginParameters:
      x-internal: true
      description: Parameters to install a custom masking plugin.
      type: object
      required:
        - plugin_file_reference
      properties:
        plugin_file_reference:
          description: File reference for the plugin JAR.
          type: string
          example: delphix-file://upload/f_0ea61f94f53c4441890e8fac88805048/plugin.jar
        tags:
          description: The tags of this plugin.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    AlgorithmCreateParameters:
      x-internal: true
      description: Parameters to create a masking algorithm.
      type: object
      required:
        - name
        - plugin_id
        - config
        - framework_name
      properties:
        name:
          description: The name of this Algorithm.
          type: string
          example: Address
        description:
          description: A description of this algorithm.
          type: string
        plugin_id:
          description: The id of the plugin which this algorithm will use.
          type: string
          example: dc91e41c-aade-4404-9084-179cb90d07c6
        config:
          description: The configuration of this algorithm.
          type: object
          additionalProperties: true
        framework_name:
          description: Name for the framework of this algorithm.
          type: string
        tags:
          description: The tags of this algorithm.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    AlgorithmRevisionCreateParameters:
      x-internal: true
      description: Parameters to create a masking algorithm revision.
      type: object
      required:
        - name
        - plugin_id
        - config
      properties:
        name:
          description: The name of this Algorithm.
          type: string
          example: Address
        note:
          description: A note of this algorithm.
          type: string
        plugin_id:
          description: The id of the plugin which this algorithm will use.
          type: string
          example: dc91e41c-aade-4404-9084-179cb90d07c6
        config:
          description: The configuration of this algorithm revision.
          type: object
          additionalProperties: true
        tags:
          description: The tags of this algorithm revision.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    UpdateAlgorithmRevisionParameters:
      x-internal: true
      description: Parameters to update a masking algorithm revision.
      type: object
      properties:
        name:
          description: The name of this algorithm revision.
          type: string
          example: Address
        note:
          description: A note of this algorithm revision.
          type: string
    Algorithm:
      description: A masking algorithm.
      type: object
      required:
        - id
        - name
        - plugin_name
        - framework_name
      properties:
        id:
          description: The algorithm entity ID.
          type: string
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        name:
          description: The name of this algorithm.
          type: string
          example: Address
        description:
          description: A description of this algorithm.
          type: string
          nullable: true
        plugin_name:
          description: The name of the plugin that this algorithm belongs to.
          type: string
          example: dlpx-core
        framework_name:
          description: The name of the framework that this algorithm belongs to.
          type: string
          example: Secure Lookup
        create_date:
          description: The date and time this algorithm was created.
          type: string
          format: date-time
          example: "2022-11-30T08:51:34.148000+00:00"
        tags:
          description: The tags of this algorithm.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    AlgorithmRevision:
      description: A masking algorithm revision.
      type: object
      required:
        - id
        - name
        - algorithm_id
        - plugin_id
        - framework_id
        - is_primary
        - is_default_instance
      properties:
        id:
          description: The algorithm revision ID.
          type: string
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        name:
          description: The name of this algorithm revision.
          type: string
          example: Dev
        note:
          description: A note of this algorithm.
          type: string
          nullable: true
        algorithm_id:
          description: The id of the algorithm that this revision belongs to.
          type: string
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        plugin_id:
          description: The id of the plugin that this algorithm revision belongs to.
          type: string
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        framework_id:
          description: The id of the framework that this algorithm revision belongs to.
          type: string
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        is_primary:
          description: Whether this algorithm revision is the primary revision of its algorithm.
          type: boolean
        is_default_instance:
          description: Whether this algorithm revision is defined in a plugin as a default instance.
          type: boolean
        create_date:
          description: The date and time this algorithm revision was created.
          type: string
          format: date-time
          example: "2022-11-30T08:51:34.148000+00:00"
        origin_engines:
          description: The engines that this algorithm revision is originated from.
          type: array
          items:
            $ref: '#/components/schemas/AlgorithmRevisionOriginEngine'
        config:
          description: The configuration of this algorithm revision.
          type: object
          additionalProperties: true
        tags:
          description: The tags of this algorithm revision.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    AlgorithmRevisionOriginEngine:
      description: A record of engine that an algorithm revision originates from.
      type: object
      properties:
        engine_id:
          description: The id of the engine that this algorithm revision is originated from.
          type: string
          example: 123
        engine_name:
          description: The name of the engine that this algorithm revision is originated from.
          type: string
          example: dev engine
    MaskingRuleset:
      description: A masking ruleset.
      type: object
      properties:
        type:
          description: The Ruleset type.
          type: string
          enum:
            - FILE
            - DATABASE
            - MAINFRAME_DATASET
          nullable: true
        name:
          description: The name of this Ruleset.
          type: string
        refresh_drops_tables:
          description: Whether refresh drops tables. Only applicable to database ruleset type.
          type: boolean
          nullable: true
        algorithms:
          description: The list of algorithms for this Ruleset.
          type: array
          items:
            type: string
            minLength: 1
      example:
        type: DATABASE
        name: The best Ruleset
        refresh_drops_tables: true
    MaskingEnvironment:
      properties:
        id:
          description: The MaskingEnvironment entity ID.
          type: string
          example: masking-environment-1
        engine_id:
          description: The ID of the Engine where this MaskingEnvironment resides.
          type: string
          example: engine-123
        engine_name:
          description: The name of the Engine where this MaskingEnvironment resides.
          type: string
          example: engine-xyz
        name:
          description: The name of this MaskingEnvironment.
          type: string
          example: MyAppEnvironment
        purpose:
          description: The purpose of this MaskingEnvironment. MaskingEnvironments with a 'MASK' purpose will
            have access to Masking and Profiling jobs, whereas Environments with a 'TOKENIZE' purpose will have
            access to Tokenization and Re-Identification jobs. Note that any custom purposes created through the UI
            will be represented as 'MASK' purposes, due to the jobs that they have access to.
          enum: [MASK, TOKENIZE]
          type: string
        is_workflow_enabled:
          type: boolean
    MaskingFileUpload:
      x-internal: true
      description: An uploaded file.
      type: object
      properties:
        filename:
          type: string
          description: Name of this file.
        file_reference_id:
          type: string
          description: An reference to this file.
        file_size:
          type: integer
          format: int64
          description: Size of this file in bytes.
    MaskingJob:
      description: A masking job.
      type: object
      properties:
        id:
          description: The Masking Job entity ID.
          type: string
          readOnly: true
          example: masking-job-1
        name:
          description: The name of this Masking Job.
          type: string
          example: My favorite MaskingJob
        ruleset:
          description: The ruleset of this Masking job (Standard Job only). For hyperscale jobs, see dataset_id.
          $ref: '#/components/schemas/MaskingRuleset'
        connector_type:
          type: string
          description: The type of data being masked by this Job. If the Masking Job is masking a database
            this is the type of the database (Standard Job only).
          example: MARIADB
        is_on_the_fly_masking:
          description: Whether this is an on-the-fly masking job (Standard Job only).
          type: boolean
          example: true
        creation_date:
          description: The date this MaskingJob was created (Standard Job only).
          type: string
          format: date-time
          example: "2022-11-30T08:51:34.148000+00:00"
        last_completed_execution_date:
          description: The date this MaskingJob was last executed to completion.
          type: string
          format: date-time
          example: "2022-11-30T09:51:34.148000+00:00"
        last_execution_status:
          description: The status of this MaskingJob's last execution.
          type: string
          enum: [ PENDING, CANCELLED, FAILED, QUEUED, RUNNING, SUCCEEDED]
          example: SUCCEEDED
        last_execution_id:
          description: The ID of this MaskingJob's last execution.
          type: string
          example: 00e38996-7da2-4827-8f3e-0503234de537
        connector_username:
          type: string
          description: The username of the Connector used by the MaskingJob (Standard Job only). For hyperscale jobs, see the connector of the dataset.
          nullable: true
          example: 'user123'
        connector_password:
          x-dct-toolkit-credential-field: true
          type: string
          description: The password of the Connector used by the MaskingJob (Standard Job only). For hyperscale jobs, see the connector of the dataset.
          nullable: true
          example: '*****'
        on_the_fly_source_connector_username:
          type: string
          description: The username of the source Connector used by the on-the-fly MaskingJob (Standard Job only).
          nullable: true
          example: 'user123'
        on_the_fly_source_connector_password:
          x-dct-toolkit-credential-field: true
          type: string
          description: The password of the source Connector used by the on-the-fly MaskingJob (Standard Job only).
          nullable: true
          example: '*****'
        job_type:
          type: string
          description: The type of this Job.
          enum:
            - STANDARD
            - HYPERSCALE
          example: STANDARD
        hyperscale_instance_id:
          description: The ID of the Hyperscale instance of this Job (Hyperscale Job only).
          type: string
          example: abc
        description:
          description: Description of the Job (Hyperscale Job only).
          type: string
          example: Job for app finance
        dataset_id:
          description: Dataset of the Hyperscale Job (Hyperscale Job only).
          type: string
          example: dataset-123
        retain_execution_data:
          description: Defines whether execution data will be stored after execution is complete (Hyperscale Job only).
          type: string
          enum: [ "NO", "ON_ERROR", "ALWAYS" ]
          example: NO
        max_memory:
          description: Maximum memory to be allocated for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 1024
        min_memory:
          description: Minimum memory to be allocated for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 1024
        feedback_size:
          description: Feedback Size for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 32
        stream_row_limit:
          description: Stream Row Limit for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 4
        num_input_streams:
          description: Number of input streams to be configured for Masking Job (Hyperscale Job only).
          type: integer
          format: int32
          example: 4
        max_concurrent_source_connections:
          description: Maximum number of parallel connection that the Hyperscale instance can have with the source datasource (Hyperscale Job only).
          type: integer
          format: int32
          example: 32
        max_concurrent_target_connections:
          description: Maximum number of parallel connection that the Hyperscale instance can have with the target datasource (Hyperscale Job only).
          type: integer
          format: int32
          example: 32
        parallelism_degree:
          description: The degree of parallelism (DOP) per Oracle job to recreate the index in the post-load process (Hyperscale Job only).
          type: integer
          format: int32
          example: 4
        source_masking_job_id:
          description: The ID of the MaskingJob that was used as the source to create this job (Hyperscale Job only).
          type: string
          example: masking-job-0
        engine_ids:
          description: List of engines that this job can run on (Hyperscale Job only).
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    MaskingExecutionMetrics:
      description: Metrics for a masking job.
      type: object
      properties:
        id:
          description: The MaskingJob entity ID.
          type: string
          example: masking-job-1
        masking_job_name:
          description: The name of the MaskingJob.
          type: string
          example: My favorite MaskingJob
        masking_job_type:
          type: string
          description: The type of the Masking job.
          enum:
            - STANDARD
            - HYPERSCALE
          example: STANDARD
        connector_type:
          type: string
          description: The type of data being masked by this Job. If the Masking Job is masking a database
            this is the type of the database, otherwise "FILE" or "MAINFRAME_DATASET".
          example: MARIADB
        ruleset_name:
          type: string
          description: Name of the ruleset for the Masking job.
          example: my-ruleset
        rows_masked:
          description: The number of rows masked. This is not applicable for JSON file type.
          type: integer
          format: int64
          example: 1000
        rows_total:
          description: The total number of rows. This is not applicable for JSON file type.
          type: integer
          format: int64
          example: 5000
        bytes_masked:
          description: The number of bytes masked. This is only applicable for JSON file type.
          type: integer
          format: int64
          example: 500
        bytes_total:
          description: The total number of bytes. This is only applicable for JSON file type.
          type: integer
          format: int64
          example: 5000000
        duration:
          description: The time taken by the execution in ms. Only available for successful executions.
          type: integer
          format: int64
          example: 5000000
        tables_files_count:
          description: The number of tables or files in the ruleset associated to the Masking job.
          type: integer
          format: int64
          example: 5000000
        masked_tables_files_count:
          description: The number of tables or files in the ruleset associated to the Masking job for which at
            least one column or field is masked.
          type: integer
          format: int64
          example: 5000000
        columns_fields_count:
          description: The number of columns or fields across all tables or files in the ruleset associated to the Masking job.
          type: integer
          format: int64
          example: 5000000
        masked_columns_fields_count:
          description: The number of columns or fields across all tables or files in the ruleset associated to the Masking job which are masked.
          type: integer
          format: int64
          example: 5000000
    MaskingJobSourceEngine:
      description: A masking job's source engine.
      type: object
      properties:
        masking_job_id:
          description: The MaskingJob entity ID.
          type: string
          example: masking-job-1
        source_engine_id:
          description: The ID of the Engine serving as the source for the MaskingJob.
          type: string
          example: engine-123
    MaskingJobConnectorsResponse:
      description: Connector(s) for a masking job.
      type: object
      properties:
        connector:
          $ref: '#/components/schemas/Connector'
        on_the_fly_connector:
          $ref: '#/components/schemas/Connector'
    MaskingPlugin:
      x-internal: true
      description: A masking plugin.
      type: object
      properties:
        id:
          description: The masking plugin entity ID.
          type: string
          example: dc91e41c-aade-4404-9084-179cb90d07c6
        name:
          description: The name of this plugin.
          type: string
          example: dlpx-core
        plugin_type:
          description: The plugin type.
          type: string
          enum:
            - EXTENDED_ALGORITHM
        description:
          description: A description of this plugin.
          type: string
          nullable: true
          example: Delphix Core Masking Algorithm Plugin
        install_date:
          description: The date and time when this plugin is installed.
          type: string
          format: date-time
        built_in:
          description: Whether this plugin is a built-in plugin.
          type: boolean
        sdk_version:
          description: The masking SDK version that this plugin is built from.
          type: string
          example: 1.20.0
        version:
          description: The version of this plugin.
          type: string
          example: 1.20.0
        author:
          description: The author of this plugin.
          type: string
          example: Delphix
        frameworks:
          description: The list of frameworks for this plugin.
          type: array
          items:
            $ref: '#/components/schemas/Framework'
          nullable: true
        tags:
          description: The tags of this plugin.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    Framework:
      x-internal: true
      description: A masking algorithm framework.
      type: object
      properties:
        id:
          description: The masking framework entity ID.
          type: string
          example: dc91e41c-aade-4404-9084-179cb90d07c6
        name:
          description: The name of this framework.
          type: string
          example: Secure Lookup
        description:
          description: A description of this framework.
          type: string
          nullable: true
          example: Secure Lookup Framework
        masking_type:
          description: The masking type of this framework.
          type: string
          enum:
            - STRING
            - DATE
            - LOCAL_DATE_TIME
            - BIG_DECIMAL
            - BYTE_BUFFER
            - GENERIC_DATA_ROW
            - ADVANCED_OBJECT
    Connector:
      description: Connectors are the way users define the data sources to which the Masking Engine should connect.
      type: object
      properties:
        id:
          description: The Connector entity ID.
          type: string
          example: "1-database-123"
        name:
          description: The Connector name.
          type: string
          example: "connector-name"
        engine_id:
          description: A reference to the Engine that this Connector belongs to.
          type: string
          example: "123"
        type:
          description: The type of Connector. One of Database, File, or Mainframe.
          type: string
          enum: [ DATABASE, FILE, MAINFRAME_DATASET ]
          example: DATABASE
        hostname:
          description: The network hostname or IP address of the database server.
          type: string
          example: database_server.mycompany.co
        port:
          description: The TCP port of the server.
          type: integer
          format: int32
          minimum: 1
          maximum: 65535
          example: 9100
        username:
          description: The username this Connector will use to connect to the database.
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      example:
        id: "1-database-123"
        name: "connector-name"
        engine_id: 123
        type: DATABASE
        hostname: database_server.mycompany.co
        port: 4322
        username: "user-123"
    ConnectorUpdateParameters:
      description: Parameters used to update a Masking Connector.
      type: object
      properties:
        name:
          description: The Connector name.
          type: string
        hostname:
          description: The network hostname or IP address of the database server.
          type: string
        port:
          description: The TCP port of the server.
          type: integer
          format: int32
          minimum: 1
          maximum: 65535
        username:
          description: The username this Connector will use to connect to the database.
          type: string
        password:
          x-dct-toolkit-credential-field: true
          description: The password this Connector will use to connect to the database.
          type: string
      example:
        name: "connector-name"
        hostname: database_server.mycompany.co
        port: 4322
        username: "user-123"
        password: "password123"
    Execution:
      description: The execution of a masking or profile job.
      type: object
      properties:
        id:
          description: The Execution entity ID.
          type: string
          example: "414ed52c-fa89-455d-9fb9-9c2fa5115f80"
        engine_id:
          description: The ID of the engine where this execution ran.
          type: string
          example: "1"
        hyperscale_instance_id:
          type: string
        engine_name:
          description: The name of the engine where this execution ran.
          type: string
          example: "prod01"
        masking_job_id:
          description: The ID of the masking job that is being executed.
          type: string
          example: "2"
        masking_job_name:
          description: The name of the masking job that is being executed.
          type: string
          example: "finance-masking-job"
        source_connector_id:
          description: The ID of the source connector. This field is only used for multi-tenant jobs that are also on-the-fly.
          type: string
          example: "1-DATABASE-2"
        target_connector_id:
          description: The ID of the target connector. This field is only used for multi-tenant jobs.
          type: string
          example: "1-DATABASE-3"
        status:
          description: The status of the execution regarding its completion.
          type: string
          enum: [ PENDING, QUEUED, RUNNING, CANCELLED, FAILED, SUCCEEDED ]
          example: "RUNNING"
        rows_masked:
          description: The number of rows masked or profiled so far by this execution. This is not applicable for JSON file type.
          type: integer
          format: int64
          example: 1000
        rows_total:
          description: The total number of rows that this execution should mask. This value is set to -1 while the total row count is being calculated. This is not applicable for JSON file type.
          type: integer
          format: int64
          example: 5000
        bytes_processed:
          description: The number of bytes masked so far by this execution. This is only applicable for JSON file type.
          type: integer
          format: int64
          example: 500
        bytes_total:
          description: The total number of bytes that this execution should mask. This value is set to -1 while the total byte count is being calculated. This is only applicable for JSON file type.
          type: integer
          format: int64
          example: 5000000
        start_time:
          description: The date and time that this execution was started.
          type: string
          format: date-time
          example: "2021-05-01T09:51:34.148000+00:00"
        submit_time:
          description: The date and time that this execution was submitted.
          type: string
          format: date-time
          example: "2021-05-01T08:51:34.148000+00:00"
        end_time:
          description: The date and time that this execution completed.
          type: string
          format: date-time
          example: "2021-05-01T11:51:34.148000+00:00"
        task_events:
          description: The progression of steps or events performed by this execution. Only available for executions on masking engines that are version 6.0.14.0 and higher.
          type: array
          items:
            $ref: '#/components/schemas/TaskEvent'
          example: [ { "event": "Initializing", "status": "SUCCEEDED" }, { "event": "Job Completed", "status": "FAILED" } ]
        hyperscale_task_events:
          type: array
          items:
            $ref: '#/components/schemas/HyperscaleTaskEvent'
        progress:
          description: Progress of the task (value between 0 and 1, Hyperscale executions only)
          type: number
          example: 0.34
    HyperscaleTaskEvent:
      properties:
        name:
          type: string
          description: Name of the task (Unload, Masking, Load, Post-Load)
          example: Unload
        progress:
          description: progress of the task (between 0 and 1)
          type: number
          example: 0.34
        status:
          type: string
          enum: [ CANCELLED, CANCEL_INITIATED, FAILED, RUNNING, SUCCEEDED ]
          example: FAILED
        processed_objects:
          description: The number of objects (tables) already processed by this task.
          type: integer
          format: int64
        processed_rows:
          description: The number of rows already processed by this task.
          type: integer
          format: int64
        processed_constraints:
          description: The number of constraints processed by this task (Post-load task only)
          type: integer
          format: int64
        total_constraints:
          description: The total number of constraints to be processed by this task (Post-load task only)
          type: integer
          format: int64
        processed_indexes:
          description: The number of indexes processed by this task (Post-load task only)
          type: integer
          format: int64
        total_indexes:
          description: The total number of indexes to be processed by this task (Post-load task only)
          type: integer
          format: int64
        processed_triggers:
          description: The number of triggered processed by this task (Post-load task only)
          type: integer
          format: int64
        total_triggers:
          description: The total number of triggers to be processed by this task (Post-load task only)
          type: integer
          format: int64
        start_time:
          description: The date and time that this task was started.
          type: string
          format: date-time
          example: "2022-01-02T05:11:24.148000+00:00"
        end_time:
          description: The date and time that this task completed.
          type: string
          format: date-time
          example: "2022-01-02T05:13:24.148000+00:00"
        errors:
          type: array
          items:
            $ref: '#/components/schemas/HyperscaleTaskError'
    HyperscaleTaskError:
      properties:
        table_name:
          type: string
          description: the name of the table for which the error occurred, including the schema.
          example: public_schema.table_x
        error:
          type: string
          description: A textual description of the error.
    TaskEvent:
      description: A step or event performed by a masking execution.
      type: object
      properties:
        event:
          description: The steps or events a task will perform.
          type: string
          example: "Job Completed"
        status:
          description: The state of result of the task event.
          type: string
          enum: [ CANCELLED, FAILED, QUEUED, RUNNING, SUCCEEDED, SKIPPED, NON_CONFORMANT ]
          example: "SUCCEEDED"
    ExecutionEvent:
      description: Events, such as warnings or errors, associated with job executions.
      type: object
      properties:
        id:
          description: The ExecutionEvent entity ID.
          type: string
          example: "1-EVENT-1"
        execution_id:
          description: The ID of the execution.
          type: string
          example: "414ed52c-fa89-455d-9fb9-9c2fa5115f80"
        event_type:
          description: The type of execution event.
          type: string
          enum: [ JOB_ABORTED, UNMASKED_DATA, MASKING_FALLBACK ]
          example: "JOB_ABORTED"
        severity:
          description: The severity of the execution event.
          type: string
          enum: [ INFO, WARNING, CRITICAL ]
          example: "INFO"
        cause:
          description: The cause of the execution event.
          type: string
          enum: [ UNHANDLED_EXCEPTION, IGNORED_EXCEPTION, PATTERN_MATCH_FAILURE, PREMASK_TYPE_CONVERSION_FAILURE, POSTMASK_TYPE_CONVERSION_FAILURE, EXTENDED_ALGORITHM_FAILURE, DRIVER_SUPPORT_TASK_FAILURE, DATA_NOT_FOUND_FAILURE ]
          example: "UNHANDLED_EXCEPTION"
        count:
          description: The number of times the execution event occurred.
          type: integer
          format: int64
          example: 1
        timestamp:
          description: The date and time that this execution event first occurred.
          type: string
          format: date-time
          example: "2023-03-20T08:51:34.148000+00:00"
        masked_object_name:
          description: The name of the column, field, or other object being masked when this event occurred, if applicable.
          type: string
          example: "ssn"
        algorithm_name:
          description: The name of the masking algorithm running when this event occurred, if applicable.
          type: string
          example: "SsnTK"
        exception_type:
          description: The Java class of the exception that triggered this event, if applicable.
          type: string
          example: "SQLException"
        exception_detail:
          description: The details associated with the Java exception that triggered this event, if applicable.
          type: string
          example: "Listener refused the connection with the following error: ORA-12505, TNS:listener does not currently know of SID given in connect descriptor"
    ExecutionLog:
      description: A log containing warnings or errors associated with a job execution.
      type: object
      properties:
        id:
          description: The ExecutionLog entity ID.
          type: string
          example: "1-LOG-1"
        execution_id:
          description: The ID of the execution.
          type: string
          example: "414ed52c-fa89-455d-9fb9-9c2fa5115f80"
        masking_job_id:
          description: The ID of the masking job that is being executed.
          type: string
          example: "2"
        status:
          description: The status of the execution regarding its completion.
          type: string
          enum: [ CANCELLED, FAILED, QUEUED, RUNNING, SUCCEEDED ]
        log:
          description: The log file contents.
          type: string
          example: "ORA-12505, TNS:listener does not currently know of SID given in connect descriptor"
    ExecutionCancelParameters:
      description: Parameters to cancel an execution.
      type: object
      properties:
        expected_status:
          description: The expected status of the execution to cancel to prevent cancelling a queued job that has transitioned to a running state since the request was issued (Standard Job only).
          type: string
          enum: [ QUEUED, RUNNING ]
          example: "QUEUED"
    UpdateMaskingJobParameters:
      type: object
      description: Parameters to update a MaskingJob.
      properties:
        name:
          type: string
          description: The name of the MaskingJob.
          minLength: 1
          maxLength: 1024
          example: 'My favorite MaskingJob'
        connector_username:
          type: string
          description: The username of the Connector used by the MaskingJob. (Standard Job only).
          minLength: 1
          maxLength: 256
          example: 'user123'
        connector_password:
          x-dct-toolkit-credential-field: true
          type: string
          description: The password of the Connector used by the MaskingJob. (Standard Job only).
          minLength: 1
          maxLength: 4096
          example: 'password123'
        on_the_fly_source_connector_username:
          type: string
          description: The username of the source Connector used by the on-the-fly MaskingJob. (Standard Job only).
          minLength: 1
          maxLength: 256
          example: 'user123'
        on_the_fly_source_connector_password:
          x-dct-toolkit-credential-field: true
          type: string
          description: The password of the source Connector used by the on-the-fly MaskingJob. (Standard Job only).
          minLength: 1
          maxLength: 4096
          example: 'password123'
        description:
          description: Description of the Job (Hyperscale Job only).
          type: string
          example: Job for app finance
        dataset_id:
          description: Dataset of the Hyperscale Job (Hyperscale Job only).
          type: string
          example: dataset-123
        retain_execution_data:
          description: Defines whether execution data will be stored after execution is complete (Hyperscale Job only).
          type: string
          enum: [ "NO", "ON_ERROR", "ALWAYS" ]
          example: NO
        max_memory:
          description: Maximum memory to be allocated for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 1024
        min_memory:
          description: Minimum memory to be allocated for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 1024
        feedback_size:
          description: Feedback Size for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 32
        stream_row_limit:
          description: Stream Row Limit for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 4
        num_input_streams:
          description: Number of input streams to be configured for Masking Job (Hyperscale Job only).
          type: integer
          format: int32
          example: 4
        max_concurrent_source_connections:
          description: Maximum number of parallel connection that the Hyperscale instance can have with the source datasource (Hyperscale Job only).
          type: integer
          format: int32
          example: 32
        max_concurrent_target_connections:
          description: Maximum number of parallel connection that the Hyperscale instance can have with the target datasource (Hyperscale Job only).
          type: integer
          format: int32
          example: 32
        parallelism_degree:
          description: The degree of parallelism (DOP) per Oracle job to recreate the index in the post-load process (Hyperscale Job only).
          type: integer
          format: int32
          example: 4
    ExecuteMaskingJobParameters:
      type: object
      description: Parameters to execute a MaskingJob.
      properties:
        engine_id:
          type: string
          description: The ID of the Engine to execute this MaskingJob on (Standard job only).
          minLength: 1
          example: 'engine-123'
    Errors:
      description: Sadly, sometimes requests to the API are not successful. Failures can occur for a wide range of reasons. The Errors object contains information about full or partial failures which might have occurred during the request.
      type: array
      items:
        $ref: '#/components/schemas/Error'
    Error:
      type: object
      properties:
        message:
          type: string
          readOnly: true
          description: >-
            Message providing more detail about the error that occurred, if
            available.
        object_name:
          type: string
          readOnly: true
          description: >-
            Name of the object affected by the error.
    Account:
      properties:
        id:
          description: Numeric ID of the Account.
          type: integer
          format: int64
          readOnly: true
        api_client_id:
          description: The unique ID which is used to identify the identity of an API request. The web server (nginx)
            configuration must be configured so as to include the external ID as the value of the X_CLIENT_ID HTTP
            request header when requests are proxied. For OAuth2/JWT based authentication, this typically corresponds
            to a value extracted from the JWT, uniquely identifying the Account.
          type: string
          minLength: 1
          maxLength: 1024
        first_name:
          description: An optional first name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        last_name:
          description: An optional last name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        email:
          description: An optional email for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        username:
          description: The username for username/password authentication. This can also be used to provide an
            optional logical name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        ldap_principal:
          description: This value will be used for linking this account to an LDAP user when authenticated with
            the same LDAP principal. When accounts authenticate with LDAP, an LDAP principal value is calculated
            based on the username, msad_domain_name, search_base and username_pattern.
          type: string
          minLength: 1
          maxLength: 1024
        last_access_time:
          description: last time this account made a (successful or failed) API call. Note that updates to this
            property are asynchronous and make take some time to be reflected.
          type: string
          format: date-time
        creation_time:
          description: Creation time of this Account. This value is null for accounts created prior to
            version 9.0.0 of the product.
          type: string
          format: date-time
        effective_scopes:
          description: Access group scopes associated with this account.
          type: array
          items:
            $ref: '#/components/schemas/EffectiveScope'
        tags:
          description: The tags to be created for this Account.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          example:
            - key: key-1
              value: value-1
            - key: key-2
              value: value-2
        enabled:
          type: boolean
          description: Whether this account can be used to make API calls.
    EffectiveScope:
      properties:
        id:
          description: Id of the access group scope.
          type: string
        name:
          description: Name of the access group scope.
          type: string
    AccountCreateParameter:
      properties:
        is_admin:
          description: Whether the created account must be granted to admin role.
          type: boolean
          default: false
        generate_api_key:
          description: Whether an API key must be generated for this Account. This must be set if the Account
            will be used for API key based authentication, and unset otherwise.
          type: boolean
          default: false
        api_client_id:
          description: The unique ID which is used to identify the identity of an API request. The web server (nginx)
            configuration must be configured so as to include the external ID as the value of the X_CLIENT_ID HTTP
            request header when requests are proxied. If this value isn't set, the application will automatically
            generate one. For OAuth2/JWT based authentication, this typically corresponds to a value extracted from
            the JWT, uniquely identifying the Account.
          type: string
          minLength: 1
          maxLength: 1024
        first_name:
          description: An optional first name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        last_name:
          description: An optional last name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        email:
          description: An optional email for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        username:
          description: The username for username/password authentication. This can also be used to provide an
            optional logical name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        password:
          x-dct-toolkit-credential-field: true
          description: The password for username/password authentication.
          type: string
          minLength: 1
          maxLength: 1024
        ldap_principal:
          description: This value will be used for linking this account to an LDAP user when authenticated with
            the same LDAP principal. When accounts authenticate with LDAP, an LDAP principal value is calculated
            based on the username, msad_domain_name, search_base and username_pattern.
          type: string
          minLength: 1
          maxLength: 1024
        tags:
          description: The tags to be created for this Account.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          example:
            - key: key-1
              value: value-1
            - key: key-2
              value: value-2
    AccountCreateResponse:
      properties:
        token:
          description: |
            The opaque token to use to authenticate for other API calls. The token must be included in all HTTP API calls
            in a request header named "Authorization", and prefixed with "apk " to denote that it is a proprietary API key format.
            For instance, if the token is "abc123", request must contain the following HTTP request header:
            "Authorization: apk abc123".
          type: string
        id:
          type: integer
          format: int64
          description: Numeric ID of the created Account.
        first_name:
          description: First name of the created Account.
          type: string
          minLength: 1
          maxLength: 1024
        last_name:
          description: Last name of the created Account.
          type: string
          minLength: 1
          maxLength: 1024
        email:
          description: Email of the created Account.
          type: string
          minLength: 1
          maxLength: 1024
        username:
          description: Username of the created Account.
          type: string
          minLength: 1
          maxLength: 1024
        ldap_principal:
          description: The LDAP principal of the created Account.
          type: string
          minLength: 1
          maxLength: 1024
        tags:
          description: The tags to be created for this Account.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          example:
            - key: key-1
              value: value-1
            - key: key-2
              value: value-2
    ChangePasswordParameter:
      required:
        - old_password
      properties:
        old_password:
          x-dct-toolkit-credential-field: true
          description: Old password that needs to be changed for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        new_password:
          x-dct-toolkit-credential-field: true
          description: New password that needs to be set for the Account. Set this to null for unsetting the current password. Not including this property also results in unsetting of the current password.
          type: string
          minLength: 1
          maxLength: 1024
    ResetPasswordParameter:
      properties:
        new_password:
          x-dct-toolkit-credential-field: true
          description: New password that needs to be set for the Account. Set this to null for unsetting the current password. Not including this property also results in unsetting of the current password.
          type: string
          minLength: 1
          maxLength: 1024
    AccountUpdateParameter:
      properties:
        id:
          description: Numeric ID of the Account.
          type: integer
          format: int64
          readOnly: true
        api_client_id:
          description: The unique ID which is used to identify the identity of an API request. The web server (nginx)
            configuration must be configured so as to include the external ID as the value of the X_CLIENT_ID HTTP
            request header when requests are proxied. For OAuth2/JWT based authentication, this typically corresponds
            to a value extracted from the JWT, uniquely identifying the Account.
          type: string
          minLength: 1
          maxLength: 1024
        first_name:
          description: An optional first name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        last_name:
          description: An optional last name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        email:
          description: An optional email for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        username:
          description: The username for username/password authentication. This can also be used to provide an
            optional logical name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        ldap_principal:
          description: This value will be used for linking this account to an LDAP user when authenticated with
            the same LDAP principal. When accounts authenticate with LDAP, an LDAP principal value is calculated
            based on the username, msad_domain_name, search_base and username_pattern.
          type: string
          minLength: 1
          maxLength: 1024
    AccountLoginParameter:
      required:
        - username
        - password
      properties:
        username:
          description: Username of the account that needs to login
          type: string
          minLength: 1
          maxLength: 1024
        password:
          x-dct-toolkit-credential-field: true
          description: Password of the account that needs to login.
          type: string
          minLength: 1
          maxLength: 1024
    PasswordPoliciesParams:
      title: PasswordPoliciesParameters
      type: object
      description: Parameters to read or update password policies
      properties:
        enabled:
          description: True if password policies are enforced/enabled.
          type: boolean
          example: false
          default: true
        min_length:
          description: Minimum length for password.
          type: integer
          minimum: 0
          example: 8
          default: 15
        reuse_disallow_limit:
          description: The password can not be the same as any of the previous n passwords.
          type: integer
          minimum: 0
          maximum: 20
          example: 3
          default: 2
        digit:
          description: Mandate at least one digit in password.
          type: boolean
          example: false
          default: true
        uppercase_letter:
          description: Mandate at least one uppercase letter in password.
          type: boolean
          example: false
          default: true
        lowercase_letter:
          description: Mandate at least one lower letter in password.
          type: boolean
          example: false
          default: true
        special_character:
          description: Mandate at least one special character in password.
          type: boolean
          example: false
          default: true
        disallow_username_as_password:
          description: Disallows password containing case-insensitive user name or reversed user name.
          type: boolean
          example: false
          default: true
        maximum_password_attempts:
          description: The number of allowed attempts for incorrect password, after which the account gets locked.
          type: integer
          minimum: 0
          maximum: 100
          default: 5
          example: 3

    LoginToken:
      required:
        - access_token
        - token_type
        - expires_in
      properties:
        access_token:
          description: |
            Opaque token that validates the successful account login and is used to authenticate subsequent api calls.
            This token needs to be sent as part of 'Authorization' header for all api calls prefixed with value contained in 'token_type' property.
            For example, if the 'access_token' value is "abc123" and 'token_type' is "Bearer" then HTTP requests should contain following header :
            "Authorization: Bearer abc123"
          type: string
          minLength: 1
          maxLength: 2048
        token_type:
          description: Type of the token returned in 'access_token' property.
          type: string
          minLength: 1
          maxLength: 1024
        expires_in:
          description: Seconds duration after which the token will expire.
          type: integer
          format: int64
    TokenInfoRequest:
      required:
        - token
      properties:
        token:
          description: API Key or JWT token for fetching information
          x-dct-toolkit-credential-field: true
          type: string
          minLength: 1
          maxLength: 2048
          example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIyIiwiaXNzIjoiYXBpZ3ctc2VydmljZXMtYXBwIiwiaWF0IjoxNjYwMDI1MTczLCJlbWFpbCI6ImppdGVuZHJhLm1hdGh1ckBkZWxwaGl4LmNvbSIsInVzZXJuYW1lIjoidXNlci00MjciLCJleHAiOjE2NjAxMTE1NzN9._9LgnIlkKUr2KVqjeFYqru3GxJr2-ztSmP0XO3vBkRo
    TokenInfoResponse:
      properties:
        active:
          description: Flag to identify if the token is active.
          type: boolean
        token_type:
          description: Type of the token.
          type: string
          minLength: 1
          maxLength: 1024
        account_id:
          description: Numeric ID of the account.
          type: integer
          format: int64
        first_name:
          description: First name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        last_name:
          description: Last name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        email:
          description: Email for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        username:
          description: The username or logical name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        ldap_principal:
          description: The LDAP Principal for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        exp:
          description: Seconds duration after which the token will expire.
          type: integer
          format: int64
    ApiUsageData:
      required:
        - api_count
      properties:
        api_endpoint:
          description: API called.
          type: string
          minLength: 1
          example: "/v2/management/engines"
        api_method:
          description: HTTP method for API called.
          type: string
          minLength: 1
          example: GET
        api_count:
          description: Count of API calls over the requested timeframe.
          type: integer
          format: int64
          example: 4200
        kind:
          description: Whether the API calls are of kind automation or governance
          type: string
          example: automation
          enum: [automation, governance]
        client_name:
          description: Name of the api client that called the API endpoint
          type: string
          example: client-123
        user_agent:
          description: Version of the api client that called the API endpoint
          type: string
          example: 1.0-beta
        dct_version:
          description: DCT version at the time of api call
          type: string
          example: 2.2.0
    Job:
      description: An asynchronous task.
      type: object
      properties:
        id:
          description: The Job entity ID.
          type: string
          example: job-123
        status:
          description: The status of the job.
          type: string
          enum: [ PENDING, STARTED, TIMEDOUT, RUNNING, CANCELED, FAILED, SUSPENDED, WAITING, COMPLETED, ABANDONED ]
          example: RUNNING
        is_waiting_for_telemetry:
          description: Indicates that the operations performed by this Job have completed successfully, but the
            object changes are not yet reflected. This is only set when when the JOB is in STARTED status,
            with the guarantee that the job will not transition to the FAILED status.
            Note that this flag will likely be replaced with a new status in future API versions and be
            deprecated.
          type: boolean
        type:
          description: The type of job being done.
          type: string
          deprecated: true
          example: DB_REFRESH
        localized_type:
          description: The i18n translated type of job being done.
          type: string
          example: DB Refresh
        error_details:
          description: Details about the failure for FAILED jobs.
          type: string
          example: Unable to connect to the engine.
        warning_message:
          description: Warnings for the job.
          type: string
          example: "Failed to remove local MaskingJob, engineId: 3 localMaskingJobId: 7."
        target_id:
          description: A reference to the job's target.
          type: string
          example: vdb-123
        target_name:
          description: A reference to the job's target name.
          type: string
          example: vdb
        start_time:
          description: The time the job started executing.
          type: string
          format: date-time
          example: "2022-01-02T05:11:24.148000+00:00"
        update_time:
          description: The time the job was last updated.
          type: string
          format: date-time
          example: "2022-01-02T06:11:24.148000+00:00"
        trace_id:
          description: traceId of the request which created this Job
          type: string
        engine_ids:
          description: IDs of the engines this Job is executing on.
          type: array
          items:
            type: string
          deprecated: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        engines:
          type: array
          items:
            $ref: "#/components/schemas/Engine"
        account_id:
          description: The ID of the account who initiated this job.
          type: integer
          example: 1
        account_name:
          description: The account name which initiated this job. It can be either firstname and lastname combination or
            firstname or lastname or username or email address or Account-<id>.
          type: string
          example: "User 1"
        percent_complete:
          description: Completion percentage of the Job.
          type: integer
          minimum: 0
          maximum: 100
          example: "50"
        virtualization_tasks:
          type: array
          items:
            $ref: "#/components/schemas/VirtualizationTask"

    VirtualizationTask:
      properties:
        id:
          type: string
        parent_job_id:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        title:
          type: string
        percent_complete:
          type: integer
          minimum: 0
          maximum: 100
        events:
          type: array
          items:
            $ref: "#/components/schemas/VirtualizationTaskEvent"
        status:
          type: string
          enum: [ PENDING, STARTED, TIMEDOUT, RUNNING, CANCELED, FAILED, SUSPENDED, WAITING, COMPLETED, ABANDONED ]

    VirtualizationTaskEvent:
      properties:
        message_details:
          type: string

    Engine:
      properties:
        engine_id:
          type: string
          minLength: 1
          maxLength: 4000
        engine_name:
          type: string
          minLength: 1
          maxLength: 4000
    HashicorpVault:
      title: HashicorpVault
      type: object
      description: Configuration required to connect and authenticate with an Hashicorp Vault which stores engines username and passwords.
      properties:
        id:
          type: integer
          format: int64
          nullable: false
          readOnly: true
        env_variables:
          x-dct-toolkit-credential-field: true
          description: |
            Environment variables to set when invoking the Vault CLI tool. The environment variables will be used both
            to login to the vault (if this step is required) and to retrieve engine username and passwords.
          example:
            VAULT_ADDR: "https://vault.company.co:8200"
            VAULT_TOKEN: "token-to-retrieve-secrets"
          type: object
          additionalProperties:
            type: string
            minLength: 1
            maxLength: 4096
        login_command_args:
          x-dct-toolkit-credential-field: true
          description: |
            Arguments to the "vault" CLI tool to be used to fetch a client token (or "login").
            If supporting files, such as TLS certificates, must be used to authenticate, they can be
            mounted to the /etc/config directory.
            This property must not be set when using the TOKEN authentication method as login is not required.
          example:
            - login
            - "-method=cert"
            - "-client-cert=/etc/config/cert.pem"
            - "-client-key=/etc/config/key.pem"
            - write
            - auth/approle/login
            - role_id=123
            - secret_id=456
          type: array
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    RegisteredEngine:
      title: RegisteredEngine
      type: object
      description: A registered engine's connection and authentication settings.
      properties:
        id:
          description: The Engine object entity ID.
          type: string
          readOnly: true
        uuid:
          description: The unique identifier generated by this engine.
          type: string
          nullable: true
        type:
          description: The type of this engine.
          type: string
          enum: [ VIRTUALIZATION, MASKING, BOTH, UNSET ]
          nullable: true
        version:
          description: The engine version.
          type: string
          nullable: true
        name:
          description: The name of this engine.
          type: string
        ssh_public_key:
          description: The ssh public key of this engine.
          type: string
        hostname:
          description: The hostname of this engine.
          type: string
        cpu_core_count:
          description: The total number of CPU cores on this engine.
          type: integer
          format: int32
          nullable: true
        memory_size:
          description: The total amount of memory on this engine, in bytes.
          type: integer
          format: int64
          nullable: true
        data_storage_capacity:
          description: The total amount of storage allocated for engine objects and system metadata, in bytes.
          type: integer
          format: int64
          nullable: true
        data_storage_used:
          description: The amount of storage used by engine objects and system metadata, in bytes.
          type: integer
          format: int64
          nullable: true
        insecure_ssl:
          description: |
            Allow connections to the engine over HTTPs without validating the TLS certificate. Even though
            the connection to the engine might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the engine's certificate,
            and set the truststore_filename property.
          type: boolean
        unsafe_ssl_hostname_check:
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the engine over HTTPs.
            Setting this value must only be done if the TLS certificate of the engine does not match the hostname,
            and the TLS configuration of the engine cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this engine.
            This is ignored if insecure_ssl is set.
          type: boolean
        truststore_filename:
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the engine. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
          pattern: '^[a-zA-Z0-9_\.]+$'
        truststore_password:
          x-dct-toolkit-credential-field: true
          description: |
            Password to read the truststore.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
        status:
          description: |
            the status of the engine
          type: string
          enum: [ CREATED, DELETING ]
          nullable: true
          readOnly: true
        connection_status:
          description: The status of the connection to the engine. Deprecated; use "engine_connection_status" instead.
          deprecated: true
          type: string
          enum: [ ONLINE, OFFLINE ]
          nullable: true
          readOnly: true
        engine_connection_status:
          description: The state of the connection to the engine.
          type: string
          enum: [ ONLINE, CONNECTION_ERROR, MISSING_CREDENTIALS, BAD_CREDENTIALS]
          readOnly: true
        connection_status_details:
          deprecated: true
          description: If set, details about the status of the connection to the engine. Deprecated; use "engine_connection_status_details" instead.
          type: string
          nullable: true
          readOnly: true
        engine_connection_status_details:
          description: If set, details about the state of the connection to the engine.
          type: string
          readOnly: true
        username:
          description: The virtualization domain admin username.
          type: string
          nullable: true
          minLength: 1
          maxLength: 256
        password:
          x-dct-toolkit-credential-field: true
          description: The virtualization domain admin password.
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
        masking_username:
          description: The masking admin username.
          type: string
          nullable: true
          minLength: 1
          maxLength: 256
        masking_password:
          x-dct-toolkit-credential-field: true
          description: The masking admin password.
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
        hashicorp_vault_username_command_args:
          description: "Arguments to pass to the Vault CLI tool to retrieve the virtualization username for the engine."
          example:
            - [ "kv", "get", "-field=username",  "kv-v2/delphix-secrets/delphixUser" ]
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_masking_username_command_args:
          description: "Arguments to pass to the Vault CLI tool to retrieve the masking username for the engine."
          example:
            - [ "kv", "get", "-field=username",  "kv-v2/delphix-secrets/delphixUser" ]
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_password_command_args:
          description: "Arguments to pass to the Vault CLI tool to retrieve the virtualization password for the engine."
          example:
            - [ "kv", "get", "-field=password",  "kv-v2/delphix-secrets/delphixUser" ]
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_masking_password_command_args:
          description: "Arguments to pass to the Vault CLI tool to retrieve the masking password for the engine."
          example:
            - [ "kv", "get", "-field=password",  "kv-v2/delphix-secrets/delphixUser" ]
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        masking_hashicorp_vault_id:
          description: Reference to the Hashicorp vault to use to retrieve masking engine credentials.
          type: integer
          format: int64
          nullable: true
        hashicorp_vault_id:
          description: Reference to the Hashicorp vault to use to retrieve virtualization engine credentials.
          type: integer
          format: int64
          nullable: true
        tags:
          description: The tags to be created for this engine.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        masking_memory_used:
          description: The current amount of memory used by running masking jobs in bytes.
          type: integer
          format: int64
          nullable: true
        masking_allocated_memory:
          description: The maximum amount of memory available for running masking jobs in bytes.
          type: integer
          format: int64
          nullable: true
        masking_jobs_running:
          description: The number of masking jobs currently running.
          type: integer
          nullable: true
        masking_max_concurrent_jobs:
          description: The maximum number of masking jobs that can be running at the same time.
          type: integer
          nullable: true
        masking_available_cores:
          description: The number of CPU cores available to the masking engine.
          type: integer
          nullable: true
        hyperscale_instance_ids:
          description: List of Hyperscale Instances that this engine is connected to.
          nullable: true
          type: array
          items:
            type: string
        hyperscale_truststore_filename:
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the engine as expected by associated hyperscale instances.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
          pattern: '^[a-zA-Z0-9_\.]+$'
        hyperscale_truststore_password:
          x-dct-toolkit-credential-field: true
          description: |
            Password to read the truststore as expected by associated hyperscale instances.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
      example:
        id: "engine-123"
        uuid: "54290b71-58cd-463d-bd62-7219d4c4d2d5"
        type: "VIRTUALIZATION"
        version: "6.0.7.0"
        name: "My Favorite Engine"
        hostname: "eng09.dev.delphix.com"
        cpu_core_count: 4
        memory_size: 16000000000
        data_storage_capacity: 100000000000
        data_storage_used: 85000000000
        tags: [ { "key": "key1", "value": "value1" }, { "key": "key2", "value": "value2" } ]
        connection_status: "OFFLINE"
        connection_status_details: "Unable to authenticate with engine"
        hyperscale_instance_ids: [ "hyperscale-1" ]
        hyperscale_truststore_filename: "trustfile1"
        hyperscale_truststore_password: "*****"
    HyperscaleMountPoint:
      title: HyperscaleMountPoint
      type: object
      description: A Mount Point for the Hyperscale instance to write to a staging area and engines to read from.
      required:
        - hyperscale_instance_id
        - name
        - hostname
        - mount_path
        - mount_type
      properties:
        id:
          description: The ID of the Hyperscale Mount Point.
          type: string
          readOnly: true
        hyperscale_instance_id:
          description: The ID of the Hyperscale instance of this Mount Point.
          type: string
        name:
          description: Name of the mount, unique for a hyperscale instance. This name will be used as a directory
            name by the Hyperscale instance.
          type: string
        hostname:
          description: The host name of the server.
          type: string
          nullable: false
        mount_path:
          description: The path to the directory on the filesystem to mount.
          type: string
          nullable: false
        mount_type:
          description: The type of filesystem. Enum having values- CIFS, NFS3, NFS4.
          type: string
          enum: [ CIFS, NFS3, NFS4 ]
        options:
          type: string
          description: The options for mount. The endpoint will return all default options and user specified options.
    HyperscaleMountPointUpdateParameters:
      title: HyperscaleMountPointUpdateParameters
      type: object
      description: The updatable properties of a Hyperscale Mount Point.
      properties:
        name:
          description: Name of the mount, unique for a hyperscale instance.
          type: string
        hostname:
          description: The host name of the server.
          type: string
        mount_path:
          description: The path to the directory on the filesystem to mount.
          type: string
        mount_type:
          description: The type of filesystem.
          type: string
          enum: [ CIFS, NFS3, NFS4 ]
        options:
          type: string
          description: The mount options.
    HyperscaleConnector:
      title: HyperscaleConnector
      type: object
      description: A Hyperscale connector to read/write data from/to a datasource.
      properties:
        id:
          description: The ID of the Hyperscale Connector.
          type: string
          readOnly: true
        hyperscale_instance_id:
          description: The ID of the Hyperscale instance of this Connector.
          type: string
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        name:
          type: string
        source_username:
          description: The username this Connector will use to connect to the source database.
          type: string
        source_password:
          x-dct-toolkit-credential-field: true
          description: The password this Connector will use to connect to the source database.
          type: string
        source_jdbc_url:
          description: The JDBC URL used to connect to the source database.
          type: string
        source_mongo_url:
          description: The MongoDB URL used to connect to the source database.
          type: string
          example: "mongodb://host:27017"
        source_filesystem_path:
          description: The path on the filesystem where source files must be read (Delimited files Only).
          type: string
        source_connection_properties:
          additionalProperties:
            type: string
        target_username:
          description: The username this Connector will use to connect to the target database.
          type: string
        target_password:
          x-dct-toolkit-credential-field: true
          description: The username this Connector will use to connect to the target database.
          type: string
        target_jdbc_url:
          description: The JDBC URL used to connect to the target database.
          type: string
        target_mongo_url:
          description: The MongoDB URL used to connect to the target database.
          type: string
          example: "mongodb://host:27017"
        target_filesystem_path:
          description: The path on the filesystem where target files must be written (Delimited files Only).
          type: string
        target_connection_properties:
          additionalProperties:
            type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    HyperscaleConnectorCreateParameters:
      title: HyperscaleConnectorCreateParameters
      type: object
      description: Parameters to create a Hyperscale Connector.
      properties:
        hyperscale_instance_id:
          description: The ID of the Hyperscale instance of this Connector.
          type: string
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        name:
          type: string
        source_username:
          description: The username this Connector will use to connect to the source database.
          type: string
        source_password:
          x-dct-toolkit-credential-field: true
          description: The password this Connector will use to connect to the source database.
          type: string
        source_jdbc_url:
          description: The JDBC URL used to connect to the source database.
          type: string
        source_mongo_url:
          description: The MongoDB URL used to connect to the source database.
          type: string
          example: "mongodb://host:27017"
        source_filesystem_path:
          description: The path on the filesystem where source files must be read (Delimited files Only).
          type: string
        source_connection_properties:
          additionalProperties:
            type: string
        target_username:
          description: The username this Connector will use to connect to the target database.
          type: string
        target_password:
          x-dct-toolkit-credential-field: true
          description: The username this Connector will use to connect to the target database.
          type: string
        target_jdbc_url:
          description: The JDBC URL used to connect to the target database.
          type: string
        target_mongo_url:
          description: The MongoDB URL used to connect to the target database.
          type: string
          example: "mongodb://host:27017"
        target_filesystem_path:
          description: The path on the filesystem where target files must be written (Delimited files Only).
          type: string
        target_connection_properties:
          additionalProperties:
            type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        make_current_account_owner:
          type: boolean
          default: true
          description: Whether the account creating this Hyperscale Connector must be configured as owner of it.
    HyperscaleConnectorUpdateParameters:
      title: HyperscaleConnectorUpdateParameters
      type: object
      description: The updatable properties of a Hyperscale Connector.
      properties:
        name:
          type: string
        source_username:
          description: The username this Connector will use to connect to the source database.
          type: string
        source_password:
          x-dct-toolkit-credential-field: true
          description: The password this Connector will use to connect to the source database.
          type: string
        source_jdbc_url:
          description: The JDBC URL used to connect to the source database.
          type: string
        source_mongo_url:
          description: The MongoDB URL used to connect to the source database.
          type: string
          example: "mongodb://host:27017"
        source_filesystem_path:
          description: The path on the filesystem where source files must be read (Delimited files Only).
          type: string
        source_connection_properties:
          additionalProperties:
            type: string
        target_username:
          description: The username this Connector will use to connect to the target database.
          type: string
        target_password:
          x-dct-toolkit-credential-field: true
          description: The username this Connector will use to connect to the target database.
          type: string
        target_jdbc_url:
          description: The JDBC URL used to connect to the target database.
          type: string
        target_mongo_url:
          description: The MongoDB URL used to connect to the target database.
          type: string
          example: "mongodb://host:27017"
        target_filesystem_path:
          description: The path on the filesystem where target files must be written (Delimited files Only).
          type: string
        target_connection_properties:
          additionalProperties:
            type: string
    CreateMaskingJobRequest:
      title: CreateMaskingJobRequest
      type: object
      description: Parameters to create a MaskingJob.
      properties:
        name:
          description: The name to give the Masking Job.
          type: string
          example: My favorite MaskingJob
        description:
          description: The description of the Job (Hyperscale Job only).
          type: string
          example: Job for app finance DB
        job_type:
          type: string
          description: The type of Job.
          enum: [HYPERSCALE]
          example: HYPERSCALE
        hyperscale_instance_id:
          description: The ID of the HyperscaleInstance to create this Job on (Hyperscale Job only).
          type: string
          example: hyperscale-123
        source_masking_job_id:
          description: The ID of the Masking Job to use as the source (Hyperscale Job only).
          type: string
          example: masking-job-123
        hyperscale_source_connector_username:
          description: The username to set for the Source Connector that will be imported (Hyperscale Job only).
          type: string
          example: db-user-123
        hyperscale_source_connector_password:
          x-dct-toolkit-credential-field: true
          description: The password to set for the Source Connector that will be imported (Hyperscale Job only).
          type: string
          example: dp-pass-123
        hyperscale_target_connector_username:
          description: The username to set for the Target Connector that will be imported (Hyperscale Job only).
          type: string
          example: db-user-123
        hyperscale_target_connector_password:
          x-dct-toolkit-credential-field: true
          description: The password to set for the Target Connector that will be imported (Hyperscale Job only).
          type: string
          example: dp-pass-123
        mount_point_id:
          description: The ID of the MountPoint to use for the resulting dataset (Hyperscale Job only).
          type: string
          example: mount-point-123
        unload_split:
          description: The number of unloaded files to be generated from the source database (Hyperscale Job only).
          type: integer
          format: int64
          example: 4
        stream_size:
          description: The stream size to be used by the sqlldr oracle utility which specifies the size (in bytes) of the data stream sent from the client to the server (Hyperscale Job only).
          type: integer
          format: int64
          example: 65536
        retain_execution_data:
          description: Defines whether execution data will be stored after execution is complete (Hyperscale Job only).
          type: string
          enum: [ "NO", "ON_ERROR", "ALWAYS" ]
          example: NO
        max_memory:
          description: Maximum memory, in MB, to be allocated for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 1024
        min_memory:
          description: Minimum memory, in MB, to be allocated for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 1024
        feedback_size:
          description: The granularity with which the masking engine provides updates on the progress of the masking job. For instance, a feedbackSize of 50000 results in log updates whenever 50000 rows are processed during the masking phase (Hyperscale Job only).
          type: integer
          format: int32
          example: 10000
        stream_row_limit:
          description: The stream row limit constrains the total number of rows that may enter the job for each masking stream. Setting this value to 0 allows unlimited rows into each stream, while leaving it blank will select a default limit based on job type (Hyperscale Job only).
          type: integer
          format: int32
          example: 0
        num_input_streams:
          description: Number of input streams to be configured for Masking Job (Hyperscale Job only).
          type: integer
          format: int32
          example: 4
        max_concurrent_source_connections:
          description: Maximum number of parallel connection that the Hyperscale instance can have with the source datasource (Hyperscale Job only).
          type: integer
          format: int32
          example: 32
        max_concurrent_target_connections:
          description: Maximum number of parallel connection that the Hyperscale instance can have with the target datasource (Hyperscale Job only).
          type: integer
          format: int32
          example: 32
        parallelism_degree:
          description: The degree of parallelism (DOP) per Oracle job to recreate the index in the post-load process (Hyperscale Job only).
          type: integer
          format: int32
          example: 4
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        make_current_account_owner:
          type: boolean
          default: true
          description: Whether the account creating this Masking job must be configured as owner of it (Hyperscale Job only).
    HyperscaleDataset:
      title: HyperscaleDataset
      type: object
      description: A Hyperscale Dataset.
      properties:
        id:
          description: The ID of the Hyperscale Dataset.
          type: string
        hyperscale_instance_id:
          description: The ID of the Hyperscale instance of this Dataset.
          type: string
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        mount_point_id:
          description: The Id of the Hyperscale Mount Point used for this Dataset.
          type: string
        connector_id:
          description: Id the Hyperscale Connector used to read sensitive data and write masked data.
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    HyperscaleDatasetUpdateParameters:
      title: HyperscaleDatasetUpdateParameters
      type: object
      description: The updatable properties of a Hyperscale Dataset.
      properties:
        mount_point_id:
          description: The Id of the Hyperscale Mount Point used for this Dataset.
          type: string
        connector_id:
          description: Id the Hyperscale Connector used to read sensitive data and write masked data.
          type: string
    HyperscaleDatasetTableOrFile:
      title: HyperscaleDatasetTableOrFile
      type: object
      description: A table or file which is part of a hyperscale dataset.
      properties:
        id:
          description: The ID of the Hyperscale Dataset table or file.
          type: string
        schema_name:
          type: string
          description: Name of the table schema (Oracle/MSSql only).
        table_name:
          type: string
          description: Name of the table (Oracle/MSSql only).
        collection_name:
          type: string
          description: Name of the collection (MongoDB only).
        database_name:
          type: string
          description: Name of the database (MongoDB only).
        filter_key:
          description: The unique database column field to filter the source data.
          type: string
        column_array_rows:
          description: The number of column array rows to be used by the sqlldr oracle utility which determines the number of rows loaded before the stream buffer is built.
          type: integer
          format: int64
        unload_split:
          description: The number of unloaded files to be generated from the source database.
          type: integer
          format: int64
        stream_size:
          description: Long The stream size to be used by the sqlldr oracle utility which specifies the size (in bytes) of the data stream sent from the client to the server.
          type: integer
          format: int64
        end_of_record:
          description: The end of line character. Support values are \n, \r  and \r\n (Delimited files only).
          type: string
        delimiter:
          description: The single character length delimiter used in source files (Delimited files only).
          type: string
        enclosure:
          description: The single character length quote character used in the source files (Delimited files only).
          type: string
        enclosure_escape_character:
          description: The escape character used to escape quote characters (Delimited files only).
          type: string
        escape_enclosure_escape_character:
          description: Whether to escape the enclosure escape character (Delimited files only).
          type: boolean
        has_headers:
          description: Whether source files have header column names or not (Delimited files only).
            If set to true, format files with the same column names are created and the same can be used for the masking inventory.
            If set to false, the column names of pattern f0, f1, f2, and so on are used to create the format files for delimited file masking.
          type: boolean
        unique_source_files_identifier:
          description: This is the source key that maps the load-service and masking-service data sets with the unload-service data set (Delimited files only).
            Please ensure that this value is different for each HyperscaleDatasetTableOrFile.
          type: string
        source_files:
          description: List of all source files that need to be masked (Delimited files only).
            All files should have the same delimiter character and other helper characters.
            All files should have the same number of columns and same column names if it has a header line.
          type: array
          items:
            type: string
        perform_join:
          description: Whether the split files must be joined (Delimited files only).
          type: boolean
        masking_inventory:
          type: array
          description: DataSet information for masking inventory.
          items:
            type: object
            title: HyperscaleColumnOrField
            properties:
              field_name:
                description: Name of the field.
                type: string
              domain_name:
                description: The name of the domain assigned to this field.
                type: string
              algorithm_name:
                description: The name of the algorithm assigned to this field.
                type: string
              date_format:
                description: The format of the date assigned to this field.
                type: string
              algorithm_field_name:
                description: The name of the algorithm field that is associated with this algorithm.
                type: string
              algorithm_group_no:
                description: The group number of the algorithm to identify a set of columns associated with one instance of algorithm.
                type: integer
                format: int64
    HyperscaleDatasetTableOrFileUpdateParameters:
      title: HyperscaleDatasetTableOrFile
      type: object
      description: The updatable properties of a table or file which is part of a hyperscale dataset.
      properties:
        filter_key:
          description: The unique database column field to filter the source data.
            Set this property to an empty string to clear the value.
          type: string
        column_array_rows:
          description: The number of column array rows to be used by the sqlldr oracle utility which determines the number of rows loaded before the stream buffer is built.
          type: integer
          format: int64
        unload_split:
          description: The number of unloaded files to be generated from the source database.
          type: integer
          format: int64
        stream_size:
          description: Long The stream size to be used by the sqlldr oracle utility which specifies the size (in bytes) of the data stream sent from the client to the server.
          type: integer
          format: int64
        end_of_record:
          description: The end of line character. Support values are \n, \r  and \r\n (Delimited files only).
          type: string
        delimiter:
          description: The single character length delimiter used in source files (Delimited files only).
          type: string
        enclosure:
          description: The single character length quote character used in the source files (Delimited files only).
          type: string
        enclosure_escape_character:
          description: The escape character used to escape quote characters (Delimited files only).
          type: string
        escape_enclosure_escape_character:
          description: Whether to escape the enclosure escape character (Delimited files only).
          type: boolean
        has_headers:
          description: Whether source files have header column names or not (Delimited files only).
            If set to true, format files with the same column names are created and the same can be used for the masking inventory.
            If set to false, the column names of pattern f0, f1, f2, and so on are used to create the format files for delimited file masking.
          type: boolean
        unique_source_files_identifier:
          description: This is the source key that maps the load-service and masking-service data sets with the unload-service data set (Delimited files only).
            Please ensure that this value is different for each HyperscaleDatasetTableOrFile.
          type: string
        source_files:
          description: List of all source files that need to be masked (Delimited files only).
            All files should have the same delimiter character and other helper characters.
            All files should have the same number of columns and same column names if it has a header line.
          type: array
          items:
            type: string
        perform_join:
          description: Whether the split files must be joined (Delimited files only).
          type: boolean
    HyperscaleInstance:
      title: HyperscaleInstance
      type: object
      description: A registered Hyperscale instance's connection and authentication settings.
      required:
        - name
        - hostname
        - api_key
      properties:
        id:
          description: The Hyperscale instance entity ID.
          type: string
          readOnly: true
        name:
          description: The name of this hyperscale instance.
          type: string
        hostname:
          description: The hostname of this hyperscale instance.
          type: string
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        creation_date:
          description: The date this hyperscale instance was registered.
          type: string
          format: date-time
        tags:
          description: The tags to be created for this hyperscale instance.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        api_key:
          description: API key to connect to the hyperscale instance.
          type: string
        insecure_ssl:
          description: |
            Allow connections to the hyperscale instance over HTTPs without validating the TLS certificate. Even though
            the connection to the hyperscale instance might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the hyperscale instance's certificate,
            and set the truststore_filename property.
          type: boolean
          default: false
        unsafe_ssl_hostname_check:
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the hyperscale instance over HTTPs.
            Setting this value must only be done if the TLS certificate of the hyperscale instance does not match the hostname,
            and the TLS configuration of the hyperscale instance cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this hyperscale instance.
            This is ignored if insecure_ssl is set.
          type: boolean
          default: false
        truststore_filename:
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the hyperscale instance. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
          pattern: '^[a-zA-Z0-9_\.]+$'
        truststore_password:
          x-dct-toolkit-credential-field: true
          description: |
            Password to read the truststore.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
        status:
          description: The status of this hyperscale instance.
          type: string
          enum: [ CREATED, DELETING ]
          nullable: true
          readOnly: true
        connection_status:
          description: The status of the connection to the hyperscale instance.
          type: string
          enum: [ ONLINE, CONNECTION_ERROR, BAD_CREDENTIALS ]
          nullable: true
          readOnly: true
        connection_status_details:
          description: If set, details about the status of the connection to the hyperscale instance.
          type: string
          readOnly: true
    HyperscaleDataTypeEnum:
      type: string
      description: The data type designation for the hyperscale deployment.
      enum:
        - ORACLE
        - MSSQL
        - DELIMITED_FILES
        - MONGO_DB
      example: ORACLE
    HyperscaleInstanceUpdateParams:
      title: HyperscaleInstanceUpdateParams
      type: object
      description: Parameters to update a Hyperscale instances.
      properties:
        name:
          type: string
          description: Name in DCT of the Hyperscale instance.
          minLength: 1
          maxLength: 256
        hostname:
          type: string
          description: Hostname of the Hyperscale instance.
          minLength: 1
          maxLength: 256
        api_key:
          x-dct-toolkit-credential-field: true
          description: API key to connect to the Hyperscale instance.
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        insecure_ssl:
          description: |
            Allow connections to the hyperscale instance over HTTPs without validating the TLS certificate. Even though
            the connection to the hyperscale instance might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the hyperscale instance's certificate,
            and set the truststore_filename property.
          type: boolean
        unsafe_ssl_hostname_check:
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the hyperscale instance over HTTPs.
            Setting this value must only be done if the TLS certificate of the hyperscale instance does not match the hostname,
            and the TLS configuration of the hyperscale instance cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this engine.
            This is ignored if insecure_ssl is set.
          type: boolean
        truststore_filename:
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the hyperscale instance. The truststore
            must be available at /etc/config/certs/<truststore_filename>.
            Set this property to an empty string to clear the value.
          type: string
          nullable: true
          maxLength: 1024
          pattern: '^[a-zA-Z0-9_\.]*$'
        truststore_password:
          x-dct-toolkit-credential-field: true
          description: |
            Password to read the truststore. Set this property to an empty string to clear the value.
          type: string
          nullable: true
          maxLength: 1024
    HyperscaleInstanceRegistrationParameter:
      title: HyperscaleInstanceRegistrationParameter
      type: object
      description: Parameters to register and authenticate a Hyperscale instance
      required:
        - name
        - hostname
        - api_key
        - data_type
      properties:
        name:
          type: string
          description: Name in DCT of the Hyperscale instance.
          minLength: 1
          maxLength: 256
        hostname:
          type: string
          description: Hostname of the Hyperscale instance.
          minLength: 1
          maxLength: 256
        api_key:
          x-dct-toolkit-credential-field: true
          description: API key to connect to the Hyperscale instance.
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        insecure_ssl:
          description: |
            Allow connections to the hyperscale instance over HTTPs without validating the TLS certificate. Even though
            the connection to the hyperscale instance might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the hyperscale instance's certificate,
            and set the truststore_filename property.
          type: boolean
          default: false
        unsafe_ssl_hostname_check:
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the hyperscale instance over HTTPs.
            Setting this value must only be done if the TLS certificate of the hyperscale instance does not match the hostname,
            and the TLS configuration of the hyperscale instance cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this engine.
            This is ignored if insecure_ssl is set.
          type: boolean
          default: false
        truststore_filename:
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the hyperscale instance. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
          pattern: '^[a-zA-Z0-9_\.]+$'
        truststore_password:
          x-dct-toolkit-credential-field: true
          description: |
            Password to read the truststore.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
        tags:
          description: The tags to be created for this engine.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        make_current_account_owner:
          type: boolean
          default: true
          description: Whether the account creating this Hyperscale instance must be configured as owner of it.
    SMTPConfigParams:
      title: SMTPConfigParameters
      type: object
      description: Parameters to read or update SMTP Config
      properties:
        enabled:
          description: True if outbound email is enabled.
          type: boolean
          default: false
          example: false
        server:
          description: IP address or hostname of SMTP relay server.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1000
          example: smtp.host.com
        port:
          description: Port number to use. A value of -1 indicates the default (25 or 587 for TLS).
          type: integer
          minimum: 1
          maximum: 65535
          nullable: true
          example: 25
        authentication_enabled:
          description: True if username/password authentication should be used.
          type: boolean
          default: false
          example: false
        tls_enabled:
          description: True if TLS (transport layer security) should be used.
          type: boolean
          default: false
          example: false
        username:
          description: If authentication is enabled, username to use when authenticating to the server.
          type: string
          nullable: true
          minLength: 1
          maxLength: 256
          example: username
        password:
          x-dct-toolkit-credential-field: true
          description: If authentication is enabled, password to use when authenticating to the server.
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
          example: password
        from_address:
          description: From address to use when sending mail. If unspecified, 'noreply@delphix.com' is used.
          type: string
          nullable: true
          format: email
          minLength: 1
          maxLength: 256
          example: sender@example.com
        send_timeout:
          description: Maximum timeout to wait, in seconds, when sending mail.
          type: integer
          minimum: 0
          maximum: 300
          nullable: true
    SMTPConfigValidate:
      title: SMTPValidationParams
      type: object
      description: Parameters to validate SMTP Config
      required:
        - to_address
      properties:
        to_address:
          type: string
          minLength: 1
          maxLength: 256
    SAMLConfigParams:
      title: SAMLConfigParams
      type: object
      description: Parameters to read or update SAML Config
      properties:
        enabled:
          description: When set, SAML settings are enabled. False by default.
          type: boolean
          default: false
          example: true
        auto_create_users:
          description: When set, the system will automatically create new Accounts for those who have logged in using SAML. This must be true if SAML user is not already registered in system. True by default.
          type: boolean
          default: true
          example: true
        metadata:
          description: IdP metadata for this service provider. This is a required property for successful SAML authentication.
          type: string
          minLength: 1
        entity_id:
          description: Unique identifier of this instance as a SAML/SSO service provider.
          type: string
          example: "https://dct.delphix.com"
          minLength: 1
          maxLength: 4096
        response_skew:
          description: Maximum time difference allowed between a SAML response and the DCT's current time, in seconds. If not set, it defaults to 120 seconds.
          type: integer
          example: 120
          default: 120
        group_attr:
          description: Group mapped attribute on SAML to create account tags in DCT.
          type: string
          example: "groups"
          default: "groups"
          minLength: 1
          maxLength: 4096
        first_name_attr:
          description: First name attribute mapped on SAML used for mapping on DCT account.
          type: string
          minLength: 1
          maxLength: 4096
          default: 'firstName'
          example: 'firstName'
        last_name_attr:
          description: Last name attribute mapped on SAML used for mapping on DCT account.
          type: string
          minLength: 1
          maxLength: 4096
          default: 'lastName'
          example: 'lastName'
    MetadataDbInfo:
      title: MetadataDbInfo
      type: object
      description: Information about the product's metadata database.
      properties:
        external:
          type: boolean
          description: True if an external database, i.e a database running outside of the application cluster,
            is in use.
          example: false
        version:
          type: string
          description: The full database version in String format
          example: TODO
        database_product_name:
          type: string
          description: The database product name as reported by the database itself.
          example: TODO
        major_version:
          type: integer
          description: The database major version.
        minor_version:
          type: integer
          description: The database minor version
        min_supported_major_version:
          type: integer
          description: The minimum supported major version of PostgreSQL.
        min_supported_minor_version:
          type: integer
          description: The minimum supported minor version of PostgreSQL.
        max_supported_major_version:
          type: integer
          description: The maximum supported major version of PostgreSQL.
        max_supported_minor_version:
          type: integer
          description: The maximum supported minor version of PostgreSQL.
        compatible:
          type: boolean
          description: Whether the database is recognized as valid for this product. In order to be compatible,
            the database product name must be a recognized PostgreSQL and the database version must be
            greater than or equal to the minimum minor version and smaller than or equal to the maximum
            support version.
    LDAPConfigParams:
      title: LDAPConfigParams
      type: object
      description: Parameters to read or update LDAP Config
      properties:
        enabled:
          description: When set, these settings are enabled. True by default.
          type: boolean
          default: true
          example: true
        auto_create_users:
          description: When set, the system will automatically create new Accounts for those who have logged in using LDAP. This must be true if LDAP user is not already registered in system. True by default.
          type: boolean
          default: true
          example: true
        hostname:
          description: The hostname of the LDAP server.
          type: string
          example: "ldap.server.com"
        port:
          description: The port of the LDAP server. Default port is 389 for non-SSL and 636 for SSL.
          type: integer
          minimum: 0
          maximum: 65535
          example: 389
        domains:
          description: DCT will try to authenticate using each Domain given in this list.
          type: array
          items:
            $ref: '#/components/schemas/Domain'
          minItems: 1
        enable_ssl:
          description: True if LDAP should be used over SSL.
          type: boolean
          example: false
          default: true
        truststore_filename:
          description: File name of a truststore which can be used to validate the TLS certificate of the LDAP server. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          type: string
          minLength: 1
          maxLength: 1024
          pattern: '^[a-zA-Z0-9_\.\-]+$'
        truststore_password:
          x-dct-toolkit-credential-field: true
          description: Password for reading trustStore file provided in 'truststore_filename' property
          type: string
          minLength: 1
          maxLength: 1024
        insecure_ssl:
          description: |
            Allow connections to the LDAP server over LDAPS without validating the TLS certificate. Even though
            the connection to the server might be performed over LDAPS, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this server. Instead,
            consider creating a truststore with a Certificate Authority to validate the server's certificate,
            and set the truststore_filename property.
          type: boolean
          default: false
        unsafe_ssl_hostname_check:
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the LDAP server over LDAPS.
            Setting this value must only be done if the TLS certificate of the server does not match the hostname,
            and the TLS configuration of the server cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this server.
            This is ignored if insecure_ssl is set.
          type: boolean
          default: false
    ProductInfo:
      title: ProductInfoResponse
      type: object
      description: Product Information Response
      properties:
        api_version:
          description: Current API version.
          type: string
          example: 1.0.0
        product_version:
          description: Current installed product version.
          type: string
          example: 1.0.0
        system_uuid:
          description: System UUID
          type: string
        product_upgrade_history:
          description: Product upgrade history.
          type: array
          items:
            $ref: '#/components/schemas/ProductHistory'
        supported_api_versions:
          description: All the supported API versions.
          type: array
          items:
            type: string
    ProductHistory:
      properties:
        version:
          description: Product Version.
          type: string
          example: 1.0.0
        installed_on:
          description: This version installed on date.
          type: string
          format: date-time
          example: 2022-05-22T09:15:30Z
    BundleUploadEvent:
      type: object
      description: Bundle Upload Event
      properties:
        id:
          description: The ID of the bundle generation event.
          type: string
        generationStartTime:
          description: The time when the bundle generation started.
          type: string
          format: date-time
        generationEndTime:
          description: The time when the bundle generation ended.
          type: string
          format: date-time
        allGapsFilled:
          description: True if the bundle was fully built, False if it was trimmed short due to constraints
          type: boolean
        dataDates:
          description: The list of dates for which the data is included in the bundle.
          type: array
          items:
            type: string
            format: date
    ProxyConfiguration:
      type: object
      description: Web proxy configuration that is used to communicate with Delphix Corp. for support, troubleshooting, upgrades, updates, and patches.
      required:
        - host
        - port
        - enabled
      properties:
        host:
          description: The host name or IP address of the proxy server.
          type: string
          example: "proxy.server.com"
        port:
          description: The port number of the proxy server.
          type: integer
          example: 3128
        username:
          description: The username to use when authenticating with the proxy server.
          type: string
          example: "proxy-user"
        password:
          description: The password to use when authenticating with the proxy server.
          type: string
          x-dct-toolkit-credential-field: true
          example: "proxy-password"
        enabled:
          description: When set, these settings are enabled. True by default.
          type: boolean
          example: true
        truststore_filename:
          description: File name of a truststore which can be used to validate the TLS certificate of the proxy server. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          type: string
          maxLength: 1024
          pattern: '^$|^[a-zA-Z0-9_\.\-]+$'
        truststore_password:
          description: Password for reading trustStore file provided in 'truststore_filename' property
          type: string
          maxLength: 1024
          x-dct-toolkit-credential-field: true
    ProductRegistrationOfflinePayload:
      type: object
      description: Product registration object for a manually generated payload.
      required:
        - data_key
        - authentication_token
      properties:
        data_key:
          type: string
          x-dct-toolkit-credential-field: true
        authentication_token:
          type: string
          x-dct-toolkit-credential-field: true
    ProductRegistrationOnlinePayload:
      type: object
      description: Product registration object for a manually generated payload.
      required:
        - token
      properties:
        token:
          type: string
          x-dct-toolkit-credential-field: true
    GlobalProperties:
      title: GlobalProperties
      type: object
      description: Global properties response.
      properties:
        disable_username_password:
          description: Property to define either username & password based authentication disabled or not.
          type: boolean
        phonehome_upload_cadence:
          description: Property to define the phonehome bundle upload cadence, in days, if Delphix services are reachable.
          type: integer
          minimum: 1
          maximum: 30
        phonehome_maximum_transfer_size:
          description: Property to define the maximum uncompressed bundle transfer size, in bytes, for phonehome.
          type: integer
          minimum: 1048576
          maximum: 1073741824
    APIClassificationConfig:
      title: APIClassificationConfig
      type: object
      description: Api Classification Config.
      properties:
        version:
          description: Api Classification Config Version.
          type: string
          example: 1.0.0
        api_classification:
          description: The classification of each APIs, either it is automation or not.
          type: array
          items:
            $ref: '#/components/schemas/ApiClassificationObject'
    AutoTaggingConfig:
      x-internal: true
      title: AutoTaggingConfig
      type: object
      description: Configuration settings for auto tagging.
      properties:
        enable_virtualization_dataset_groups:
          description: Include dataset group names as tags for dSources, VDBs, CDBs, and vCDBs.
          type: boolean
          example: true
        enable_masking_environments:
          description: Include masking environment names as tags for masking Jobs, Connectors, and Rulesets.
          type: boolean
          example: true
        enable_masking_applications:
          description: Include masking app names as tags for masking Jobs, Connectors, and Rulesets.
          type: boolean
          example: true
    EngineRegistrationParameter:
      title: EngineRegistrationParameter
      type: object
      description: Parameters to register and authenticate an engine.
      required:
        - name
        - hostname
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 256
        hostname:
          type: string
          minLength: 1
          maxLength: 256
        username:
          description: The virtualization domain admin username.
          type: string
          nullable: true
          minLength: 1
          maxLength: 256
        password:
          x-dct-toolkit-credential-field: true
          description: The virtualization domain admin password.
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
        masking_username:
          description: The masking admin username.
          type: string
          nullable: true
          minLength: 1
          maxLength: 256
        masking_password:
          x-dct-toolkit-credential-field: true
          description: The masking admin password.
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
        hashicorp_vault_username_command_args:
          description: "Arguments to pass to the Vault CLI tool to retrieve the virtualzation username for the engine."
          example:
            - "kv"
            - "get"
            - "-field=username"
            - "kv-v2/delphix-secrets/delphixUser"
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_masking_username_command_args:
          description: "Arguments to pass to the Vault CLI tool to retrieve the masking username for the engine."
          example:
            - [ "kv", "get", "-field=username",  "kv-v2/delphix-secrets/delphixUser" ]
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_password_command_args:
          description: "Arguments to pass to the Vault CLI tool to retrieve the virtualization password for the engine."
          example:
            - "kv"
            - "get"
            - "-field=password"
            - "kv-v2/delphix-secrets/delphixUser"
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_masking_password_command_args:
          description: "Arguments to pass to the Vault CLI tool to retrieve the masking password for the engine."
          example:
            - [ "kv", "get", "-field=password",  "kv-v2/delphix-secrets/delphixUser" ]
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_id:
          description: Reference to the Hashicorp vault to use to retrieve virtualization engine credentials.
          type: integer
          format: int64
          nullable: true
        masking_hashicorp_vault_id:
          description: Reference to the Hashicorp vault to use to retrieve masking engine credentials.
          type: integer
          format: int64
          nullable: true
        insecure_ssl:
          description: |
            Allow connections to the engine over HTTPs without validating the TLS certificate. Even though
            the connection to the engine might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the engine's certificate,
            and set the truststore_filename property.
          type: boolean
          default: false
        unsafe_ssl_hostname_check:
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the engine over HTTPs.
            Setting this value must only be done if the TLS certificate of the engine does not match the hostname,
            and the TLS configuration of the engine cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this engine.
            This is ignored if insecure_ssl is set.
          type: boolean
          default: false
        truststore_filename:
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the engine. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
          pattern: '^[a-zA-Z0-9_\.\-]+$'
        truststore_password:
          x-dct-toolkit-credential-field: true
          description: |
            Password to read the truststore.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
          # There is a bug in DCT where in x-internal flag is not working for properties
          # and this is breaking dct-toolkit (check APIGW-7595 for details).
          #auto_tagging_config:
          #$ref: '#/components/schemas/AutoTaggingConfig'
        tags:
          description: The tags to be created for this engine.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    PaginatedResponseMetadata:
      type: object
      properties:
        prev_cursor:
          description: Pointer to the previous page of results. Use this value as a cursor query
            parameter in a subsequent request, along with limit, to navigate through
            the collection by virtual page.
          type: string
        next_cursor:
          description: Pointer to the next page of results. Use this value as a cursor query
            parameter in a subsequent request, along with limit, to navigate through
            the collection by virtual page.
          type: string
        total:
          description: The total number of results. This value may not be provided.
          type: integer
          format: int_64
    ConnectorTestResponse:
      title: ConnectorTestResponse
      type: object
      description: The result of the masking connector test.
      required:
        - status
        - message
      properties:
        status:
          description: Connection status, SUCCEEDED or FAILED
          type: string
          enum: [ "SUCCEEDED", "FAILED" ]
          example: "SUCCEEDED"
        message:
          description: A message describing the result of the masking connector test.
          type: string
          example: "Connection Succeeded"
    TagsRequest:
      type: object
      required:
        - tags
      properties:
        tags:
          description: Array of tags with key value pairs
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
          maxItems: 1000
          uniqueItems: true
    ScopeTagsRequest:
      type: object
      required:
        - tags
      properties:
        tags:
          description: Array of tags with key value pairs along with optional object_type and permissions
          type: array
          items:
            $ref: '#/components/schemas/ScopeTag'
          minItems: 1
          maxItems: 1000
          uniqueItems: true
    PermissionsRequest:
      type: object
      required:
        - permission_objects
      properties:
        permission_objects:
          description: Array of permissions with object type and their permission.
          type: array
          items:
            $ref: '#/components/schemas/PermissionObject'
          minItems: 1
          maxItems: 1000
          uniqueItems: true
    ScopedObjectsRequest:
      type: object
      required:
        - objects
      properties:
        objects:
          description: An array of scoped objects
          type: array
          items:
            $ref: '#/components/schemas/ScopedObjectItem'
          minItems: 1
          maxItems: 1000
          uniqueItems: true
    AlwaysAllowedPermissionRequest:
      type: object
      required:
        - always_allowed_permissions
      properties:
        always_allowed_permissions:
          description: An array of always allowed permissions
          type: array
          items:
            $ref: '#/components/schemas/AlwaysAllowedPermission'
          minItems: 1
          maxItems: 1000
          uniqueItems: true
    TagsResponse:
      type: object
      properties:
        tags:
          description: Array of tags with key value pairs
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    ScopeTagsResponse:
      type: object
      properties:
        tags:
          description: Array of tags with key value pairs along with optional object_type and permissions
          type: array
          items:
            $ref: '#/components/schemas/ScopeTag'
    ScopedObjectItemsResponse:
      type: object
      properties:
        objects:
          description: Array of access group scope objects with object id and object type
          type: array
          items:
            $ref: '#/components/schemas/ScopedObjectItem'
    DeleteTag:
      type: object
      properties:
        key:
          description: Key of the tag
          type: string
          minLength: 1
          maxLength: 4000
          example: 'key-1'
        value:
          description: Value of the tag
          type: string
          minLength: 1
          maxLength: 4000
          example: 'value-1'
        tags:
          description: List of tags to be deleted
          type: array
          minItems: 1
          maxItems: 1000
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
    DeleteScopeObjectTags:
      type: object
      properties:
        tags:
          description: List of scope tags to be deleted
          type: array
          minItems: 1
          maxItems: 1000
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ScopeTag'
    DeleteScopedObjectItem:
      type: object
      required:
        - objects
      properties:
        objects:
          description: List of scoped objects to be deleted
          type: array
          minItems: 1
          maxItems: 1000
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ScopedObjectItem'
    ScopeTag:
      type: object
      required:
        - key
        - value
      properties:
        key:
          description: Key of the tag
          type: string
          minLength: 1
          maxLength: 4000
          example: 'key-1'
        value:
          description: Value of the tag
          type: string
          minLength: 1
          maxLength: 4000
          example: 'value-1'
        object_type:
          $ref: '#/components/schemas/ObjectTypeEnum'
        permission:
          $ref: '#/components/schemas/PermissionEnum'
    ObjectTypeEnum:
      description: Type of the DCT object.
      type: string
      enum: [ACCESS_GROUP,ACCOUNT,ROLE,BOOKMARK,CDB,DATABASE_TEMPLATE,DSOURCE,ENGINE,ENVIRONMENT,MASKING_ENVIRONMENT,MASKING_ALGORITHM_REVISION,MASKING_JOB,MASKING_JOB_SET,REPORT_SCHEDULE,SOURCE,VAULT,VCDB,VDB,VDB_GROUP,CONNECTOR,VIRTUALIZATION_POLICY,DATASET_GROUP,ENGINE_VAULT,KERBEROS_CONFIG,TIMEFLOW,MASKING_PLUGIN,MASKING_ALGORITHM,HYPERSCALE_INSTANCE,HYPERSCALE_CONNECTOR,HYPERSCALE_DATASET,TOOLKIT, REPLICATION_PROFILE, STAGING_SOURCE]
      example: 'VDB'
    PermissionEnum:
      description: Type of the permission on DCT object.
      type: string
      enum: [READ,UPDATE,DELETE,EXECUTE,CANCEL,MIGRATE,REFRESH,DISABLE,ENABLE,ABANDON,VALIDATE,START,STOP,SNAPSHOT,COPY,REMOVE_JOB,PASSWORD_RESET,UNDO_IMPORT,IMPORT,PROVISION_FROM_BOOKMARK,PROVISION,REFRESH_FROM_BOOKMARK,REFRESH_FROM_SNAPSHOT,REFRESH_FROM_TIMESTAMP,CREATE_ENVIRONMENT,CREATE_BOOKMARK,CREATE_VDBGROUP, MANAGE_TAGS, LINK]
      example: 'READ'
    Tag:
      type: object
      required:
        - key
        - value
      properties:
        key:
          description: Key of the tag
          type: string
          minLength: 1
          maxLength: 4000
          example: 'key-1'
        value:
          description: Value of the tag
          type: string
          minLength: 1
          maxLength: 4000
          example: 'value-1'
    ScopedObjectItem:
      type: object
      required:
        - object_id
        - object_type
      properties:
        object_id:
          description: ID of the object
          type: string
          minLength: 1
          maxLength: 4000
          example: '1-VDB-OBJECT-ID'
        object_type:
          $ref: '#/components/schemas/ObjectTypeEnum'
        permission:
          $ref: '#/components/schemas/PermissionEnum'
    AlwaysAllowedPermission:
      type: object
      required:
        - object_type
        - permission
      properties:
        object_type:
          $ref: '#/components/schemas/ObjectTypeEnum'
        permission:
          $ref: '#/components/schemas/PermissionEnum'
    VirtualizationStorageSummaryData:
      required:
        - engine_id
        - engine_name
        - engine_hostname
      properties:
        engine_id:
          description: A reference to the engine.
          type: string
          minLength: 1
          example: engine-123
        engine_name:
          description: The engine name.
          type: string
          minLength: 1
          example: My Favorite Engine
        engine_hostname:
          description: The engine hostname.
          type: string
          minLength: 1
          example: "eng09.dev.delphix.com"
        total_capacity:
          description: The total amount of storage allocated for engine objects and system metadata, in bytes.
          type: integer
          format: int64
          example: 100000000000
        free_storage:
          description: The amount of available storage, in bytes.
          type: integer
          format: int64
          example: 99000000000
        used_storage:
          description: The amount of storage used by engine objects and system metadata, in bytes.
          type: integer
          format: int64
          example: 85000000000
        used_percentage:
          description: The percentage of storage used.
          type: number
          example: 75.00
        dsource_count:
          description: The number of dSources on the engine.
          type: integer
          format: int64
          example: 50
        vdb_count:
          description: The number of VDBs on the engine.
          type: integer
          format: int64
          example: 200
        total_object_count:
          description: The total number of dSources and VDBs on the engine.
          type: integer
          format: int64
          example: 400
    EngineGlobalObjectStateData:
      properties:
        engine_id:
          description: The entity ID of the engine.
          type: string
          example: "4ed2357d-f1a7-410c-b951-90f0edc1a0f6"
        engine_name:
          description: The name of the engine.
          type: string
          example: "My favorite engine"
        jobs_count:
          description: The number of masking jobs present on the engine.
          type: integer
          format: int32
          example: 10
        connectors_count:
          description: The number of connectors present on the engine.
          type: integer
          format: int32
          example: 25
        rulesets_count:
          description: The number of rulesets present on the engine.
          type: integer
          format: int32
          example: 25
        global_object_revision_hash:
          description: The revisionHash of the GLOBAL_OBJECT.
          type: string
          example: "dfb515e3d9727eebf499cb252b417efc926bad0b"
    SearchBody:
      description: Search body.
      type: object
      properties:
        filter_expression:
          type: string
          minLength: 5
          maxLength: 2000
          example: string_field CONTAINS "over" AND numberic_field GT 9000 OR string_field2 EQ "Goku"
    EngineIdBody:
      description: The ID of the registered engine.
      type: object
      properties:
        engine_id:
          type: string
          minLength: 1
          example: "1"
    ReportingScheduleCreateParameters:
      type: object
      required:
        - report_type
        - cron_expression
        - messages
        - file_format
        - enabled
        - recipients
      properties:
        report_type:
          type: string
          enum:
            - VIRTUALIZATION_STORAGE_SUMMARY
            - ENGINE_PERFORMANCE_ANALYTIC
            - VDB_INVENTORY_DATA
            - DSOURCE_USAGE_DATA
            - DSOURCE_CONSUMPTION_DATA
            - MASKING_EXECUTION_METRICS
            - AUDIT_LOGS_SUMMARY
            - STORAGE_SAVINGS_SUMMARY
          example: VIRTUALIZATION_STORAGE_SUMMARY
        cron_expression:
          type: string
          example: "0 0 2 ? * Mon-Fri"
          description: Standard cron expressions are supported e.g. 0 15 10 L * ?  - Schedule at 10:15 AM on the last day of every month, 0 0 2 ? * Mon-Fri - Schedule at 2:00 AM every Monday, Tuesday, Wednesday, Thursday and Friday. For more details kindly refer- "http://www.quartz-scheduler.org/documentation/"
        time_zone:
          type: string
          example: "America/Los_Angeles"
          description: Timezones are specified according to the Olson tzinfo database - "https://en.wikipedia.org/wiki/List_of_tz_database_time_zones".
        message:
          type: string
          example: sample message
        file_format:
          type: string
          enum:
            - CSV
          example: CSV
        enabled:
          type: boolean
          default: true
          example: true
        recipients:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            type: string
            format: email
            example: user@example.com
        sort_column:
          type: string
          enum:
            - engine_id
            - engine_name
            - engine_hostname
            - total_capacity
            - free_storage
            - used_storage
            - used_percentage
            - dsource_count
            - vdb_count
            - total_object_count
            - name
            - unvirtualized_space
            - actual_space
            - dependant_vdbs
            - type
            - version
            - parent_id
            - parent_name
            - creation_date
            - parent_timeflow_location
            - parent_timeflow_timestamp
            - parent_timeflow_timezone
            - enabled
            - status
            - -engine_id
            - -engine_name
            - -engine_hostname
            - -total_capacity
            - -free_storage
            - -used_storage
            - -used_percentage
            - -dsource_count
            - -vdb_count
            - -total_object_count
            - -unvirtualized_space
            - -actual_space
            - -dependant_vdbs
            - -name
            - -type
            - -version
            - -parent_id
            - -parent_name
            - -creation_date
            - -parent_timeflow_location
            - -parent_timeflow_timestamp
            - -parent_timeflow_timezone
            - -enabled
            - -status
          example: engine_name
        row_count:
          type: integer
          minimum: 1
          example: 1
        make_current_account_owner:
          type: boolean
          default: true
          description: Whether the account creating this reporting schedule must be configured as owner of the reporting schedule.
    ReportingSchedule:
      required:
        - report_type
        - cron_expression
        - messages
        - file_format
        - enabled
        - recipients
      properties:
        report_id:
          type: integer
          readOnly: true
          example: 123
        report_type:
          type: string
          enum:
            - VIRTUALIZATION_STORAGE_SUMMARY
            - ENGINE_PERFORMANCE_ANALYTIC
            - VDB_INVENTORY_DATA
            - DSOURCE_USAGE_DATA
            - DSOURCE_CONSUMPTION_DATA
            - MASKING_EXECUTION_METRICS
            - AUDIT_LOGS_SUMMARY
            - STORAGE_SAVINGS_SUMMARY
          example: VIRTUALIZATION_STORAGE_SUMMARY
        cron_expression:
          type: string
          example: "0 0 2 ? * Mon-Fri"
          description: Standard cron expressions are supported e.g. 0 15 10 L * ?  - Schedule at 10:15 AM on the last day of every month, 0 0 2 ? * Mon-Fri - Schedule at 2:00 AM every Monday, Tuesday, Wednesday, Thursday and Friday. For more details kindly refer- "http://www.quartz-scheduler.org/documentation/"
        time_zone:
          type: string
          example: "America/Los_Angeles"
          description: Timezones are specified according to the Olson tzinfo database - "https://en.wikipedia.org/wiki/List_of_tz_database_time_zones".
        message:
          type: string
          example: sample message
        file_format:
          type: string
          enum:
            - CSV
          example: CSV
        enabled:
          type: boolean
          default: true
          example: true
        recipients:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            type: string
            format: email
            example: user@example.com
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        sort_column:
          type: string
          enum:
            - engine_id
            - engine_name
            - engine_hostname
            - total_capacity
            - free_storage
            - used_storage
            - used_percentage
            - dsource_count
            - vdb_count
            - total_object_count
            - name
            - unvirtualized_space
            - actual_space
            - dependant_vdbs
            - type
            - version
            - parent_id
            - parent_name
            - creation_date
            - parent_timeflow_location
            - parent_timeflow_timestamp
            - parent_timeflow_timezone
            - enabled
            - status
            - -engine_id
            - -engine_name
            - -engine_hostname
            - -total_capacity
            - -free_storage
            - -used_storage
            - -used_percentage
            - -dsource_count
            - -vdb_count
            - -total_object_count
            - -unvirtualized_space
            - -actual_space
            - -dependant_vdbs
            - -name
            - -type
            - -version
            - -parent_id
            - -parent_name
            - -creation_date
            - -parent_timeflow_location
            - -parent_timeflow_timestamp
            - -parent_timeflow_timezone
            - -enabled
            - -status
          example: engine_name
        row_count:
          type: integer
          minimum: 1
          example: 1
    ErrorResponse:
      properties:
        error:
          description: Error code for any failure
          type: string
          minLength: 1
          maxLength: 1024
        error_description:
          description: Error description for any failure
          type: string
          minLength: 1
          maxLength: 1024
    EnableScaleTestingRequest:
      x-internal: true
      type: object
      required:
        - engines_count
      properties:
        engines_count:
          type: integer
          description: no. of times same engine needs to be registered
        virt_engines_list:
          type: array
          items:
            type: string
          description: list of virt engine hostnames to be registered engines_count times
        masking_engines_list:
          type: array
          items:
            type: string
          description: list of masking engine hostnames to be registered engines_count times
        virt_objects_count:
          type: integer
          description: no. of times to duplicate sources, containers, and timeflows
        snapshots_count:
          type: integer
          description: no. of times to duplicate snapshots
        masking_objects_count:
          type: integer
          description: no. of times to duplicate jobs, rulesets, and connectors
    SyncEnginesHyperscaleParameters:
      type: object
      description: Parameters to sync the global object from a source engine to a list of target engines registered with a Hyperscale Instance.
      required:
        - source_engine_id
        - target_engine_ids
      properties:
        source_engine_id:
          type: string
          description: The ID of the engine to copy the data from.
          minLength: 1
          maxLength: 256
          example: "1"
        target_engine_ids:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 256
          minItems: 1
          description: The IDs of the target engines to copy the data into.
          example: ["1", "2"]
    CopyMaskingJobParameters:
      type: object
      description: Parameters to copy a masking job.
      required:
        - target_engine_id
      properties:
        target_engine_id:
          type: string
          description: The ID of the engine to copy the job to.
          minLength: 1
          maxLength: 256
          example: "1"
        source_environment_id:
          type: string
          description: The ID or name of the source environment on the target engine. This only applies to On-The-Fly jobs.
          minLength: 1
          maxLength: 256
          example: "test-on-the-fly-mask1"
        target_environment_id:
          type: string
          description: The ID or name of the target environment on the target engine to copy the job into.
          minLength: 1
          maxLength: 256
          example: "prod-in-place-mask1"
        force_overwrite:
          type: boolean
          default: false
          description: Whether to overwrite objects that already exist on the target engine.
    MigrateMaskingJobParameters:
      type: object
      description: Parameters to migrate a masking job.
      required:
        - target_engine_id
      properties:
        target_engine_id:
          type: string
          description: The ID of the engine to migrate the job to.
          minLength: 1
          maxLength: 256
          example: "1"
        source_environment_id:
          type: string
          description: The ID or name of the source environment on the target engine. This only applies to On-The-Fly jobs.
          minLength: 1
          maxLength: 256
          example: "test-on-the-fly-mask1"
        target_environment_id:
          type: string
          description: The ID or name of the target environment on the target engine to migrate the job into.
          minLength: 1
          maxLength: 256
          example: "prod-in-place-mask1"
        force_overwrite:
          type: boolean
          default: false
          description: Whether to overwrite objects that already exist on the target engine.
    RemoveMaskingJobParameters:
      type: object
      description: Parameters to remove a masking job from a masking job set.
      required:
        - engine_id
      properties:
        engine_id:
          type: string
          description: The ID of the engine to remove the masking job from.
          minLength: 1
          maxLength: 256
          example: "1"
    Domain:
      type: object
      properties:
        msad_domain_name:
          description: This is used to get full DN for authentication and search. Provide this value only if server is microsoft AD.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'msad.domain.com'
        username_pattern:
          description: The username_patterns can be used to avoid providing full-dn during login. This will also be used for search of groups,email, first name and last name.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'uid={0},ou=Users'
        search_base:
          description: Search base used to search for ldap user groups. Leave this field empty if a full username_pattern is provided and server is non microsoft AD.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'DC=test,DC=delphix,DC=com'
        group_attr:
          description: Group mapped attribute on ldap side used for user group search.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'gidNumber'
        email_attr:
          description: Email mapped attribute on ldap side used for mapping on DCT side account.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'mail'
        first_name_attr:
          description: First name attribute mapped on ldap side used for mapping on DCT side account.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'cn'
        last_name_attr:
          description: Last name attribute mapped on ldap side used for mapping on DCT side account.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'sn'
        object_class_attr:
          description: The name of the objectClass on ldap side under which the user is mapped.This is used to search for the user details.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'person'
        search_attr:
          description: Search attribute mapped on ldap side using which search on ldap side will be made.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'uid'
    LdapConfigValidateParameter:
      properties:
        username:
          description: Username of the account to validate the ldap optional attributes.
          type: string
          minLength: 1
          maxLength: 1024
        password:
          x-dct-toolkit-credential-field: true
          description: Password of the account to validate the ldap optional attributes.
          type: string
          minLength: 1
          maxLength: 1024
    PhoneHomeBundleProductInfo:
      type: object
      description: Information to identify this Data Control Tower instance.
      required:
        - system_uuid
        - product_version
        - api_version
        - product_upgrade_history
      properties:
        system_uuid:
          description: A unique identifier for this Data Control Tower instance.
          type: string
          example: c67a008d-68fe-2bac-61ec-651c0720f8b1
        product_version:
          description: The currently running version of this instance of Data Control Tower.
          type: string
          example: 15.0.0
        api_version:
          description: The API version in use for this instance of Data Control Tower.
          type: string
          example: 3.9.0
        product_upgrade_history:
          description: The upgrade history of this instance of Data Control Tower.
          type: array
          items:
            $ref: '#/components/schemas/PhoneHomeBundleProductHistory'
    PhoneHomeBundleProductHistory:
      type: object
      description: The product history data included in the phonehome bundle's product information.
      required:
        - version
        - installed_on
      properties:
        version:
          description: The product version.
          type: string
          example: 15.0.0
        installed_on:
          description: The UTC time when the version was installed (ISO 8601 format)
          type: string
          example: 2024-03-05T17:17:39.512532Z
    PhoneHomeBundleRegisteredEngine:
      type: object
      description: Identification data for a Delphix Engine registered with this instance of Data Control Tower.
      required:
        - id
        - uuid
        - type
        - version
      properties:
        id:
          description: A programmatically-generated and auto-incrementing ID for the registered Delphix Engine.
          type: integer
          format: int64
        uuid:
          description: The UUID of the registered Delphix Engine.
          type: string
          nullable: true
        type:
          description: The type of registered Delphix Engine.
          type: string
          enum: [ VIRTUALIZATION, MASKING, BOTH, UNSET ]
          nullable: true
          example: VIRTUALIZATION
        version:
          description: The running version registered Delphix Engine.
          type: string
          nullable: true
    PhoneHomeBundleApiTelemetry:
      type: object
      description: Telemetry data for an HTTP API call.
      required:
        - id
        - api_endpoint
        - api_method
        - start_time
        - end_time
        - response_status
        - user_agent
        - client_name
        - is_automation
        - dct_version
        - account_id
      properties:
        id:
          description: A programmatically-generated and auto-incrementing ID number for the API call.
          type: integer
          format: int64
          nullable: true
        api_endpoint:
          description: The template of the API endpoint path that was called.
          type: string
          example: /management/engines/{engineId}
        api_method:
          description: The HTTP method used to call the API endpoint.
          type: string
          enum: [ GET, POST, PUT, PATCH, DELETE ]
          example: GET
        start_time:
          description: UTC time the API call was initiated (ISO 8601 format)
          type: string
        end_time:
          description: UTC time the API call returned a response (ISO 8601 format)
          type: string
        response_status:
          description: The HTTP status code of the response.
          type: integer
        user_agent:
          description: The value of the "User-Agent" header in the request, if present.
          type: string
          example:
            - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36
            - curl/7.55.1
            - PostmanRuntime/7.26.8
            - node
        client_name:
          description: The DCT client name (X-Dct-Client-Name HTTP header).
          type: string
        is_automation:
          description: True if the API is classified as an automation API.
          type: boolean
        dct_version:
          description: The version of this Data Control Tower instance at the time the API was called.
          type: string
        account_id:
          description: A number to distinguish the user account that performed this API call.
          type: integer
          format: int64
    PhoneHomeBundle:
      type: object
      description: A bundle containing product identification, configuration information and API telemetry records.
      required:
        - product_info
        - registered_engines
        - api_telemetry
        - dates
        - bundle_generation_time
      properties:
        product_info:
          description: Information identifying this Data Control Tower instance.
          $ref: '#/components/schemas/PhoneHomeBundleProductInfo'
        registered_engines:
          description: A list of Delphix Engines registered with this instance of Data Control Tower.
          type: array
          items:
            $ref: '#/components/schemas/PhoneHomeBundleRegisteredEngine'
        api_telemetry:
          description: A list of API telemetry records."
          type: array
          items:
            $ref: '#/components/schemas/PhoneHomeBundleApiTelemetry'
        dates:
          description: A list of dates for which telemetry data is included in this bundle.
          type: array
          items:
            type: string
            format: date
        bundle_generation_time:
          description: The UTC time at bundle generation (ISO 8601 format).
          type: string
          format: date-time

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  requestBodies:
    UploadMaskingFile:
      x-internal: true
      description: The parameters to upload a file for masking.
      content:
        multipart/form-data:
          schema:
            x-body-name: masking_file
            $ref: '#/components/schemas/MaskingFileUploadParameters'
    DeleteScopeObjectTags:
      description: The parameters to delete scope objects tags
      content:
        application/json:
          schema:
            x-body-name: environment
            $ref: '#/components/schemas/DeleteScopeObjectTags'
          examples:
            delete_all_tags:
              description: Delete all object tags for given scope - No request body required
              summary: Delete all object tags
              value: {}
            delete_multiple_tags_by_key_value:
              description: Delete tags for given list of object tags with matching key and value
              summary: Delete multiple tags by key & value
              value:
                tags:
                  - key: key-1
                    value: value-1
                  - key: key-2
                    value: value-2
    DeleteObjects:
      description: The parameters to delete scope objects
      content:
        application/json:
          schema:
            x-body-name: deleteObjects
            $ref: '#/components/schemas/DeleteScopedObjectItem'
          examples:
            delete_all_objects:
              description: Delete all objects for given scope - No request body required
              summary: Delete all objects
              value: {}
            delete_multiple_objects_by_id_and_type:
              description: Delete objects for given list with matching object ID and type
              summary: Delete multiple objects by ID & type
              value:
                objects:
                  - object_type: VDB
                    object_id: 1-VDB-OBJECT-ID
                  - object_type: ACCOUNTS
                    object_id: '1'
    DeleteTags:
      description: The parameters to delete tags
      content:
        application/json:
          schema:
            x-body-name: environment
            $ref: '#/components/schemas/DeleteTag'
          examples:
            delete_all_tags:
              description: Delete all tags for given object - No request body required
              summary: Delete all tags
              value: {}
            delete_tags_by_key:
              description: Delete all tags for given object with matching key
              summary: Delete tags by key
              value:
                key: key-1
            delete_tags_by_key_value:
              description: Delete tag for given object with matching key and value
              summary: Delete a tag by key & value
              value:
                key: key-1
                value: value-1
            delete_multiple_tags_by_key_value:
              description: Delete tags for given list of tags with matching key and value
              summary: Delete multiple tags by key & value
              value:
                tags:
                  - key: key-1
                    value: value-1
                  - key: key-2
                    value: value-2
    CreateAlgorithm:
      x-internal: true
      description: The parameters to create an algorithm.
      content:
        application/json:
          schema:
            x-body-name: algorithm
            $ref: '#/components/schemas/AlgorithmCreateParameters'
      required: true
    CreateAlgorithmRevision:
      x-internal: true
      description: The parameters to create an algorithm revision.
      content:
        application/json:
          schema:
            x-body-name: algorithm_revision
            $ref: '#/components/schemas/AlgorithmRevisionCreateParameters'
      required: true
    CreateReportingSchedule:
      description: The parameters to create a reporting schedule.
      content:
        application/json:
          schema:
            x-body-name: create_reporting_schedule_param
            $ref: "#/components/schemas/ReportingScheduleCreateParameters"
      required: true
    SearchBody:
      # Comma separated list of properties which need to be removed e.g. description,content
      x-skip-codegen-attr: description
      description: |
        A request body containing a filter expression. This enables searching
        for items matching arbitrarily complex conditions. The list of
        attributes which can be used in filter expressions is available
        in the x-filterable vendor extension.

        # Filter Expression Overview
        **Note: All keywords are case-insensitive**

        ## Comparison Operators
        | Operator | Description | Example |
        | --- | --- | --- |
        | CONTAINS | Substring or membership testing for string and list attributes respectively. | field3 CONTAINS 'foobar', field4 CONTAINS TRUE  |
        | IN | Tests if field is a member of a list literal. List can contain a maximum of 100 values | field2 IN ['Goku', 'Vegeta'] |
        | GE | Tests if a field is greater than or equal to a literal value | field1 GE 1.2e-2 |
        | GT | Tests if a field is greater than a literal value | field1 GT 1.2e-2 |
        | LE | Tests if a field is less than or equal to a literal value | field1 LE 9000 |
        | LT | Tests if a field is less than a literal value | field1 LT 9.02 |
        | NE | Tests if a field is not equal to a literal value | field1 NE 42 |
        | EQ | Tests if a field is equal to a literal value | field1 EQ 42 |

        ## Search Operator
        The SEARCH operator filters for items which have any filterable
        attribute that contains the input string as a substring, comparison
        is done case-insensitively. This is not restricted to attributes with
        string values. Specifically `SEARCH '12'` would match an item with an
        attribute with an integer value of `123`.

        ## Logical Operators
        Ordered by precedence.
        | Operator | Description | Example |
        | --- | --- | --- |
        | NOT | Logical NOT (Right associative) | NOT field1 LE 9000 |
        | AND | Logical AND (Left Associative) | field1 GT 9000 AND field2 EQ 'Goku' |
        | OR | Logical OR (Left Associative) | field1 GT 9000 OR field2 EQ 'Goku' |

        ## Grouping
        Parenthesis `()` can be used to override operator precedence.

        For example:
        NOT (field1 LT 1234 AND field2 CONTAINS 'foo')

        ## Literal Values
        | Literal      | Description | Examples |
        | --- | --- | --- |
        | Nil | Represents the absence of a value | nil, Nil, nIl, NIL |
        | Boolean | true/false boolean | true, false, True, False, TRUE, FALSE |
        | Number | Signed integer and floating point numbers. Also supports scientific notation. | 0, 1, -1, 1.2, 0.35, 1.2e-2, -1.2e+2 |
        | String | Single or double quoted | "foo", "bar", "foo bar", 'foo', 'bar', 'foo bar' |
        | Datetime | Formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) | 2018-04-27T18:39:26.397237+00:00 |
        | List | Comma-separated literals wrapped in square brackets | [0], [0, 1], ['foo', "bar"] |

        ## Limitations
        - A maximum of 8 unique identifiers may be used inside a filter expression.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SearchBody"
          examples:
            nested:
              description: |
                An example of a nested Object comparison testing that at least one repository has a
                version which is equal to 19.0.0.
              summary: Nested Object Comparison
              value:
                filter_expression: "repositories CONTAINS {version eq '19.0.0'}"
            relative:
              description: |
                An example of a relative comparison testing that field1 has a
                value which is less than 123.
              summary: Relative comparison
              value:
                filter_expression: "field1 LE 123"
            nil:
              description: |
                An example of using nil to test for the absence of a value for field2.
              summary:
                Absence of an attribute value
              value:
                filter_expression: "field2 EQ NIL"
            non-nil:
              description: |
                An example of using nil to test for the existence of a value for field2.
              summary:
                Existence of an attribute value
              value:
                filter_expression: "field2 NE NIL"
            contains:
              description: |
                An example of using the 'CONTAINS' operator to check if
                field2 contains the string 'foo'. If field2 is string valued
                then this is checking if 'foo' is a substring of field2. If
                field2 is a list of strings then this is checking if 'foo'
                is a member of the list.
              summary:
                Use of the CONTAINS operator
              value:
                filter_expression: "field2 CONTAINS 'foo'"
            in:
              description: |
                An example of using the 'IN' operator to check if field1
                is an element of a list literal.
              summary:
                Use of the IN operator
              value:
                filter_expression: "field1 IN [1, 2, 3]"
            search:
              description: |
                An example of using the 'SEARCH' operator to retrieve all elements
                for which 'foo' is a substring of a filterable attribute.
              summary:
                Use of the SEARCH operator
              value:
                filter_expression: "SEARCH 'foo'"
            parenthesis:
              description: |
                An example of parenthesis being used to group operators & override
                operator precedence.
              summary:
                Overriding operator precedence
              value:
                filter_expression: "field1 LT 1234 AND (field2 CONTAINS 'foo' OR field3 CONTAINS 'bar')"
security:
  - ApiKeyAuth: [ ]
