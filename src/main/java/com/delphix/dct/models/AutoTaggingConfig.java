/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.9.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Configuration settings for auto tagging.
 */
@ApiModel(description = "Configuration settings for auto tagging.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-03T12:50:51.668272+05:30[Asia/Kolkata]")
public class AutoTaggingConfig {
  public static final String SERIALIZED_NAME_ENABLE_VIRTUALIZATION_DATASET_GROUPS = "enable_virtualization_dataset_groups";
  @SerializedName(SERIALIZED_NAME_ENABLE_VIRTUALIZATION_DATASET_GROUPS)
  private Boolean enableVirtualizationDatasetGroups;

  public static final String SERIALIZED_NAME_ENABLE_MASKING_ENVIRONMENTS = "enable_masking_environments";
  @SerializedName(SERIALIZED_NAME_ENABLE_MASKING_ENVIRONMENTS)
  private Boolean enableMaskingEnvironments;

  public static final String SERIALIZED_NAME_ENABLE_MASKING_APPLICATIONS = "enable_masking_applications";
  @SerializedName(SERIALIZED_NAME_ENABLE_MASKING_APPLICATIONS)
  private Boolean enableMaskingApplications;


  public AutoTaggingConfig enableVirtualizationDatasetGroups(Boolean enableVirtualizationDatasetGroups) {
    
    this.enableVirtualizationDatasetGroups = enableVirtualizationDatasetGroups;
    return this;
  }

   /**
   * Include dataset group names as tags for dSources, VDBs, CDBs, and vCDBs.
   * @return enableVirtualizationDatasetGroups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Include dataset group names as tags for dSources, VDBs, CDBs, and vCDBs.")

  public Boolean getEnableVirtualizationDatasetGroups() {
    return enableVirtualizationDatasetGroups;
  }


  public void setEnableVirtualizationDatasetGroups(Boolean enableVirtualizationDatasetGroups) {
    this.enableVirtualizationDatasetGroups = enableVirtualizationDatasetGroups;
  }


  public AutoTaggingConfig enableMaskingEnvironments(Boolean enableMaskingEnvironments) {
    
    this.enableMaskingEnvironments = enableMaskingEnvironments;
    return this;
  }

   /**
   * Include masking environment names as tags for masking Jobs, Connectors, and Rulesets.
   * @return enableMaskingEnvironments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Include masking environment names as tags for masking Jobs, Connectors, and Rulesets.")

  public Boolean getEnableMaskingEnvironments() {
    return enableMaskingEnvironments;
  }


  public void setEnableMaskingEnvironments(Boolean enableMaskingEnvironments) {
    this.enableMaskingEnvironments = enableMaskingEnvironments;
  }


  public AutoTaggingConfig enableMaskingApplications(Boolean enableMaskingApplications) {
    
    this.enableMaskingApplications = enableMaskingApplications;
    return this;
  }

   /**
   * Include masking app names as tags for masking Jobs, Connectors, and Rulesets.
   * @return enableMaskingApplications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Include masking app names as tags for masking Jobs, Connectors, and Rulesets.")

  public Boolean getEnableMaskingApplications() {
    return enableMaskingApplications;
  }


  public void setEnableMaskingApplications(Boolean enableMaskingApplications) {
    this.enableMaskingApplications = enableMaskingApplications;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoTaggingConfig autoTaggingConfig = (AutoTaggingConfig) o;
    return Objects.equals(this.enableVirtualizationDatasetGroups, autoTaggingConfig.enableVirtualizationDatasetGroups) &&
        Objects.equals(this.enableMaskingEnvironments, autoTaggingConfig.enableMaskingEnvironments) &&
        Objects.equals(this.enableMaskingApplications, autoTaggingConfig.enableMaskingApplications);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableVirtualizationDatasetGroups, enableMaskingEnvironments, enableMaskingApplications);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoTaggingConfig {\n");
    sb.append("    enableVirtualizationDatasetGroups: ").append(toIndentedString(enableVirtualizationDatasetGroups)).append("\n");
    sb.append("    enableMaskingEnvironments: ").append(toIndentedString(enableMaskingEnvironments)).append("\n");
    sb.append("    enableMaskingApplications: ").append(toIndentedString(enableMaskingApplications)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

