/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.9.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

/**
 * Bundle Upload Event
 */
@ApiModel(description = "Bundle Upload Event")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-03T12:50:51.668272+05:30[Asia/Kolkata]")
public class BundleUploadEvent {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_GENERATION_START_TIME = "generationStartTime";
  @SerializedName(SERIALIZED_NAME_GENERATION_START_TIME)
  private OffsetDateTime generationStartTime;

  public static final String SERIALIZED_NAME_GENERATION_END_TIME = "generationEndTime";
  @SerializedName(SERIALIZED_NAME_GENERATION_END_TIME)
  private OffsetDateTime generationEndTime;

  public static final String SERIALIZED_NAME_ALL_GAPS_FILLED = "allGapsFilled";
  @SerializedName(SERIALIZED_NAME_ALL_GAPS_FILLED)
  private Boolean allGapsFilled;

  public static final String SERIALIZED_NAME_DATA_DATES = "dataDates";
  @SerializedName(SERIALIZED_NAME_DATA_DATES)
  private List<LocalDate> dataDates = null;


  public BundleUploadEvent id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the bundle generation event.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the bundle generation event.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public BundleUploadEvent generationStartTime(OffsetDateTime generationStartTime) {
    
    this.generationStartTime = generationStartTime;
    return this;
  }

   /**
   * The time when the bundle generation started.
   * @return generationStartTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time when the bundle generation started.")

  public OffsetDateTime getGenerationStartTime() {
    return generationStartTime;
  }


  public void setGenerationStartTime(OffsetDateTime generationStartTime) {
    this.generationStartTime = generationStartTime;
  }


  public BundleUploadEvent generationEndTime(OffsetDateTime generationEndTime) {
    
    this.generationEndTime = generationEndTime;
    return this;
  }

   /**
   * The time when the bundle generation ended.
   * @return generationEndTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time when the bundle generation ended.")

  public OffsetDateTime getGenerationEndTime() {
    return generationEndTime;
  }


  public void setGenerationEndTime(OffsetDateTime generationEndTime) {
    this.generationEndTime = generationEndTime;
  }


  public BundleUploadEvent allGapsFilled(Boolean allGapsFilled) {
    
    this.allGapsFilled = allGapsFilled;
    return this;
  }

   /**
   * True if the bundle was fully built, False if it was trimmed short due to constraints
   * @return allGapsFilled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the bundle was fully built, False if it was trimmed short due to constraints")

  public Boolean getAllGapsFilled() {
    return allGapsFilled;
  }


  public void setAllGapsFilled(Boolean allGapsFilled) {
    this.allGapsFilled = allGapsFilled;
  }


  public BundleUploadEvent dataDates(List<LocalDate> dataDates) {
    
    this.dataDates = dataDates;
    return this;
  }

  public BundleUploadEvent addDataDatesItem(LocalDate dataDatesItem) {
    if (this.dataDates == null) {
      this.dataDates = new ArrayList<LocalDate>();
    }
    this.dataDates.add(dataDatesItem);
    return this;
  }

   /**
   * The list of dates for which the data is included in the bundle.
   * @return dataDates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of dates for which the data is included in the bundle.")

  public List<LocalDate> getDataDates() {
    return dataDates;
  }


  public void setDataDates(List<LocalDate> dataDates) {
    this.dataDates = dataDates;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BundleUploadEvent bundleUploadEvent = (BundleUploadEvent) o;
    return Objects.equals(this.id, bundleUploadEvent.id) &&
        Objects.equals(this.generationStartTime, bundleUploadEvent.generationStartTime) &&
        Objects.equals(this.generationEndTime, bundleUploadEvent.generationEndTime) &&
        Objects.equals(this.allGapsFilled, bundleUploadEvent.allGapsFilled) &&
        Objects.equals(this.dataDates, bundleUploadEvent.dataDates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, generationStartTime, generationEndTime, allGapsFilled, dataDates);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BundleUploadEvent {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    generationStartTime: ").append(toIndentedString(generationStartTime)).append("\n");
    sb.append("    generationEndTime: ").append(toIndentedString(generationEndTime)).append("\n");
    sb.append("    allGapsFilled: ").append(toIndentedString(allGapsFilled)).append("\n");
    sb.append("    dataDates: ").append(toIndentedString(dataDates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

