/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.9.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Identification data for a Delphix Engine registered with this instance of Data Control Tower.
 */
@ApiModel(description = "Identification data for a Delphix Engine registered with this instance of Data Control Tower.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-03T12:50:51.668272+05:30[Asia/Kolkata]")
public class PhoneHomeBundleRegisteredEngine {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private String uuid;

  /**
   * The type of registered Delphix Engine.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    VIRTUALIZATION("VIRTUALIZATION"),
    
    MASKING("MASKING"),
    
    BOTH("BOTH"),
    
    UNSET("UNSET");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;


  public PhoneHomeBundleRegisteredEngine id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * A programmatically-generated and auto-incrementing ID for the registered Delphix Engine.
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A programmatically-generated and auto-incrementing ID for the registered Delphix Engine.")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public PhoneHomeBundleRegisteredEngine uuid(String uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * The UUID of the registered Delphix Engine.
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The UUID of the registered Delphix Engine.")

  public String getUuid() {
    return uuid;
  }


  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  public PhoneHomeBundleRegisteredEngine type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of registered Delphix Engine.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "VIRTUALIZATION", required = true, value = "The type of registered Delphix Engine.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public PhoneHomeBundleRegisteredEngine version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * The running version registered Delphix Engine.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The running version registered Delphix Engine.")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhoneHomeBundleRegisteredEngine phoneHomeBundleRegisteredEngine = (PhoneHomeBundleRegisteredEngine) o;
    return Objects.equals(this.id, phoneHomeBundleRegisteredEngine.id) &&
        Objects.equals(this.uuid, phoneHomeBundleRegisteredEngine.uuid) &&
        Objects.equals(this.type, phoneHomeBundleRegisteredEngine.type) &&
        Objects.equals(this.version, phoneHomeBundleRegisteredEngine.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, uuid, type, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhoneHomeBundleRegisteredEngine {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

