/*
 * Delphix DCT API
 * Delphix DCT API
 *
 * The version of the OpenAPI document: 3.9.0
 * Contact: support@delphix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.delphix.dct.models;

import java.util.Objects;
import java.util.Arrays;
import com.delphix.dct.models.HyperscaleDataTypeEnum;
import com.delphix.dct.models.Tag;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Parameters to create a Hyperscale Connector.
 */
@ApiModel(description = "Parameters to create a Hyperscale Connector.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-03T12:50:51.668272+05:30[Asia/Kolkata]")
public class HyperscaleConnectorCreateParameters {
  public static final String SERIALIZED_NAME_HYPERSCALE_INSTANCE_ID = "hyperscale_instance_id";
  @SerializedName(SERIALIZED_NAME_HYPERSCALE_INSTANCE_ID)
  private String hyperscaleInstanceId;

  public static final String SERIALIZED_NAME_DATA_TYPE = "data_type";
  @SerializedName(SERIALIZED_NAME_DATA_TYPE)
  private HyperscaleDataTypeEnum dataType;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SOURCE_USERNAME = "source_username";
  @SerializedName(SERIALIZED_NAME_SOURCE_USERNAME)
  private String sourceUsername;

  public static final String SERIALIZED_NAME_SOURCE_PASSWORD = "source_password";
  @SerializedName(SERIALIZED_NAME_SOURCE_PASSWORD)
  private String sourcePassword;

  public static final String SERIALIZED_NAME_SOURCE_JDBC_URL = "source_jdbc_url";
  @SerializedName(SERIALIZED_NAME_SOURCE_JDBC_URL)
  private String sourceJdbcUrl;

  public static final String SERIALIZED_NAME_SOURCE_MONGO_URL = "source_mongo_url";
  @SerializedName(SERIALIZED_NAME_SOURCE_MONGO_URL)
  private String sourceMongoUrl;

  public static final String SERIALIZED_NAME_SOURCE_FILESYSTEM_PATH = "source_filesystem_path";
  @SerializedName(SERIALIZED_NAME_SOURCE_FILESYSTEM_PATH)
  private String sourceFilesystemPath;

  public static final String SERIALIZED_NAME_SOURCE_CONNECTION_PROPERTIES = "source_connection_properties";
  @SerializedName(SERIALIZED_NAME_SOURCE_CONNECTION_PROPERTIES)
  private Map<String, String> sourceConnectionProperties = null;

  public static final String SERIALIZED_NAME_TARGET_USERNAME = "target_username";
  @SerializedName(SERIALIZED_NAME_TARGET_USERNAME)
  private String targetUsername;

  public static final String SERIALIZED_NAME_TARGET_PASSWORD = "target_password";
  @SerializedName(SERIALIZED_NAME_TARGET_PASSWORD)
  private String targetPassword;

  public static final String SERIALIZED_NAME_TARGET_JDBC_URL = "target_jdbc_url";
  @SerializedName(SERIALIZED_NAME_TARGET_JDBC_URL)
  private String targetJdbcUrl;

  public static final String SERIALIZED_NAME_TARGET_MONGO_URL = "target_mongo_url";
  @SerializedName(SERIALIZED_NAME_TARGET_MONGO_URL)
  private String targetMongoUrl;

  public static final String SERIALIZED_NAME_TARGET_FILESYSTEM_PATH = "target_filesystem_path";
  @SerializedName(SERIALIZED_NAME_TARGET_FILESYSTEM_PATH)
  private String targetFilesystemPath;

  public static final String SERIALIZED_NAME_TARGET_CONNECTION_PROPERTIES = "target_connection_properties";
  @SerializedName(SERIALIZED_NAME_TARGET_CONNECTION_PROPERTIES)
  private Map<String, String> targetConnectionProperties = null;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Tag> tags = null;

  public static final String SERIALIZED_NAME_MAKE_CURRENT_ACCOUNT_OWNER = "make_current_account_owner";
  @SerializedName(SERIALIZED_NAME_MAKE_CURRENT_ACCOUNT_OWNER)
  private Boolean makeCurrentAccountOwner = true;


  public HyperscaleConnectorCreateParameters hyperscaleInstanceId(String hyperscaleInstanceId) {
    
    this.hyperscaleInstanceId = hyperscaleInstanceId;
    return this;
  }

   /**
   * The ID of the Hyperscale instance of this Connector.
   * @return hyperscaleInstanceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the Hyperscale instance of this Connector.")

  public String getHyperscaleInstanceId() {
    return hyperscaleInstanceId;
  }


  public void setHyperscaleInstanceId(String hyperscaleInstanceId) {
    this.hyperscaleInstanceId = hyperscaleInstanceId;
  }


  public HyperscaleConnectorCreateParameters dataType(HyperscaleDataTypeEnum dataType) {
    
    this.dataType = dataType;
    return this;
  }

   /**
   * Get dataType
   * @return dataType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HyperscaleDataTypeEnum getDataType() {
    return dataType;
  }


  public void setDataType(HyperscaleDataTypeEnum dataType) {
    this.dataType = dataType;
  }


  public HyperscaleConnectorCreateParameters name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public HyperscaleConnectorCreateParameters sourceUsername(String sourceUsername) {
    
    this.sourceUsername = sourceUsername;
    return this;
  }

   /**
   * The username this Connector will use to connect to the source database.
   * @return sourceUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The username this Connector will use to connect to the source database.")

  public String getSourceUsername() {
    return sourceUsername;
  }


  public void setSourceUsername(String sourceUsername) {
    this.sourceUsername = sourceUsername;
  }


  public HyperscaleConnectorCreateParameters sourcePassword(String sourcePassword) {
    
    this.sourcePassword = sourcePassword;
    return this;
  }

   /**
   * The password this Connector will use to connect to the source database.
   * @return sourcePassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The password this Connector will use to connect to the source database.")

  public String getSourcePassword() {
    return sourcePassword;
  }


  public void setSourcePassword(String sourcePassword) {
    this.sourcePassword = sourcePassword;
  }


  public HyperscaleConnectorCreateParameters sourceJdbcUrl(String sourceJdbcUrl) {
    
    this.sourceJdbcUrl = sourceJdbcUrl;
    return this;
  }

   /**
   * The JDBC URL used to connect to the source database.
   * @return sourceJdbcUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The JDBC URL used to connect to the source database.")

  public String getSourceJdbcUrl() {
    return sourceJdbcUrl;
  }


  public void setSourceJdbcUrl(String sourceJdbcUrl) {
    this.sourceJdbcUrl = sourceJdbcUrl;
  }


  public HyperscaleConnectorCreateParameters sourceMongoUrl(String sourceMongoUrl) {
    
    this.sourceMongoUrl = sourceMongoUrl;
    return this;
  }

   /**
   * The MongoDB URL used to connect to the source database.
   * @return sourceMongoUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "mongodb://host:27017", value = "The MongoDB URL used to connect to the source database.")

  public String getSourceMongoUrl() {
    return sourceMongoUrl;
  }


  public void setSourceMongoUrl(String sourceMongoUrl) {
    this.sourceMongoUrl = sourceMongoUrl;
  }


  public HyperscaleConnectorCreateParameters sourceFilesystemPath(String sourceFilesystemPath) {
    
    this.sourceFilesystemPath = sourceFilesystemPath;
    return this;
  }

   /**
   * The path on the filesystem where source files must be read (Delimited files Only).
   * @return sourceFilesystemPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path on the filesystem where source files must be read (Delimited files Only).")

  public String getSourceFilesystemPath() {
    return sourceFilesystemPath;
  }


  public void setSourceFilesystemPath(String sourceFilesystemPath) {
    this.sourceFilesystemPath = sourceFilesystemPath;
  }


  public HyperscaleConnectorCreateParameters sourceConnectionProperties(Map<String, String> sourceConnectionProperties) {
    
    this.sourceConnectionProperties = sourceConnectionProperties;
    return this;
  }

  public HyperscaleConnectorCreateParameters putSourceConnectionPropertiesItem(String key, String sourceConnectionPropertiesItem) {
    if (this.sourceConnectionProperties == null) {
      this.sourceConnectionProperties = new HashMap<String, String>();
    }
    this.sourceConnectionProperties.put(key, sourceConnectionPropertiesItem);
    return this;
  }

   /**
   * Get sourceConnectionProperties
   * @return sourceConnectionProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getSourceConnectionProperties() {
    return sourceConnectionProperties;
  }


  public void setSourceConnectionProperties(Map<String, String> sourceConnectionProperties) {
    this.sourceConnectionProperties = sourceConnectionProperties;
  }


  public HyperscaleConnectorCreateParameters targetUsername(String targetUsername) {
    
    this.targetUsername = targetUsername;
    return this;
  }

   /**
   * The username this Connector will use to connect to the target database.
   * @return targetUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The username this Connector will use to connect to the target database.")

  public String getTargetUsername() {
    return targetUsername;
  }


  public void setTargetUsername(String targetUsername) {
    this.targetUsername = targetUsername;
  }


  public HyperscaleConnectorCreateParameters targetPassword(String targetPassword) {
    
    this.targetPassword = targetPassword;
    return this;
  }

   /**
   * The username this Connector will use to connect to the target database.
   * @return targetPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The username this Connector will use to connect to the target database.")

  public String getTargetPassword() {
    return targetPassword;
  }


  public void setTargetPassword(String targetPassword) {
    this.targetPassword = targetPassword;
  }


  public HyperscaleConnectorCreateParameters targetJdbcUrl(String targetJdbcUrl) {
    
    this.targetJdbcUrl = targetJdbcUrl;
    return this;
  }

   /**
   * The JDBC URL used to connect to the target database.
   * @return targetJdbcUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The JDBC URL used to connect to the target database.")

  public String getTargetJdbcUrl() {
    return targetJdbcUrl;
  }


  public void setTargetJdbcUrl(String targetJdbcUrl) {
    this.targetJdbcUrl = targetJdbcUrl;
  }


  public HyperscaleConnectorCreateParameters targetMongoUrl(String targetMongoUrl) {
    
    this.targetMongoUrl = targetMongoUrl;
    return this;
  }

   /**
   * The MongoDB URL used to connect to the target database.
   * @return targetMongoUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "mongodb://host:27017", value = "The MongoDB URL used to connect to the target database.")

  public String getTargetMongoUrl() {
    return targetMongoUrl;
  }


  public void setTargetMongoUrl(String targetMongoUrl) {
    this.targetMongoUrl = targetMongoUrl;
  }


  public HyperscaleConnectorCreateParameters targetFilesystemPath(String targetFilesystemPath) {
    
    this.targetFilesystemPath = targetFilesystemPath;
    return this;
  }

   /**
   * The path on the filesystem where target files must be written (Delimited files Only).
   * @return targetFilesystemPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path on the filesystem where target files must be written (Delimited files Only).")

  public String getTargetFilesystemPath() {
    return targetFilesystemPath;
  }


  public void setTargetFilesystemPath(String targetFilesystemPath) {
    this.targetFilesystemPath = targetFilesystemPath;
  }


  public HyperscaleConnectorCreateParameters targetConnectionProperties(Map<String, String> targetConnectionProperties) {
    
    this.targetConnectionProperties = targetConnectionProperties;
    return this;
  }

  public HyperscaleConnectorCreateParameters putTargetConnectionPropertiesItem(String key, String targetConnectionPropertiesItem) {
    if (this.targetConnectionProperties == null) {
      this.targetConnectionProperties = new HashMap<String, String>();
    }
    this.targetConnectionProperties.put(key, targetConnectionPropertiesItem);
    return this;
  }

   /**
   * Get targetConnectionProperties
   * @return targetConnectionProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getTargetConnectionProperties() {
    return targetConnectionProperties;
  }


  public void setTargetConnectionProperties(Map<String, String> targetConnectionProperties) {
    this.targetConnectionProperties = targetConnectionProperties;
  }


  public HyperscaleConnectorCreateParameters tags(List<Tag> tags) {
    
    this.tags = tags;
    return this;
  }

  public HyperscaleConnectorCreateParameters addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Tag> getTags() {
    return tags;
  }


  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }


  public HyperscaleConnectorCreateParameters makeCurrentAccountOwner(Boolean makeCurrentAccountOwner) {
    
    this.makeCurrentAccountOwner = makeCurrentAccountOwner;
    return this;
  }

   /**
   * Whether the account creating this Hyperscale Connector must be configured as owner of it.
   * @return makeCurrentAccountOwner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the account creating this Hyperscale Connector must be configured as owner of it.")

  public Boolean getMakeCurrentAccountOwner() {
    return makeCurrentAccountOwner;
  }


  public void setMakeCurrentAccountOwner(Boolean makeCurrentAccountOwner) {
    this.makeCurrentAccountOwner = makeCurrentAccountOwner;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HyperscaleConnectorCreateParameters hyperscaleConnectorCreateParameters = (HyperscaleConnectorCreateParameters) o;
    return Objects.equals(this.hyperscaleInstanceId, hyperscaleConnectorCreateParameters.hyperscaleInstanceId) &&
        Objects.equals(this.dataType, hyperscaleConnectorCreateParameters.dataType) &&
        Objects.equals(this.name, hyperscaleConnectorCreateParameters.name) &&
        Objects.equals(this.sourceUsername, hyperscaleConnectorCreateParameters.sourceUsername) &&
        Objects.equals(this.sourcePassword, hyperscaleConnectorCreateParameters.sourcePassword) &&
        Objects.equals(this.sourceJdbcUrl, hyperscaleConnectorCreateParameters.sourceJdbcUrl) &&
        Objects.equals(this.sourceMongoUrl, hyperscaleConnectorCreateParameters.sourceMongoUrl) &&
        Objects.equals(this.sourceFilesystemPath, hyperscaleConnectorCreateParameters.sourceFilesystemPath) &&
        Objects.equals(this.sourceConnectionProperties, hyperscaleConnectorCreateParameters.sourceConnectionProperties) &&
        Objects.equals(this.targetUsername, hyperscaleConnectorCreateParameters.targetUsername) &&
        Objects.equals(this.targetPassword, hyperscaleConnectorCreateParameters.targetPassword) &&
        Objects.equals(this.targetJdbcUrl, hyperscaleConnectorCreateParameters.targetJdbcUrl) &&
        Objects.equals(this.targetMongoUrl, hyperscaleConnectorCreateParameters.targetMongoUrl) &&
        Objects.equals(this.targetFilesystemPath, hyperscaleConnectorCreateParameters.targetFilesystemPath) &&
        Objects.equals(this.targetConnectionProperties, hyperscaleConnectorCreateParameters.targetConnectionProperties) &&
        Objects.equals(this.tags, hyperscaleConnectorCreateParameters.tags) &&
        Objects.equals(this.makeCurrentAccountOwner, hyperscaleConnectorCreateParameters.makeCurrentAccountOwner);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hyperscaleInstanceId, dataType, name, sourceUsername, sourcePassword, sourceJdbcUrl, sourceMongoUrl, sourceFilesystemPath, sourceConnectionProperties, targetUsername, targetPassword, targetJdbcUrl, targetMongoUrl, targetFilesystemPath, targetConnectionProperties, tags, makeCurrentAccountOwner);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HyperscaleConnectorCreateParameters {\n");
    sb.append("    hyperscaleInstanceId: ").append(toIndentedString(hyperscaleInstanceId)).append("\n");
    sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sourceUsername: ").append(toIndentedString(sourceUsername)).append("\n");
    sb.append("    sourcePassword: ").append(toIndentedString(sourcePassword)).append("\n");
    sb.append("    sourceJdbcUrl: ").append(toIndentedString(sourceJdbcUrl)).append("\n");
    sb.append("    sourceMongoUrl: ").append(toIndentedString(sourceMongoUrl)).append("\n");
    sb.append("    sourceFilesystemPath: ").append(toIndentedString(sourceFilesystemPath)).append("\n");
    sb.append("    sourceConnectionProperties: ").append(toIndentedString(sourceConnectionProperties)).append("\n");
    sb.append("    targetUsername: ").append(toIndentedString(targetUsername)).append("\n");
    sb.append("    targetPassword: ").append(toIndentedString(targetPassword)).append("\n");
    sb.append("    targetJdbcUrl: ").append(toIndentedString(targetJdbcUrl)).append("\n");
    sb.append("    targetMongoUrl: ").append(toIndentedString(targetMongoUrl)).append("\n");
    sb.append("    targetFilesystemPath: ").append(toIndentedString(targetFilesystemPath)).append("\n");
    sb.append("    targetConnectionProperties: ").append(toIndentedString(targetConnectionProperties)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    makeCurrentAccountOwner: ").append(toIndentedString(makeCurrentAccountOwner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

